

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sun Feb 05 16:25:33 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    19   000000                     
    20                           ; Generated 17/06/2022 GMT
    21                           ; 
    22                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC18F57Q43 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54   000000                     
    55                           	psect	idataCOMRAM
    56   0028BC                     __pidataCOMRAM:
    57                           	callstack 0
    58                           
    59                           ;initializer for _Display1
    60   0028BC  03                 	db	3
    61   0028BD  04                 	db	4
    62   0028BE  02                 	db	2
    63   0028BF  07                 	db	7
    64   0028C0  00                 	db	0
    65   0028C1  01                 	db	1
    66   0028C2  02                 	db	2
    67                           
    68                           	psect	smallconst
    69   002600                     __psmallconst:
    70                           	callstack 0
    71   002600  00                 	db	0
    72   002601                     Write_Display7seg@F16705:
    73                           	callstack 0
    74   002601  3F                 	db	63
    75   002602  06                 	db	6
    76   002603  5B                 	db	91
    77   002604  4F                 	db	79
    78   002605  66                 	db	102
    79   002606  6D                 	db	109
    80   002607  7D                 	db	125
    81   002608  07                 	db	7
    82   002609  7F                 	db	127
    83   00260A  67                 	db	103
    84   00260B                     __end_ofWrite_Display7seg@F16705:
    85                           	callstack 0
    86   000000                     _LATDbits	set	1217
    87   000000                     _ODCOND	set	1050
    88   000000                     _SLRCOND	set	1051
    89   000000                     _INLVLD	set	1052
    90   000000                     _WPUD	set	1049
    91   000000                     _TRISD	set	1225
    92   000000                     _ODCONC	set	1042
    93   000000                     _SLRCONC	set	1043
    94   000000                     _INLVLC	set	1044
    95   000000                     _WPUC	set	1041
    96   000000                     _ODCONE	set	1058
    97   000000                     _SLRCONE	set	1059
    98   000000                     _INLVLE	set	1060
    99   000000                     _WPUE	set	1057
   100   000000                     _ODCONA	set	1026
   101   000000                     _SLRCONA	set	1027
   102   000000                     _INLVLA	set	1028
   103   000000                     _WPUA	set	1025
   104   000000                     _LATD	set	1217
   105   000000                     _LATC	set	1216
   106   000000                     _LATE	set	1218
   107   000000                     _LATA	set	1214
   108   000000                     _OSCCON1	set	173
   109   000000                     _OSCFRQ	set	177
   110   000000                     _ANSELA	set	1024
   111   000000                     _TRISA	set	1222
   112   000000                     _TRISC	set	1224
   113   000000                     _TRISE	set	1226
   114   000000                     _ANSELC	set	1040
   115   000000                     _ANSELE	set	1056
   116   000000                     _LATAbits	set	1214
   117   000000                     _LATCbits	set	1216
   118   000000                     _LATEbits	set	1218
   119   000000                     _ANSELD	set	1048
   120   00260B  00                 	db	0	; dummy byte at the end
   121   000000                     
   122                           ; #config settings
   123                           
   124                           	psect	cinit
   125   002872                     __pcinit:
   126                           	callstack 0
   127   002872                     start_initialization:
   128                           	callstack 0
   129   002872                     __initialization:
   130                           	callstack 0
   131                           
   132                           ; Initialize objects allocated to COMRAM (7 bytes)
   133                           ; load TBLPTR registers with __pidataCOMRAM
   134   002872  0EBC               	movlw	low __pidataCOMRAM
   135   002874  6EF6               	movwf	tblptrl,c
   136   002876  0E28               	movlw	high __pidataCOMRAM
   137   002878  6EF7               	movwf	tblptrh,c
   138   00287A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   139   00287C  6EF8               	movwf	tblptru,c
   140   00287E  EE01  F11A         	lfsr	0,__pdataCOMRAM
   141   002882  EE10 F007          	lfsr	1,7
   142   002886                     copy_data0:
   143   002886  0009               	tblrd		*+
   144   002888  C4F5 F4EE          	movff	tablat,postinc0
   145   00288C  50E5               	movf	postdec1,w,c
   146   00288E  50E1               	movf	fsr1l,w,c
   147   002890  E1FA               	bnz	copy_data0
   148   002892                     end_of_initialization:
   149                           	callstack 0
   150   002892                     __end_of__initialization:
   151                           	callstack 0
   152   002892  0E00               	movlw	low (__Lsmallconst shr (0+16))
   153   002894  6EF8               	movwf	tblptru,c
   154   002896  0E26               	movlw	high __Lsmallconst
   155   002898  6EF7               	movwf	tblptrh,c
   156   00289A  0100               	movlb	0
   157   00289C  EF09  F014         	goto	_main	;jump to C main() function
   158                           
   159                           	psect	dataCOMRAM
   160   00051A                     __pdataCOMRAM:
   161                           	callstack 0
   162   00051A                     _Display1:
   163                           	callstack 0
   164   00051A                     	ds	7
   165                           
   166                           	psect	cstackCOMRAM
   167   000501                     __pcstackCOMRAM:
   168                           	callstack 0
   169   000501                     Write_Display7seg@D7S:
   170                           	callstack 0
   171                           
   172                           ; 2 bytes @ 0x0
   173   000501                     	ds	2
   174   000503                     Write_Display7seg@val:
   175                           	callstack 0
   176                           
   177                           ; 1 bytes @ 0x2
   178   000503                     	ds	1
   179   000504                     ??_Write_Display7seg:
   180                           
   181                           ; 1 bytes @ 0x3
   182   000504                     	ds	2
   183   000506                     Write_Display7seg@Display_7Seg_C:
   184                           	callstack 0
   185                           
   186                           ; 10 bytes @ 0x5
   187   000506                     	ds	10
   188   000510                     Write_Display7seg@data:
   189                           	callstack 0
   190                           
   191                           ; 1 bytes @ 0xF
   192   000510                     	ds	1
   193   000511                     
   194                           ; 2 bytes @ 0x10
   195   000511                     	ds	2
   196   000513                     
   197                           ; 3 bytes @ 0x12
   198   000513                     	ds	3
   199   000516                     ??_main:
   200                           
   201                           ; 1 bytes @ 0x15
   202   000516                     	ds	2
   203   000518                     main@i:
   204                           	callstack 0
   205                           
   206                           ; 2 bytes @ 0x17
   207   000518                     	ds	2
   208                           
   209 ;;
   210 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   211 ;;
   212 ;; *************** function _main *****************
   213 ;; Defined at:
   214 ;;		line 16 in file "main.c"
   215 ;; Parameters:    Size  Location     Type
   216 ;;  argc            2   16[COMRAM] int 
   217 ;;  argv            3   18[COMRAM] PTR PTR unsigned char 
   218 ;; Auto vars:     Size  Location     Type
   219 ;;  i               2   23[COMRAM] int 
   220 ;; Return value:  Size  Location     Type
   221 ;;                  2   16[COMRAM] int 
   222 ;; Registers used:
   223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   224 ;; Tracked objects:
   225 ;;		On entry : 0/0
   226 ;;		On exit  : 0/0
   227 ;;		Unchanged: 0/0
   228 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   229 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   231 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   232 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   233 ;;Total ram usage:        9 bytes
   234 ;; Hardware stack levels required when called: 2
   235 ;; This function calls:
   236 ;;		_ConfiGPIO
   237 ;;		_ConfigClock
   238 ;;		_Write_Display7seg
   239 ;; This function is called by:
   240 ;;		Startup code after reset
   241 ;; This function uses a non-reentrant model
   242 ;;
   243                           
   244                           	psect	text0
   245   002812                     __ptext0:
   246                           	callstack 0
   247   002812                     _main:
   248                           	callstack 125
   249   002812                     
   250                           ;main.c: 18:     ConfigClock();
   251   002812  EC58  F014         	call	_ConfigClock	;wreg free
   252   002816                     
   253                           ;main.c: 19:     ConfiGPIO();
   254   002816  ECD6  F013         	call	_ConfiGPIO	;wreg free
   255   00281A                     l908:
   256                           
   257                           ;main.c: 23:         for (i = 0; i < 10; i++) {
   258   00281A  0E00               	movlw	0
   259   00281C  6E19               	movwf	(main@i+1)^(0+1280),c
   260   00281E  0E00               	movlw	0
   261   002820  6E18               	movwf	main@i^(0+1280),c
   262   002822                     l914:
   263                           
   264                           ;main.c: 24:             Write_Display7seg(&Display1,i);
   265   002822  0E1A               	movlw	low _Display1
   266   002824  6E01               	movwf	Write_Display7seg@D7S^(0+1280),c
   267   002826  0E05               	movlw	high _Display1
   268   002828  6E02               	movwf	(Write_Display7seg@D7S+1)^(0+1280),c
   269   00282A  C518  F503         	movff	main@i,Write_Display7seg@val
   270   00282E  EC06  F013         	call	_Write_Display7seg	;wreg free
   271   002832                     
   272                           ;main.c: 25:             _delay((unsigned long)((800)*(64000000UL/4000.0)));
   273   002832  0E41               	movlw	65
   274   002834  6E17               	movwf	(??_main+1)^(0+1280),c
   275   002836  0EF0               	movlw	240
   276   002838  6E16               	movwf	??_main^(0+1280),c
   277   00283A  0E33               	movlw	51
   278   00283C                     u337:
   279   00283C  2EE8               	decfsz	wreg,f,c
   280   00283E  D7FE               	bra	u337
   281   002840  2E16               	decfsz	??_main^(0+1280),f,c
   282   002842  D7FC               	bra	u337
   283   002844  2E17               	decfsz	(??_main+1)^(0+1280),f,c
   284   002846  D7FA               	bra	u337
   285   002848  F000               	nop	
   286   00284A                     
   287                           ;main.c: 27:         }
   288   00284A  4A18               	infsnz	main@i^(0+1280),f,c
   289   00284C  2A19               	incf	(main@i+1)^(0+1280),f,c
   290   00284E  BE19               	btfsc	(main@i+1)^(0+1280),7,c
   291   002850  EF33  F014         	goto	u321
   292   002854  5019               	movf	(main@i+1)^(0+1280),w,c
   293   002856  E109               	bnz	u320
   294   002858  0E0A               	movlw	10
   295   00285A  5C18               	subwf	main@i^(0+1280),w,c
   296   00285C  A0D8               	btfss	status,0,c
   297   00285E  EF33  F014         	goto	u321
   298   002862  EF35  F014         	goto	u320
   299   002866                     u321:
   300   002866  EF11  F014         	goto	l914
   301   00286A                     u320:
   302   00286A  EF0D  F014         	goto	l908
   303   00286E  EFFE  F0FF         	goto	start
   304   002872                     __end_of_main:
   305                           	callstack 0
   306                           
   307 ;; *************** function _Write_Display7seg *****************
   308 ;; Defined at:
   309 ;;		line 5 in file "DIS_7SEG.c"
   310 ;; Parameters:    Size  Location     Type
   311 ;;  D7S             2    0[COMRAM] PTR struct .
   312 ;;		 -> Display1(7), 
   313 ;;  val             1    2[COMRAM] unsigned char 
   314 ;; Auto vars:     Size  Location     Type
   315 ;;  Display_7Seg   10    5[COMRAM] const unsigned char [10]
   316 ;;  data            1   15[COMRAM] unsigned char 
   317 ;; Return value:  Size  Location     Type
   318 ;;                  1    wreg      void 
   319 ;; Registers used:
   320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   321 ;; Tracked objects:
   322 ;;		On entry : 0/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   326 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   327 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   328 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   329 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   330 ;;Total ram usage:       16 bytes
   331 ;; Hardware stack levels used: 1
   332 ;; Hardware stack levels required when called: 1
   333 ;; This function calls:
   334 ;;		_Reset_Display7seg
   335 ;; This function is called by:
   336 ;;		_main
   337 ;; This function uses a non-reentrant model
   338 ;;
   339                           
   340                           	psect	text1
   341   00260C                     __ptext1:
   342                           	callstack 0
   343   00260C                     _Write_Display7seg:
   344                           	callstack 125
   345   00260C                     
   346                           ;DIS_7SEG.c: 7:     const uint8_t Display_7Seg_C[] = {0x3F, 0X06 ,0X5B ,0x4f,0X66 ,0X6D,
      +                           0X7D, 0X07 ,0X7F, 0X67};
   347   00260C  0E01               	movlw	low Write_Display7seg@F16705
   348   00260E  6EF6               	movwf	tblptrl,c
   349   002610                     	if	0	;There is only one active tblptr byte
   350   002610                     	endif
   351   002610                     	if	0	;There are less than 3 active tblptr bytes
   352   002610                     	endif
   353   002610  EE21  F106         	lfsr	2,Write_Display7seg@Display_7Seg_C
   354   002614  0E09               	movlw	9
   355   002616                     u170:
   356   002616  0009               	tblrd		*+
   357   002618  C4F5 F4DE          	movff	tablat,postinc2
   358   00261C  06E8               	decf	wreg,f,c
   359   00261E  E2FB               	bc	u170
   360   002620                     
   361                           ;DIS_7SEG.c: 9:     uint8_t data=Display_7Seg_C[val];
   362   002620  0E06               	movlw	low Write_Display7seg@Display_7Seg_C
   363   002622  2403               	addwf	Write_Display7seg@val^(0+1280),w,c
   364   002624  6ED9               	movwf	fsr2l,c
   365   002626  6ADA               	clrf	fsr2h,c
   366   002628  0E05               	movlw	high Write_Display7seg@Display_7Seg_C
   367   00262A  22DA               	addwfc	fsr2h,f,c
   368   00262C  50DF               	movf	indf2,w,c
   369   00262E  6E10               	movwf	Write_Display7seg@data^(0+1280),c
   370   002630                     
   371                           ;DIS_7SEG.c: 10:     Reset_Display7seg();
   372   002630  EC50  F014         	call	_Reset_Display7seg	;wreg free
   373   002634                     
   374                           ;DIS_7SEG.c: 11:     if(data & 0x1) LATA |= 1<<D7S->a;
   375   002634  A010               	btfss	Write_Display7seg@data^(0+1280),0,c
   376   002636  EF1F  F013         	goto	u181
   377   00263A  EF21  F013         	goto	u180
   378   00263E                     u181:
   379   00263E  EF33  F013         	goto	l878
   380   002642                     u180:
   381   002642  C501  F4D9         	movff	Write_Display7seg@D7S,fsr2l
   382   002646  C502  F4DA         	movff	Write_Display7seg@D7S+1,fsr2h
   383   00264A  50DF               	movf	indf2,w,c
   384   00264C  6E04               	movwf	??_Write_Display7seg^(0+1280),c
   385   00264E  0E01               	movlw	1
   386   002650  6E05               	movwf	(??_Write_Display7seg+1)^(0+1280),c
   387   002652  2A04               	incf	??_Write_Display7seg^(0+1280),f,c
   388   002654  EF2E  F013         	goto	u194
   389   002658                     u195:
   390   002658  90D8               	bcf	status,0,c
   391   00265A  3605               	rlcf	(??_Write_Display7seg+1)^(0+1280),f,c
   392   00265C                     u194:
   393   00265C  2E04               	decfsz	??_Write_Display7seg^(0+1280),f,c
   394   00265E  EF2C  F013         	goto	u195
   395   002662  5005               	movf	(??_Write_Display7seg+1)^(0+1280),w,c
   396   002664  12BE               	iorwf	190,f,c	;volatile
   397   002666                     l878:
   398                           
   399                           ;DIS_7SEG.c: 12:     if(data & 1<<1) LATA |= 1<<D7S->b;
   400   002666  A210               	btfss	Write_Display7seg@data^(0+1280),1,c
   401   002668  EF38  F013         	goto	u201
   402   00266C  EF3A  F013         	goto	u200
   403   002670                     u201:
   404   002670  EF4E  F013         	goto	l882
   405   002674                     u200:
   406   002674  EE20 F001          	lfsr	2,1
   407   002678  5001               	movf	Write_Display7seg@D7S^(0+1280),w,c
   408   00267A  26D9               	addwf	fsr2l,f,c
   409   00267C  5002               	movf	(Write_Display7seg@D7S+1)^(0+1280),w,c
   410   00267E  22DA               	addwfc	fsr2h,f,c
   411   002680  50DF               	movf	indf2,w,c
   412   002682  6E04               	movwf	??_Write_Display7seg^(0+1280),c
   413   002684  0E01               	movlw	1
   414   002686  6E05               	movwf	(??_Write_Display7seg+1)^(0+1280),c
   415   002688  2A04               	incf	??_Write_Display7seg^(0+1280),f,c
   416   00268A  EF49  F013         	goto	u214
   417   00268E                     u215:
   418   00268E  90D8               	bcf	status,0,c
   419   002690  3605               	rlcf	(??_Write_Display7seg+1)^(0+1280),f,c
   420   002692                     u214:
   421   002692  2E04               	decfsz	??_Write_Display7seg^(0+1280),f,c
   422   002694  EF47  F013         	goto	u215
   423   002698  5005               	movf	(??_Write_Display7seg+1)^(0+1280),w,c
   424   00269A  12BE               	iorwf	190,f,c	;volatile
   425   00269C                     l882:
   426                           
   427                           ;DIS_7SEG.c: 13:     if(data & 1<<2) LATE |= 1<<D7S->c;
   428   00269C  A410               	btfss	Write_Display7seg@data^(0+1280),2,c
   429   00269E  EF53  F013         	goto	u221
   430   0026A2  EF55  F013         	goto	u220
   431   0026A6                     u221:
   432   0026A6  EF69  F013         	goto	l886
   433   0026AA                     u220:
   434   0026AA  EE20 F002          	lfsr	2,2
   435   0026AE  5001               	movf	Write_Display7seg@D7S^(0+1280),w,c
   436   0026B0  26D9               	addwf	fsr2l,f,c
   437   0026B2  5002               	movf	(Write_Display7seg@D7S+1)^(0+1280),w,c
   438   0026B4  22DA               	addwfc	fsr2h,f,c
   439   0026B6  50DF               	movf	indf2,w,c
   440   0026B8  6E04               	movwf	??_Write_Display7seg^(0+1280),c
   441   0026BA  0E01               	movlw	1
   442   0026BC  6E05               	movwf	(??_Write_Display7seg+1)^(0+1280),c
   443   0026BE  2A04               	incf	??_Write_Display7seg^(0+1280),f,c
   444   0026C0  EF64  F013         	goto	u234
   445   0026C4                     u235:
   446   0026C4  90D8               	bcf	status,0,c
   447   0026C6  3605               	rlcf	(??_Write_Display7seg+1)^(0+1280),f,c
   448   0026C8                     u234:
   449   0026C8  2E04               	decfsz	??_Write_Display7seg^(0+1280),f,c
   450   0026CA  EF62  F013         	goto	u235
   451   0026CE  5005               	movf	(??_Write_Display7seg+1)^(0+1280),w,c
   452   0026D0  12C2               	iorwf	194,f,c	;volatile
   453   0026D2                     l886:
   454                           
   455                           ;DIS_7SEG.c: 14:     if(data & 1<<3) LATC |= 1<<D7S->d;
   456   0026D2  A610               	btfss	Write_Display7seg@data^(0+1280),3,c
   457   0026D4  EF6E  F013         	goto	u241
   458   0026D8  EF70  F013         	goto	u240
   459   0026DC                     u241:
   460   0026DC  EF84  F013         	goto	l890
   461   0026E0                     u240:
   462   0026E0  EE20 F003          	lfsr	2,3
   463   0026E4  5001               	movf	Write_Display7seg@D7S^(0+1280),w,c
   464   0026E6  26D9               	addwf	fsr2l,f,c
   465   0026E8  5002               	movf	(Write_Display7seg@D7S+1)^(0+1280),w,c
   466   0026EA  22DA               	addwfc	fsr2h,f,c
   467   0026EC  50DF               	movf	indf2,w,c
   468   0026EE  6E04               	movwf	??_Write_Display7seg^(0+1280),c
   469   0026F0  0E01               	movlw	1
   470   0026F2  6E05               	movwf	(??_Write_Display7seg+1)^(0+1280),c
   471   0026F4  2A04               	incf	??_Write_Display7seg^(0+1280),f,c
   472   0026F6  EF7F  F013         	goto	u254
   473   0026FA                     u255:
   474   0026FA  90D8               	bcf	status,0,c
   475   0026FC  3605               	rlcf	(??_Write_Display7seg+1)^(0+1280),f,c
   476   0026FE                     u254:
   477   0026FE  2E04               	decfsz	??_Write_Display7seg^(0+1280),f,c
   478   002700  EF7D  F013         	goto	u255
   479   002704  5005               	movf	(??_Write_Display7seg+1)^(0+1280),w,c
   480   002706  12C0               	iorwf	192,f,c	;volatile
   481   002708                     l890:
   482                           
   483                           ;DIS_7SEG.c: 15:     if(data & 1<<4) LATD |= 1<<D7S->e;
   484   002708  A810               	btfss	Write_Display7seg@data^(0+1280),4,c
   485   00270A  EF89  F013         	goto	u261
   486   00270E  EF8B  F013         	goto	u260
   487   002712                     u261:
   488   002712  EF9F  F013         	goto	l894
   489   002716                     u260:
   490   002716  EE20 F004          	lfsr	2,4
   491   00271A  5001               	movf	Write_Display7seg@D7S^(0+1280),w,c
   492   00271C  26D9               	addwf	fsr2l,f,c
   493   00271E  5002               	movf	(Write_Display7seg@D7S+1)^(0+1280),w,c
   494   002720  22DA               	addwfc	fsr2h,f,c
   495   002722  50DF               	movf	indf2,w,c
   496   002724  6E04               	movwf	??_Write_Display7seg^(0+1280),c
   497   002726  0E01               	movlw	1
   498   002728  6E05               	movwf	(??_Write_Display7seg+1)^(0+1280),c
   499   00272A  2A04               	incf	??_Write_Display7seg^(0+1280),f,c
   500   00272C  EF9A  F013         	goto	u274
   501   002730                     u275:
   502   002730  90D8               	bcf	status,0,c
   503   002732  3605               	rlcf	(??_Write_Display7seg+1)^(0+1280),f,c
   504   002734                     u274:
   505   002734  2E04               	decfsz	??_Write_Display7seg^(0+1280),f,c
   506   002736  EF98  F013         	goto	u275
   507   00273A  5005               	movf	(??_Write_Display7seg+1)^(0+1280),w,c
   508   00273C  12C1               	iorwf	193,f,c	;volatile
   509   00273E                     l894:
   510                           
   511                           ;DIS_7SEG.c: 16:     if(data & 1<<5) LATD |= 1<<D7S->f;
   512   00273E  AA10               	btfss	Write_Display7seg@data^(0+1280),5,c
   513   002740  EFA4  F013         	goto	u281
   514   002744  EFA6  F013         	goto	u280
   515   002748                     u281:
   516   002748  EFBA  F013         	goto	l898
   517   00274C                     u280:
   518   00274C  EE20 F005          	lfsr	2,5
   519   002750  5001               	movf	Write_Display7seg@D7S^(0+1280),w,c
   520   002752  26D9               	addwf	fsr2l,f,c
   521   002754  5002               	movf	(Write_Display7seg@D7S+1)^(0+1280),w,c
   522   002756  22DA               	addwfc	fsr2h,f,c
   523   002758  50DF               	movf	indf2,w,c
   524   00275A  6E04               	movwf	??_Write_Display7seg^(0+1280),c
   525   00275C  0E01               	movlw	1
   526   00275E  6E05               	movwf	(??_Write_Display7seg+1)^(0+1280),c
   527   002760  2A04               	incf	??_Write_Display7seg^(0+1280),f,c
   528   002762  EFB5  F013         	goto	u294
   529   002766                     u295:
   530   002766  90D8               	bcf	status,0,c
   531   002768  3605               	rlcf	(??_Write_Display7seg+1)^(0+1280),f,c
   532   00276A                     u294:
   533   00276A  2E04               	decfsz	??_Write_Display7seg^(0+1280),f,c
   534   00276C  EFB3  F013         	goto	u295
   535   002770  5005               	movf	(??_Write_Display7seg+1)^(0+1280),w,c
   536   002772  12C1               	iorwf	193,f,c	;volatile
   537   002774                     l898:
   538                           
   539                           ;DIS_7SEG.c: 17:     if(data & 1<<6) LATD |= 1<<D7S->g;
   540   002774  AC10               	btfss	Write_Display7seg@data^(0+1280),6,c
   541   002776  EFBF  F013         	goto	u301
   542   00277A  EFC1  F013         	goto	u300
   543   00277E                     u301:
   544   00277E  EFD5  F013         	goto	l115
   545   002782                     u300:
   546   002782  EE20 F006          	lfsr	2,6
   547   002786  5001               	movf	Write_Display7seg@D7S^(0+1280),w,c
   548   002788  26D9               	addwf	fsr2l,f,c
   549   00278A  5002               	movf	(Write_Display7seg@D7S+1)^(0+1280),w,c
   550   00278C  22DA               	addwfc	fsr2h,f,c
   551   00278E  50DF               	movf	indf2,w,c
   552   002790  6E04               	movwf	??_Write_Display7seg^(0+1280),c
   553   002792  0E01               	movlw	1
   554   002794  6E05               	movwf	(??_Write_Display7seg+1)^(0+1280),c
   555   002796  2A04               	incf	??_Write_Display7seg^(0+1280),f,c
   556   002798  EFD0  F013         	goto	u314
   557   00279C                     u315:
   558   00279C  90D8               	bcf	status,0,c
   559   00279E  3605               	rlcf	(??_Write_Display7seg+1)^(0+1280),f,c
   560   0027A0                     u314:
   561   0027A0  2E04               	decfsz	??_Write_Display7seg^(0+1280),f,c
   562   0027A2  EFCE  F013         	goto	u315
   563   0027A6  5005               	movf	(??_Write_Display7seg+1)^(0+1280),w,c
   564   0027A8  12C1               	iorwf	193,f,c	;volatile
   565   0027AA                     l115:
   566   0027AA  0012               	return		;funcret
   567   0027AC                     __end_of_Write_Display7seg:
   568                           	callstack 0
   569                           
   570 ;; *************** function _Reset_Display7seg *****************
   571 ;; Defined at:
   572 ;;		line 23 in file "DIS_7SEG.c"
   573 ;; Parameters:    Size  Location     Type
   574 ;;		None
   575 ;; Auto vars:     Size  Location     Type
   576 ;;		None
   577 ;; Return value:  Size  Location     Type
   578 ;;                  1    wreg      void 
   579 ;; Registers used:
   580 ;;		None
   581 ;; Tracked objects:
   582 ;;		On entry : 0/0
   583 ;;		On exit  : 0/0
   584 ;;		Unchanged: 0/0
   585 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   590 ;;Total ram usage:        0 bytes
   591 ;; Hardware stack levels used: 1
   592 ;; This function calls:
   593 ;;		Nothing
   594 ;; This function is called by:
   595 ;;		_Write_Display7seg
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           	psect	text2
   600   0028A0                     __ptext2:
   601                           	callstack 0
   602   0028A0                     _Reset_Display7seg:
   603                           	callstack 125
   604   0028A0                     
   605                           ;DIS_7SEG.c: 25:     LATAbits.LATA3 =0;
   606   0028A0  96BE               	bcf	190,3,c	;volatile
   607                           
   608                           ;DIS_7SEG.c: 26:     LATAbits.LATA4 =0;
   609   0028A2  98BE               	bcf	190,4,c	;volatile
   610                           
   611                           ;DIS_7SEG.c: 27:     LATEbits.LATE2 =0;
   612   0028A4  94C2               	bcf	194,2,c	;volatile
   613                           
   614                           ;DIS_7SEG.c: 28:     LATCbits.LATC7 =0;
   615   0028A6  9EC0               	bcf	192,7,c	;volatile
   616                           
   617                           ;DIS_7SEG.c: 29:     LATDbits.LATD0 =0;
   618   0028A8  90C1               	bcf	193,0,c	;volatile
   619                           
   620                           ;DIS_7SEG.c: 30:     LATDbits.LATD1 =0;
   621   0028AA  92C1               	bcf	193,1,c	;volatile
   622                           
   623                           ;DIS_7SEG.c: 31:     LATDbits.LATD2 =0;
   624   0028AC  94C1               	bcf	193,2,c	;volatile
   625   0028AE  0012               	return		;funcret
   626   0028B0                     __end_of_Reset_Display7seg:
   627                           	callstack 0
   628                           
   629 ;; *************** function _ConfigClock *****************
   630 ;; Defined at:
   631 ;;		line 64 in file "Config.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      void 
   638 ;; Registers used:
   639 ;;		wreg, status,2
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   649 ;;Total ram usage:        0 bytes
   650 ;; Hardware stack levels used: 1
   651 ;; This function calls:
   652 ;;		Nothing
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658                           	psect	text3
   659   0028B0                     __ptext3:
   660                           	callstack 0
   661   0028B0                     _ConfigClock:
   662                           	callstack 126
   663   0028B0  0E60               	movlw	96
   664   0028B2  0100               	movlb	0	; () banked
   665   0028B4  6FAD               	movwf	173,b	;volatile
   666   0028B6  0E08               	movlw	8
   667   0028B8  6FB1               	movwf	177,b	;volatile
   668   0028BA                     
   669                           ; BSR set to: 0
   670   0028BA  0012               	return		;funcret
   671   0028BC                     __end_of_ConfigClock:
   672                           	callstack 0
   673                           
   674 ;; *************** function _ConfiGPIO *****************
   675 ;; Defined at:
   676 ;;		line 36 in file "main.c"
   677 ;; Parameters:    Size  Location     Type
   678 ;;		None
   679 ;; Auto vars:     Size  Location     Type
   680 ;;		None
   681 ;; Return value:  Size  Location     Type
   682 ;;                  1    wreg      void 
   683 ;; Registers used:
   684 ;;		status,2, status,0
   685 ;; Tracked objects:
   686 ;;		On entry : 0/0
   687 ;;		On exit  : 0/0
   688 ;;		Unchanged: 0/0
   689 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
   690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
   694 ;;Total ram usage:        0 bytes
   695 ;; Hardware stack levels used: 1
   696 ;; This function calls:
   697 ;;		Nothing
   698 ;; This function is called by:
   699 ;;		_main
   700 ;; This function uses a non-reentrant model
   701 ;;
   702                           
   703                           	psect	text4
   704   0027AC                     __ptext4:
   705                           	callstack 0
   706   0027AC                     _ConfiGPIO:
   707                           	callstack 126
   708   0027AC                     
   709                           ;main.c: 39:     TRISA &= ~(1<<3);
   710   0027AC  96C6               	bcf	198,3,c	;volatile
   711                           
   712                           ;main.c: 40:     ANSELA &= ~(1<<3);
   713   0027AE  0104               	movlb	4	; () banked
   714   0027B0  9700               	bcf	0,3,b	;volatile
   715                           
   716                           ;main.c: 41:     WPUA &= ~(1<<3);
   717   0027B2  9701               	bcf	1,3,b	;volatile
   718                           
   719                           ;main.c: 42:     INLVLA &= ~(1<<3);
   720   0027B4  9704               	bcf	4,3,b	;volatile
   721                           
   722                           ;main.c: 43:     SLRCONA |= (1<<3);
   723   0027B6  8703               	bsf	3,3,b	;volatile
   724                           
   725                           ;main.c: 44:     ODCONA &= ~(1<<3);
   726   0027B8  9702               	bcf	2,3,b	;volatile
   727   0027BA                     
   728                           ; BSR set to: 4
   729                           ;main.c: 45:     LATAbits.LATA3 =0;
   730   0027BA  96BE               	bcf	190,3,c	;volatile
   731                           
   732                           ;main.c: 48:     TRISA &= ~(1<<4);
   733   0027BC  98C6               	bcf	198,4,c	;volatile
   734                           
   735                           ;main.c: 49:     ANSELA &= ~(1<<4);
   736   0027BE  9900               	bcf	0,4,b	;volatile
   737                           
   738                           ;main.c: 50:     WPUA &= ~(1<<4);
   739   0027C0  9901               	bcf	1,4,b	;volatile
   740                           
   741                           ;main.c: 51:     INLVLA &= ~(1<<4);
   742   0027C2  9904               	bcf	4,4,b	;volatile
   743                           
   744                           ;main.c: 52:     SLRCONA |= (1<<4);
   745   0027C4  8903               	bsf	3,4,b	;volatile
   746                           
   747                           ;main.c: 53:     ODCONA &= ~(1<<4);
   748   0027C6  9902               	bcf	2,4,b	;volatile
   749   0027C8                     
   750                           ; BSR set to: 4
   751                           ;main.c: 54:     LATAbits.LATA4 =0;
   752   0027C8  98BE               	bcf	190,4,c	;volatile
   753                           
   754                           ;main.c: 57:     TRISE &= ~(1<<2);
   755   0027CA  94CA               	bcf	202,2,c	;volatile
   756                           
   757                           ;main.c: 58:     ANSELE &= ~(1<<2);
   758   0027CC  9520               	bcf	32,2,b	;volatile
   759                           
   760                           ;main.c: 59:     WPUE &= ~(1<<2);
   761   0027CE  9521               	bcf	33,2,b	;volatile
   762                           
   763                           ;main.c: 60:     INLVLE &= ~(1<<2);
   764   0027D0  9524               	bcf	36,2,b	;volatile
   765                           
   766                           ;main.c: 61:     SLRCONE |= (1<<2);
   767   0027D2  8523               	bsf	35,2,b	;volatile
   768                           
   769                           ;main.c: 62:     ODCONE &= ~(1<<2);
   770   0027D4  9522               	bcf	34,2,b	;volatile
   771   0027D6                     
   772                           ; BSR set to: 4
   773                           ;main.c: 63:     LATEbits.LATE2 =0;
   774   0027D6  94C2               	bcf	194,2,c	;volatile
   775                           
   776                           ;main.c: 66:     TRISC &= ~(1<<7);
   777   0027D8  9EC8               	bcf	200,7,c	;volatile
   778                           
   779                           ;main.c: 67:     ANSELC &= ~(1<<7);
   780   0027DA  9F10               	bcf	16,7,b	;volatile
   781                           
   782                           ;main.c: 68:     WPUC &= ~(1<<7);
   783   0027DC  9F11               	bcf	17,7,b	;volatile
   784                           
   785                           ;main.c: 69:     INLVLC &= ~(1<<7);
   786   0027DE  9F14               	bcf	20,7,b	;volatile
   787                           
   788                           ;main.c: 70:     SLRCONC |= (1<<7);
   789   0027E0  8F13               	bsf	19,7,b	;volatile
   790                           
   791                           ;main.c: 71:     ODCONC &= ~(1<<7);
   792   0027E2  9F12               	bcf	18,7,b	;volatile
   793   0027E4                     
   794                           ; BSR set to: 4
   795                           ;main.c: 72:     LATCbits.LATC7 =0;
   796   0027E4  9EC0               	bcf	192,7,c	;volatile
   797                           
   798                           ;main.c: 75:     TRISD &= ~(1<<0);
   799   0027E6  90C9               	bcf	201,0,c	;volatile
   800                           
   801                           ;main.c: 76:     ANSELD &= ~(1<<0);
   802   0027E8  9118               	bcf	24,0,b	;volatile
   803                           
   804                           ;main.c: 77:     WPUD &= ~(1<<0);
   805   0027EA  9119               	bcf	25,0,b	;volatile
   806                           
   807                           ;main.c: 78:     INLVLD &= ~(1<<0);
   808   0027EC  911C               	bcf	28,0,b	;volatile
   809                           
   810                           ;main.c: 79:     SLRCOND |= (1<<0);
   811   0027EE  811B               	bsf	27,0,b	;volatile
   812                           
   813                           ;main.c: 80:     ODCOND &= ~(1<<0);
   814   0027F0  911A               	bcf	26,0,b	;volatile
   815   0027F2                     
   816                           ; BSR set to: 4
   817                           ;main.c: 81:     LATDbits.LATD0 =0;
   818   0027F2  90C1               	bcf	193,0,c	;volatile
   819                           
   820                           ;main.c: 84:     TRISD &= ~(1<<1);
   821   0027F4  92C9               	bcf	201,1,c	;volatile
   822                           
   823                           ;main.c: 85:     ANSELD &= ~(1<<1);
   824   0027F6  9318               	bcf	24,1,b	;volatile
   825                           
   826                           ;main.c: 86:     WPUD &= ~(1<<1);
   827   0027F8  9319               	bcf	25,1,b	;volatile
   828                           
   829                           ;main.c: 87:     INLVLD &= ~(1<<1);
   830   0027FA  931C               	bcf	28,1,b	;volatile
   831                           
   832                           ;main.c: 88:     SLRCOND |= (1<<1);
   833   0027FC  831B               	bsf	27,1,b	;volatile
   834                           
   835                           ;main.c: 89:     ODCOND &= ~(1<<1);
   836   0027FE  931A               	bcf	26,1,b	;volatile
   837   002800                     
   838                           ; BSR set to: 4
   839                           ;main.c: 90:     LATDbits.LATD1 =0;
   840   002800  92C1               	bcf	193,1,c	;volatile
   841                           
   842                           ;main.c: 93:     TRISD &= ~(1<<2);
   843   002802  94C9               	bcf	201,2,c	;volatile
   844                           
   845                           ;main.c: 94:     ANSELD &= ~(1<<2);
   846   002804  9518               	bcf	24,2,b	;volatile
   847                           
   848                           ;main.c: 95:     WPUD &= ~(1<<2);
   849   002806  9519               	bcf	25,2,b	;volatile
   850                           
   851                           ;main.c: 96:     INLVLD &= ~(1<<2);
   852   002808  951C               	bcf	28,2,b	;volatile
   853                           
   854                           ;main.c: 97:     SLRCOND |= (1<<2);
   855   00280A  851B               	bsf	27,2,b	;volatile
   856                           
   857                           ;main.c: 98:     ODCOND &= ~(1<<2);
   858   00280C  951A               	bcf	26,2,b	;volatile
   859   00280E                     
   860                           ; BSR set to: 4
   861                           ;main.c: 99:     LATDbits.LATD2 =0;
   862   00280E  94C1               	bcf	193,2,c	;volatile
   863   002810                     
   864                           ; BSR set to: 4
   865   002810  0012               	return		;funcret
   866   002812                     __end_of_ConfiGPIO:
   867                           	callstack 0
   868                           
   869                           	psect	rparam
   870   000000                     
   871                           	psect	idloc
   872                           
   873                           ;Config register IDLOC0 @ 0x200000
   874                           ;	unspecified, using default values
   875   200000                     	org	2097152
   876   200000  0FFF               	dw	4095
   877                           
   878                           ;Config register IDLOC1 @ 0x200002
   879                           ;	unspecified, using default values
   880   200002                     	org	2097154
   881   200002  0FFF               	dw	4095
   882                           
   883                           ;Config register IDLOC2 @ 0x200004
   884                           ;	unspecified, using default values
   885   200004                     	org	2097156
   886   200004  0FFF               	dw	4095
   887                           
   888                           ;Config register IDLOC3 @ 0x200006
   889                           ;	unspecified, using default values
   890   200006                     	org	2097158
   891   200006  0FFF               	dw	4095
   892                           
   893                           ;Config register IDLOC4 @ 0x200008
   894                           ;	unspecified, using default values
   895   200008                     	org	2097160
   896   200008  0FFF               	dw	4095
   897                           
   898                           ;Config register IDLOC5 @ 0x20000A
   899                           ;	unspecified, using default values
   900   20000A                     	org	2097162
   901   20000A  0FFF               	dw	4095
   902                           
   903                           ;Config register IDLOC6 @ 0x20000C
   904                           ;	unspecified, using default values
   905   20000C                     	org	2097164
   906   20000C  0FFF               	dw	4095
   907                           
   908                           ;Config register IDLOC7 @ 0x20000E
   909                           ;	unspecified, using default values
   910   20000E                     	org	2097166
   911   20000E  0FFF               	dw	4095
   912                           
   913                           ;Config register IDLOC8 @ 0x200010
   914                           ;	unspecified, using default values
   915   200010                     	org	2097168
   916   200010  0FFF               	dw	4095
   917                           
   918                           ;Config register IDLOC9 @ 0x200012
   919                           ;	unspecified, using default values
   920   200012                     	org	2097170
   921   200012  0FFF               	dw	4095
   922                           
   923                           ;Config register IDLOC10 @ 0x200014
   924                           ;	unspecified, using default values
   925   200014                     	org	2097172
   926   200014  0FFF               	dw	4095
   927                           
   928                           ;Config register IDLOC11 @ 0x200016
   929                           ;	unspecified, using default values
   930   200016                     	org	2097174
   931   200016  0FFF               	dw	4095
   932                           
   933                           ;Config register IDLOC12 @ 0x200018
   934                           ;	unspecified, using default values
   935   200018                     	org	2097176
   936   200018  0FFF               	dw	4095
   937                           
   938                           ;Config register IDLOC13 @ 0x20001A
   939                           ;	unspecified, using default values
   940   20001A                     	org	2097178
   941   20001A  0FFF               	dw	4095
   942                           
   943                           ;Config register IDLOC14 @ 0x20001C
   944                           ;	unspecified, using default values
   945   20001C                     	org	2097180
   946   20001C  0FFF               	dw	4095
   947                           
   948                           ;Config register IDLOC15 @ 0x20001E
   949                           ;	unspecified, using default values
   950   20001E                     	org	2097182
   951   20001E  0FFF               	dw	4095
   952                           
   953                           ;Config register IDLOC16 @ 0x200020
   954                           ;	unspecified, using default values
   955   200020                     	org	2097184
   956   200020  0FFF               	dw	4095
   957                           
   958                           ;Config register IDLOC17 @ 0x200022
   959                           ;	unspecified, using default values
   960   200022                     	org	2097186
   961   200022  0FFF               	dw	4095
   962                           
   963                           ;Config register IDLOC18 @ 0x200024
   964                           ;	unspecified, using default values
   965   200024                     	org	2097188
   966   200024  0FFF               	dw	4095
   967                           
   968                           ;Config register IDLOC19 @ 0x200026
   969                           ;	unspecified, using default values
   970   200026                     	org	2097190
   971   200026  0FFF               	dw	4095
   972                           
   973                           ;Config register IDLOC20 @ 0x200028
   974                           ;	unspecified, using default values
   975   200028                     	org	2097192
   976   200028  0FFF               	dw	4095
   977                           
   978                           ;Config register IDLOC21 @ 0x20002A
   979                           ;	unspecified, using default values
   980   20002A                     	org	2097194
   981   20002A  0FFF               	dw	4095
   982                           
   983                           ;Config register IDLOC22 @ 0x20002C
   984                           ;	unspecified, using default values
   985   20002C                     	org	2097196
   986   20002C  0FFF               	dw	4095
   987                           
   988                           ;Config register IDLOC23 @ 0x20002E
   989                           ;	unspecified, using default values
   990   20002E                     	org	2097198
   991   20002E  0FFF               	dw	4095
   992                           
   993                           ;Config register IDLOC24 @ 0x200030
   994                           ;	unspecified, using default values
   995   200030                     	org	2097200
   996   200030  0FFF               	dw	4095
   997                           
   998                           ;Config register IDLOC25 @ 0x200032
   999                           ;	unspecified, using default values
  1000   200032                     	org	2097202
  1001   200032  0FFF               	dw	4095
  1002                           
  1003                           ;Config register IDLOC26 @ 0x200034
  1004                           ;	unspecified, using default values
  1005   200034                     	org	2097204
  1006   200034  0FFF               	dw	4095
  1007                           
  1008                           ;Config register IDLOC27 @ 0x200036
  1009                           ;	unspecified, using default values
  1010   200036                     	org	2097206
  1011   200036  0FFF               	dw	4095
  1012                           
  1013                           ;Config register IDLOC28 @ 0x200038
  1014                           ;	unspecified, using default values
  1015   200038                     	org	2097208
  1016   200038  0FFF               	dw	4095
  1017                           
  1018                           ;Config register IDLOC29 @ 0x20003A
  1019                           ;	unspecified, using default values
  1020   20003A                     	org	2097210
  1021   20003A  0FFF               	dw	4095
  1022                           
  1023                           ;Config register IDLOC30 @ 0x20003C
  1024                           ;	unspecified, using default values
  1025   20003C                     	org	2097212
  1026   20003C  0FFF               	dw	4095
  1027                           
  1028                           ;Config register IDLOC31 @ 0x20003E
  1029                           ;	unspecified, using default values
  1030   20003E                     	org	2097214
  1031   20003E  0FFF               	dw	4095
  1032                           
  1033                           	psect	config
  1034                           
  1035                           ;Config register CONFIG1 @ 0x300000
  1036                           ;	External Oscillator Selection
  1037                           ;	FEXTOSC = OFF, Oscillator not enabled
  1038                           ;	Reset Oscillator Selection
  1039                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  1040   300000                     	org	3145728
  1041   300000  8C                 	db	140
  1042                           
  1043                           ;Config register CONFIG2 @ 0x300001
  1044                           ;	Clock out Enable bit
  1045                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  1046                           ;	PRLOCKED One-Way Set Enable bit
  1047                           ;	PR1WAY = OFF, PRLOCKED bit can be set and cleared repeatedly
  1048                           ;	Clock Switch Enable bit
  1049                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  1050                           ;	Fail-Safe Clock Monitor Enable bit
  1051                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1052   300001                     	org	3145729
  1053   300001  DD                 	db	221
  1054                           
  1055                           ;Config register CONFIG3 @ 0x300002
  1056                           ;	MCLR Enable bit
  1057                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  1058                           ;	Power-up timer selection bits
  1059                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  1060                           ;	Multi-vector enable bit
  1061                           ;	MVECEN = ON, Multi-vector enabled, Vector table used for interrupts
  1062                           ;	IVTLOCK bit One-way set enable bit
  1063                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  1064                           ;	Low Power BOR Enable bit
  1065                           ;	LPBOREN = OFF, Low-Power BOR disabled
  1066                           ;	Brown-out Reset Enable bits
  1067                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  1068   300002                     	org	3145730
  1069   300002  FF                 	db	255
  1070                           
  1071                           ;Config register CONFIG4 @ 0x300003
  1072                           ;	Brown-out Reset Voltage Selection bits
  1073                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  1074                           ;	ZCD Disable bit
  1075                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  1076                           ;	PPSLOCK bit One-Way Set Enable bit
  1077                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  1078                           ;	Stack Full/Underflow Reset Enable bit
  1079                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1080                           ;	Low Voltage Programming Enable bit
  1081                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  1082                           ;	Extended Instruction Set Enable bit
  1083                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  1084   300003                     	org	3145731
  1085   300003  FF                 	db	255
  1086                           
  1087                           ;Config register CONFIG5 @ 0x300004
  1088                           ;	WDT Period selection bits
  1089                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  1090                           ;	WDT operating mode
  1091                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  1092   300004                     	org	3145732
  1093   300004  9F                 	db	159
  1094                           
  1095                           ;Config register CONFIG6 @ 0x300005
  1096                           ;	WDT Window Select bits
  1097                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  1098                           ;	WDT input clock selector
  1099                           ;	WDTCCS = SC, Software Control
  1100   300005                     	org	3145733
  1101   300005  FF                 	db	255
  1102                           
  1103                           ;Config register CONFIG7 @ 0x300006
  1104                           ;	Boot Block Size selection bits
  1105                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  1106                           ;	Boot Block enable bit
  1107                           ;	BBEN = OFF, Boot block disabled
  1108                           ;	Storage Area Flash enable bit
  1109                           ;	SAFEN = OFF, SAF disabled
  1110                           ;	Background Debugger
  1111                           ;	DEBUG = ON, Background Debugger enabled
  1112   300006                     	org	3145734
  1113   300006  DF                 	db	223
  1114                           
  1115                           ;Config register CONFIG8 @ 0x300007
  1116                           ;	Boot Block Write Protection bit
  1117                           ;	WRTB = OFF, Boot Block not Write protected
  1118                           ;	Configuration Register Write Protection bit
  1119                           ;	WRTC = OFF, Configuration registers not Write protected
  1120                           ;	Data EEPROM Write Protection bit
  1121                           ;	WRTD = OFF, Data EEPROM not Write protected
  1122                           ;	SAF Write protection bit
  1123                           ;	WRTSAF = OFF, SAF not Write Protected
  1124                           ;	Application Block write protection bit
  1125                           ;	WRTAPP = OFF, Application Block not write protected
  1126   300007                     	org	3145735
  1127   300007  FF                 	db	255
  1128                           
  1129                           ; Padding undefined space
  1130   300008                     	org	3145736
  1131   300008  FF                 	db	255
  1132                           
  1133                           ;Config register CONFIG10 @ 0x300009
  1134                           ;	PFM and Data EEPROM Code Protection bit
  1135                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  1136   300009                     	org	3145737
  1137   300009  FF                 	db	255
  1138                           tosu	equ	0x4FF
  1139                           tosh	equ	0x4FE
  1140                           tosl	equ	0x4FD
  1141                           stkptr	equ	0x4FC
  1142                           pclatu	equ	0x4FB
  1143                           pclath	equ	0x4FA
  1144                           pcl	equ	0x4F9
  1145                           tblptru	equ	0x4F8
  1146                           tblptrh	equ	0x4F7
  1147                           tblptrl	equ	0x4F6
  1148                           tablat	equ	0x4F5
  1149                           prodh	equ	0x4F4
  1150                           prodl	equ	0x4F3
  1151                           indf0	equ	0x4EF
  1152                           postinc0	equ	0x4EE
  1153                           postdec0	equ	0x4ED
  1154                           preinc0	equ	0x4EC
  1155                           plusw0	equ	0x4EB
  1156                           fsr0h	equ	0x4EA
  1157                           fsr0l	equ	0x4E9
  1158                           wreg	equ	0x4E8
  1159                           indf1	equ	0x4E7
  1160                           postinc1	equ	0x4E6
  1161                           postdec1	equ	0x4E5
  1162                           preinc1	equ	0x4E4
  1163                           plusw1	equ	0x4E3
  1164                           fsr1h	equ	0x4E2
  1165                           fsr1l	equ	0x4E1
  1166                           bsr	equ	0x4E0
  1167                           indf2	equ	0x4DF
  1168                           postinc2	equ	0x4DE
  1169                           postdec2	equ	0x4DD
  1170                           preinc2	equ	0x4DC
  1171                           plusw2	equ	0x4DB
  1172                           fsr2h	equ	0x4DA
  1173                           fsr2l	equ	0x4D9
  1174                           status	equ	0x4D8

Data Sizes:
    Strings     0
    Constant    10
    Data        7
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     25      32
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    Write_Display7seg@D7S	PTR struct . size(2) Largest target is 7
		 -> Display1(COMRAM[7]), 


Critical Paths under _main in COMRAM

    _main->_Write_Display7seg

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 9     4      5     575
                                             16 COMRAM     9     4      5
                          _ConfiGPIO
                        _ConfigClock
                  _Write_Display7seg
 ---------------------------------------------------------------------------------
 (1) _Write_Display7seg                                   16    13      3     507
                                              0 COMRAM    16    13      3
                  _Reset_Display7seg
 ---------------------------------------------------------------------------------
 (2) _Reset_Display7seg                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigClock                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfiGPIO                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfiGPIO
   _ConfigClock
   _Write_Display7seg
     _Reset_Display7seg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      70        0.0%
EEDATA             400      0       0       0        0.0%
BITBIGSFRhhll      34E      0       0      79        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK31          100      0       0      56        0.0%
BANK31             100      0       0      57        0.0%
BITBANK30          100      0       0      54        0.0%
BANK30             100      0       0      55        0.0%
BITBANK29          100      0       0      52        0.0%
BANK29             100      0       0      53        0.0%
BITBANK28          100      0       0      50        0.0%
BANK28             100      0       0      51        0.0%
BITBANK27          100      0       0      48        0.0%
BANK27             100      0       0      49        0.0%
BITBANK26          100      0       0      46        0.0%
BANK26             100      0       0      47        0.0%
BITBANK25          100      0       0      44        0.0%
BANK25             100      0       0      45        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRl          AD      0       0      81        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBIGSFRhhlhhl     99      0       0      75        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     19      20       1       33.7%
BITBIGSFRhhhh       35      0       0      71        0.0%
BITBIGSFRhhlhhl      B      0       0      78        0.0%
BITBIGSFRhhlhhl      3      0       0      76        0.0%
BITBIGSFRhhlhhl      3      0       0      77        0.0%
BITBIGSFRhhlhhh      3      0       0      73        0.0%
BITBIGSFRhl          3      0       0      80        0.0%
BITBIGSFRhhlhhh      1      0       0      74        0.0%
BITBIGSFRhhhll       1      0       0      72        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      58        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sun Feb 05 16:25:33 2023

                              l7 28BA                               l85 2810  
           Write_Display7seg@D7S 0501                              l115 27AA  
                            l118 28AE                              l800 27BA  
                            l810 2800                              l802 27C8  
                            l812 280E                              l804 27D6  
                            l900 2782                              l806 27E4  
                            l808 27F2                              l920 284E  
                            l904 2812                              l914 2822  
                            l906 2816                              l916 2832  
                            l908 281A                              l870 2620  
                            l918 284A                              l880 2674  
                            l872 2630                              l794 28A0  
                            l890 2708                              l882 269C  
                            l874 2634                              l796 28B0  
                            l892 2716                              l884 26AA  
                            l876 2642                              l868 260C  
                            l798 27AC                              l894 273E  
                            l886 26D2                              l878 2666  
                            l896 274C                              l888 26E0  
                            l898 2774                              u200 2674  
                            u201 2670                              u300 2782  
                            u220 26AA                              u301 277E  
                            u221 26A6                              u214 2692  
                            u215 268E                              u240 26E0  
                            u320 286A                              u241 26DC  
                            u321 2866                              u314 27A0  
                            u234 26C8                              u170 2616  
                            u315 279C                              u235 26C4  
                            u260 2716                              u180 2642  
                            u261 2712                              u181 263E  
                            u254 26FE                              u255 26FA  
                            u280 274C                              u281 2748  
                            u337 283C                              u274 2734  
                            u194 265C                              u275 2730  
                            u195 2658                              u294 276A  
                            u295 2766             Write_Display7seg@val 0503  
              _Write_Display7seg 260C                              wreg 0004E8  
             ?_Write_Display7seg 0501                             _LATA 0004BE  
                           _LATC 0004C0                             _LATD 0004C1  
                           _LATE 0004C2            Write_Display7seg@data 0510  
                           _WPUA 000401                             _WPUC 000411  
                           _WPUD 000419                             _WPUE 000421  
            ??_Write_Display7seg 0504                             _main 2812  
Write_Display7seg@Display_7Seg_C 0506                             fsr2h 0004DA  
                           indf2 0004DF                             fsr1l 0004E1  
                           fsr2l 0004D9                             start FFFC  
            __end_of_ConfigClock 28BC                     ___param_bank 000000  
                          ?_main 0511        __end_of_Write_Display7seg 27AC  
                          _TRISA 0004C6                            _TRISC 0004C8  
                          _TRISD 0004C9                            _TRISE 0004CA  
                          main@i 0518                            tablat 0004F5  
                          status 0004D8                  __initialization 2872  
                   __end_of_main 2872          Write_Display7seg@F16705 2601  
                         ??_main 0516                    __activetblptr 000001  
                         _ANSELA 000400                           _ANSELC 000410  
                         _ANSELD 000418                           _ANSELE 000420  
                         _ODCONA 000402                           _ODCONC 000412  
                         _ODCOND 00041A                           _ODCONE 000422  
                         _INLVLA 000404                           _INLVLC 000414  
                         _INLVLD 00041C                           _INLVLE 000424  
                    _ConfigClock 28B0                           _OSCFRQ 0000B1  
                         isa$std 000001                     __pdataCOMRAM 051A  
                   __mediumconst 0000                           tblptrh 0004F7  
                         tblptrl 0004F6                           tblptru 0004F8  
                     __accesstop 0560          __end_of__initialization 2892  
                  ___rparam_used 000001                __end_of_ConfiGPIO 2812  
              _Reset_Display7seg 28A0                   __pcstackCOMRAM 0501  
             ?_Reset_Display7seg 0501              ??_Reset_Display7seg 0501  
      __end_of_Reset_Display7seg 28B0                          _OSCCON1 0000AD  
__end_ofWrite_Display7seg@F16705 260B                          _SLRCONA 000403  
                        _SLRCONC 000413                          _SLRCOND 00041B  
                        _SLRCONE 000423                          __Hparam 0000  
                        __Lparam 0000                     __psmallconst 2600  
                        __pcinit 2872                          __ramtop 2600  
                        __ptext0 2812                          __ptext1 260C  
                        __ptext2 28A0                          __ptext3 28B0  
                        __ptext4 27AC             end_of_initialization 2892  
                   ?_ConfigClock 0501                          postdec1 0004E5  
                        postinc0 0004EE                          postinc2 0004DE  
                      _ConfiGPIO 27AC                    __pidataCOMRAM 28BC  
            start_initialization 2872                       ?_ConfiGPIO 0501  
                    __smallconst 2600                         _LATAbits 0004BE  
                       _LATCbits 0004C0                         _LATDbits 0004C1  
                       _LATEbits 0004C2                      ??_ConfiGPIO 0501  
                       _Display1 051A                        copy_data0 2886  
                       __Hrparam 0000                         __Lrparam 0000  
                   __Lsmallconst 2600                         isa$xinst 000000  
                       main@argc 0511                         main@argv 0513  
                  ??_ConfigClock 0501  
