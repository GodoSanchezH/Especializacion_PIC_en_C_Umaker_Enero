

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Sat Mar 04 17:18:50 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	18F57Q43
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    32                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    33                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    35   000000                     
    36                           ; Generated 17/06/2022 GMT
    37                           ; 
    38                           ; Copyright Â© 2022, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution. Publication is not required when
    52                           ;        this file is used in an embedded application.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F57Q43 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70   000000                     
    71                           	psect	mediumconst
    72   00FB18                     __pmediumconst:
    73                           	callstack 0
    74   00FB18  00                 	db	0
    75   00FB19                     _spi1_configuration:
    76                           	callstack 0
    77   00FB19  02                 	db	2
    78   00FB1A  40                 	db	64
    79   00FB1B  00                 	db	0
    80   00FB1C  01                 	db	1
    81   00FB1D  00                 	db	0
    82   00FB1E                     __end_of_spi1_configuration:
    83                           	callstack 0
    84   00FB1E                     _FontLarge:
    85                           	callstack 0
    86   00FB1E  00                 	db	0
    87   00FB1F  00                 	db	0
    88   00FB20  00                 	db	0
    89   00FB21  00                 	db	0
    90   00FB22  00                 	db	0
    91   00FB23  00                 	db	0
    92   00FB24  00                 	db	0
    93   00FB25  00                 	db	0
    94   00FB26  00                 	db	0
    95   00FB27  00                 	db	0
    96   00FB28  00                 	db	0
    97   00FB29  00                 	db	0
    98   00FB2A  00                 	db	0
    99   00FB2B  00                 	db	0
   100   00FB2C  00                 	db	0
   101   00FB2D  18                 	db	24
   102   00FB2E  18                 	db	24
   103   00FB2F  00                 	db	0
   104   00FB30  00                 	db	0
   105   00FB31  18                 	db	24
   106   00FB32  18                 	db	24
   107   00FB33  18                 	db	24
   108   00FB34  18                 	db	24
   109   00FB35  18                 	db	24
   110   00FB36  18                 	db	24
   111   00FB37  18                 	db	24
   112   00FB38  00                 	db	0
   113   00FB39  00                 	db	0
   114   00FB3A  00                 	db	0
   115   00FB3B  00                 	db	0
   116   00FB3C  00                 	db	0
   117   00FB3D  00                 	db	0
   118   00FB3E  00                 	db	0
   119   00FB3F  00                 	db	0
   120   00FB40  00                 	db	0
   121   00FB41  36                 	db	54
   122   00FB42  36                 	db	54
   123   00FB43  36                 	db	54
   124   00FB44  36                 	db	54
   125   00FB45  00                 	db	0
   126   00FB46  00                 	db	0
   127   00FB47  00                 	db	0
   128   00FB48  66                 	db	102
   129   00FB49  66                 	db	102
   130   00FB4A  FF                 	db	255
   131   00FB4B  66                 	db	102
   132   00FB4C  66                 	db	102
   133   00FB4D  FF                 	db	255
   134   00FB4E  66                 	db	102
   135   00FB4F  66                 	db	102
   136   00FB50  00                 	db	0
   137   00FB51  00                 	db	0
   138   00FB52  00                 	db	0
   139   00FB53  00                 	db	0
   140   00FB54  18                 	db	24
   141   00FB55  7E                 	db	126
   142   00FB56  FF                 	db	255
   143   00FB57  1B                 	db	27
   144   00FB58  1F                 	db	31
   145   00FB59  7E                 	db	126
   146   00FB5A  F8                 	db	248
   147   00FB5B  D8                 	db	216
   148   00FB5C  FF                 	db	255
   149   00FB5D  7E                 	db	126
   150   00FB5E  18                 	db	24
   151   00FB5F  00                 	db	0
   152   00FB60  00                 	db	0
   153   00FB61  0E                 	db	14
   154   00FB62  1B                 	db	27
   155   00FB63  DB                 	db	219
   156   00FB64  6E                 	db	110
   157   00FB65  30                 	db	48
   158   00FB66  18                 	db	24
   159   00FB67  0C                 	db	12
   160   00FB68  76                 	db	118
   161   00FB69  DB                 	db	219
   162   00FB6A  D8                 	db	216
   163   00FB6B  70                 	db	112
   164   00FB6C  00                 	db	0
   165   00FB6D  00                 	db	0
   166   00FB6E  7F                 	db	127
   167   00FB6F  C6                 	db	198
   168   00FB70  CF                 	db	207
   169   00FB71  D8                 	db	216
   170   00FB72  70                 	db	112
   171   00FB73  70                 	db	112
   172   00FB74  D8                 	db	216
   173   00FB75  CC                 	db	204
   174   00FB76  CC                 	db	204
   175   00FB77  6C                 	db	108
   176   00FB78  38                 	db	56
   177   00FB79  00                 	db	0
   178   00FB7A  00                 	db	0
   179   00FB7B  00                 	db	0
   180   00FB7C  00                 	db	0
   181   00FB7D  00                 	db	0
   182   00FB7E  00                 	db	0
   183   00FB7F  00                 	db	0
   184   00FB80  00                 	db	0
   185   00FB81  00                 	db	0
   186   00FB82  18                 	db	24
   187   00FB83  1C                 	db	28
   188   00FB84  0C                 	db	12
   189   00FB85  0E                 	db	14
   190   00FB86  00                 	db	0
   191   00FB87  00                 	db	0
   192   00FB88  0C                 	db	12
   193   00FB89  18                 	db	24
   194   00FB8A  30                 	db	48
   195   00FB8B  30                 	db	48
   196   00FB8C  30                 	db	48
   197   00FB8D  30                 	db	48
   198   00FB8E  30                 	db	48
   199   00FB8F  30                 	db	48
   200   00FB90  30                 	db	48
   201   00FB91  18                 	db	24
   202   00FB92  0C                 	db	12
   203   00FB93  00                 	db	0
   204   00FB94  00                 	db	0
   205   00FB95  30                 	db	48
   206   00FB96  18                 	db	24
   207   00FB97  0C                 	db	12
   208   00FB98  0C                 	db	12
   209   00FB99  0C                 	db	12
   210   00FB9A  0C                 	db	12
   211   00FB9B  0C                 	db	12
   212   00FB9C  0C                 	db	12
   213   00FB9D  0C                 	db	12
   214   00FB9E  18                 	db	24
   215   00FB9F  30                 	db	48
   216   00FBA0  00                 	db	0
   217   00FBA1  00                 	db	0
   218   00FBA2  00                 	db	0
   219   00FBA3  00                 	db	0
   220   00FBA4  99                 	db	153
   221   00FBA5  5A                 	db	90
   222   00FBA6  3C                 	db	60
   223   00FBA7  FF                 	db	255
   224   00FBA8  3C                 	db	60
   225   00FBA9  5A                 	db	90
   226   00FBAA  99                 	db	153
   227   00FBAB  00                 	db	0
   228   00FBAC  00                 	db	0
   229   00FBAD  00                 	db	0
   230   00FBAE  00                 	db	0
   231   00FBAF  00                 	db	0
   232   00FBB0  18                 	db	24
   233   00FBB1  18                 	db	24
   234   00FBB2  18                 	db	24
   235   00FBB3  FF                 	db	255
   236   00FBB4  FF                 	db	255
   237   00FBB5  18                 	db	24
   238   00FBB6  18                 	db	24
   239   00FBB7  18                 	db	24
   240   00FBB8  00                 	db	0
   241   00FBB9  00                 	db	0
   242   00FBBA  00                 	db	0
   243   00FBBB  00                 	db	0
   244   00FBBC  30                 	db	48
   245   00FBBD  18                 	db	24
   246   00FBBE  1C                 	db	28
   247   00FBBF  1C                 	db	28
   248   00FBC0  00                 	db	0
   249   00FBC1  00                 	db	0
   250   00FBC2  00                 	db	0
   251   00FBC3  00                 	db	0
   252   00FBC4  00                 	db	0
   253   00FBC5  00                 	db	0
   254   00FBC6  00                 	db	0
   255   00FBC7  00                 	db	0
   256   00FBC8  00                 	db	0
   257   00FBC9  00                 	db	0
   258   00FBCA  00                 	db	0
   259   00FBCB  00                 	db	0
   260   00FBCC  00                 	db	0
   261   00FBCD  FF                 	db	255
   262   00FBCE  FF                 	db	255
   263   00FBCF  00                 	db	0
   264   00FBD0  00                 	db	0
   265   00FBD1  00                 	db	0
   266   00FBD2  00                 	db	0
   267   00FBD3  00                 	db	0
   268   00FBD4  00                 	db	0
   269   00FBD5  00                 	db	0
   270   00FBD6  00                 	db	0
   271   00FBD7  38                 	db	56
   272   00FBD8  38                 	db	56
   273   00FBD9  00                 	db	0
   274   00FBDA  00                 	db	0
   275   00FBDB  00                 	db	0
   276   00FBDC  00                 	db	0
   277   00FBDD  00                 	db	0
   278   00FBDE  00                 	db	0
   279   00FBDF  00                 	db	0
   280   00FBE0  00                 	db	0
   281   00FBE1  00                 	db	0
   282   00FBE2  60                 	db	96
   283   00FBE3  60                 	db	96
   284   00FBE4  30                 	db	48
   285   00FBE5  30                 	db	48
   286   00FBE6  18                 	db	24
   287   00FBE7  18                 	db	24
   288   00FBE8  0C                 	db	12
   289   00FBE9  0C                 	db	12
   290   00FBEA  06                 	db	6
   291   00FBEB  06                 	db	6
   292   00FBEC  03                 	db	3
   293   00FBED  03                 	db	3
   294   00FBEE  00                 	db	0
   295   00FBEF  00                 	db	0
   296   00FBF0  3C                 	db	60
   297   00FBF1  66                 	db	102
   298   00FBF2  C3                 	db	195
   299   00FBF3  E3                 	db	227
   300   00FBF4  F3                 	db	243
   301   00FBF5  DB                 	db	219
   302   00FBF6  CF                 	db	207
   303   00FBF7  C7                 	db	199
   304   00FBF8  C3                 	db	195
   305   00FBF9  66                 	db	102
   306   00FBFA  3C                 	db	60
   307   00FBFB  00                 	db	0
   308   00FBFC  00                 	db	0
   309   00FBFD  7E                 	db	126
   310   00FBFE  18                 	db	24
   311   00FBFF  18                 	db	24
   312   00FC00  18                 	db	24
   313   00FC01  18                 	db	24
   314   00FC02  18                 	db	24
   315   00FC03  18                 	db	24
   316   00FC04  18                 	db	24
   317   00FC05  78                 	db	120
   318   00FC06  38                 	db	56
   319   00FC07  18                 	db	24
   320   00FC08  00                 	db	0
   321   00FC09  00                 	db	0
   322   00FC0A  FF                 	db	255
   323   00FC0B  C0                 	db	192
   324   00FC0C  C0                 	db	192
   325   00FC0D  60                 	db	96
   326   00FC0E  30                 	db	48
   327   00FC0F  18                 	db	24
   328   00FC10  0C                 	db	12
   329   00FC11  06                 	db	6
   330   00FC12  03                 	db	3
   331   00FC13  E7                 	db	231
   332   00FC14  7E                 	db	126
   333   00FC15  00                 	db	0
   334   00FC16  00                 	db	0
   335   00FC17  7E                 	db	126
   336   00FC18  E7                 	db	231
   337   00FC19  03                 	db	3
   338   00FC1A  03                 	db	3
   339   00FC1B  07                 	db	7
   340   00FC1C  7E                 	db	126
   341   00FC1D  07                 	db	7
   342   00FC1E  03                 	db	3
   343   00FC1F  03                 	db	3
   344   00FC20  E7                 	db	231
   345   00FC21  7E                 	db	126
   346   00FC22  00                 	db	0
   347   00FC23  00                 	db	0
   348   00FC24  0C                 	db	12
   349   00FC25  0C                 	db	12
   350   00FC26  0C                 	db	12
   351   00FC27  0C                 	db	12
   352   00FC28  0C                 	db	12
   353   00FC29  FF                 	db	255
   354   00FC2A  CC                 	db	204
   355   00FC2B  6C                 	db	108
   356   00FC2C  3C                 	db	60
   357   00FC2D  1C                 	db	28
   358   00FC2E  0C                 	db	12
   359   00FC2F  00                 	db	0
   360   00FC30  00                 	db	0
   361   00FC31  7E                 	db	126
   362   00FC32  E7                 	db	231
   363   00FC33  03                 	db	3
   364   00FC34  03                 	db	3
   365   00FC35  07                 	db	7
   366   00FC36  FE                 	db	254
   367   00FC37  C0                 	db	192
   368   00FC38  C0                 	db	192
   369   00FC39  C0                 	db	192
   370   00FC3A  C0                 	db	192
   371   00FC3B  FF                 	db	255
   372   00FC3C  00                 	db	0
   373   00FC3D  00                 	db	0
   374   00FC3E  7E                 	db	126
   375   00FC3F  E7                 	db	231
   376   00FC40  C3                 	db	195
   377   00FC41  C3                 	db	195
   378   00FC42  C7                 	db	199
   379   00FC43  FE                 	db	254
   380   00FC44  C0                 	db	192
   381   00FC45  C0                 	db	192
   382   00FC46  C0                 	db	192
   383   00FC47  E7                 	db	231
   384   00FC48  7E                 	db	126
   385   00FC49  00                 	db	0
   386   00FC4A  00                 	db	0
   387   00FC4B  30                 	db	48
   388   00FC4C  30                 	db	48
   389   00FC4D  30                 	db	48
   390   00FC4E  30                 	db	48
   391   00FC4F  18                 	db	24
   392   00FC50  0C                 	db	12
   393   00FC51  06                 	db	6
   394   00FC52  03                 	db	3
   395   00FC53  03                 	db	3
   396   00FC54  03                 	db	3
   397   00FC55  FF                 	db	255
   398   00FC56  00                 	db	0
   399   00FC57  00                 	db	0
   400   00FC58  7E                 	db	126
   401   00FC59  E7                 	db	231
   402   00FC5A  C3                 	db	195
   403   00FC5B  C3                 	db	195
   404   00FC5C  E7                 	db	231
   405   00FC5D  7E                 	db	126
   406   00FC5E  E7                 	db	231
   407   00FC5F  C3                 	db	195
   408   00FC60  C3                 	db	195
   409   00FC61  E7                 	db	231
   410   00FC62  7E                 	db	126
   411   00FC63  00                 	db	0
   412   00FC64  00                 	db	0
   413   00FC65  7E                 	db	126
   414   00FC66  E7                 	db	231
   415   00FC67  03                 	db	3
   416   00FC68  03                 	db	3
   417   00FC69  03                 	db	3
   418   00FC6A  7F                 	db	127
   419   00FC6B  E7                 	db	231
   420   00FC6C  C3                 	db	195
   421   00FC6D  C3                 	db	195
   422   00FC6E  E7                 	db	231
   423   00FC6F  7E                 	db	126
   424   00FC70  00                 	db	0
   425   00FC71  00                 	db	0
   426   00FC72  00                 	db	0
   427   00FC73  38                 	db	56
   428   00FC74  38                 	db	56
   429   00FC75  00                 	db	0
   430   00FC76  00                 	db	0
   431   00FC77  38                 	db	56
   432   00FC78  38                 	db	56
   433   00FC79  00                 	db	0
   434   00FC7A  00                 	db	0
   435   00FC7B  00                 	db	0
   436   00FC7C  00                 	db	0
   437   00FC7D  00                 	db	0
   438   00FC7E  00                 	db	0
   439   00FC7F  30                 	db	48
   440   00FC80  18                 	db	24
   441   00FC81  1C                 	db	28
   442   00FC82  1C                 	db	28
   443   00FC83  00                 	db	0
   444   00FC84  00                 	db	0
   445   00FC85  1C                 	db	28
   446   00FC86  1C                 	db	28
   447   00FC87  00                 	db	0
   448   00FC88  00                 	db	0
   449   00FC89  00                 	db	0
   450   00FC8A  00                 	db	0
   451   00FC8B  00                 	db	0
   452   00FC8C  06                 	db	6
   453   00FC8D  0C                 	db	12
   454   00FC8E  18                 	db	24
   455   00FC8F  30                 	db	48
   456   00FC90  60                 	db	96
   457   00FC91  C0                 	db	192
   458   00FC92  60                 	db	96
   459   00FC93  30                 	db	48
   460   00FC94  18                 	db	24
   461   00FC95  0C                 	db	12
   462   00FC96  06                 	db	6
   463   00FC97  00                 	db	0
   464   00FC98  00                 	db	0
   465   00FC99  00                 	db	0
   466   00FC9A  00                 	db	0
   467   00FC9B  FF                 	db	255
   468   00FC9C  FF                 	db	255
   469   00FC9D  00                 	db	0
   470   00FC9E  FF                 	db	255
   471   00FC9F  FF                 	db	255
   472   00FCA0  00                 	db	0
   473   00FCA1  00                 	db	0
   474   00FCA2  00                 	db	0
   475   00FCA3  00                 	db	0
   476   00FCA4  00                 	db	0
   477   00FCA5  00                 	db	0
   478   00FCA6  60                 	db	96
   479   00FCA7  30                 	db	48
   480   00FCA8  18                 	db	24
   481   00FCA9  0C                 	db	12
   482   00FCAA  06                 	db	6
   483   00FCAB  03                 	db	3
   484   00FCAC  06                 	db	6
   485   00FCAD  0C                 	db	12
   486   00FCAE  18                 	db	24
   487   00FCAF  30                 	db	48
   488   00FCB0  60                 	db	96
   489   00FCB1  00                 	db	0
   490   00FCB2  00                 	db	0
   491   00FCB3  18                 	db	24
   492   00FCB4  00                 	db	0
   493   00FCB5  00                 	db	0
   494   00FCB6  18                 	db	24
   495   00FCB7  18                 	db	24
   496   00FCB8  0C                 	db	12
   497   00FCB9  06                 	db	6
   498   00FCBA  03                 	db	3
   499   00FCBB  C3                 	db	195
   500   00FCBC  C3                 	db	195
   501   00FCBD  7E                 	db	126
   502   00FCBE  00                 	db	0
   503   00FCBF  00                 	db	0
   504   00FCC0  3F                 	db	63
   505   00FCC1  60                 	db	96
   506   00FCC2  CF                 	db	207
   507   00FCC3  DB                 	db	219
   508   00FCC4  D3                 	db	211
   509   00FCC5  DD                 	db	221
   510   00FCC6  C3                 	db	195
   511   00FCC7  7E                 	db	126
   512   00FCC8  00                 	db	0
   513   00FCC9  00                 	db	0
   514   00FCCA  00                 	db	0
   515   00FCCB  00                 	db	0
   516   00FCCC  00                 	db	0
   517   00FCCD  C3                 	db	195
   518   00FCCE  C3                 	db	195
   519   00FCCF  C3                 	db	195
   520   00FCD0  C3                 	db	195
   521   00FCD1  FF                 	db	255
   522   00FCD2  C3                 	db	195
   523   00FCD3  C3                 	db	195
   524   00FCD4  C3                 	db	195
   525   00FCD5  66                 	db	102
   526   00FCD6  3C                 	db	60
   527   00FCD7  18                 	db	24
   528   00FCD8  00                 	db	0
   529   00FCD9  00                 	db	0
   530   00FCDA  FE                 	db	254
   531   00FCDB  C7                 	db	199
   532   00FCDC  C3                 	db	195
   533   00FCDD  C3                 	db	195
   534   00FCDE  C7                 	db	199
   535   00FCDF  FE                 	db	254
   536   00FCE0  C7                 	db	199
   537   00FCE1  C3                 	db	195
   538   00FCE2  C3                 	db	195
   539   00FCE3  C7                 	db	199
   540   00FCE4  FE                 	db	254
   541   00FCE5  00                 	db	0
   542   00FCE6  00                 	db	0
   543   00FCE7  7E                 	db	126
   544   00FCE8  E7                 	db	231
   545   00FCE9  C0                 	db	192
   546   00FCEA  C0                 	db	192
   547   00FCEB  C0                 	db	192
   548   00FCEC  C0                 	db	192
   549   00FCED  C0                 	db	192
   550   00FCEE  C0                 	db	192
   551   00FCEF  C0                 	db	192
   552   00FCF0  E7                 	db	231
   553   00FCF1  7E                 	db	126
   554   00FCF2  00                 	db	0
   555   00FCF3  00                 	db	0
   556   00FCF4  FC                 	db	252
   557   00FCF5  CE                 	db	206
   558   00FCF6  C7                 	db	199
   559   00FCF7  C3                 	db	195
   560   00FCF8  C3                 	db	195
   561   00FCF9  C3                 	db	195
   562   00FCFA  C3                 	db	195
   563   00FCFB  C3                 	db	195
   564   00FCFC  C7                 	db	199
   565   00FCFD  CE                 	db	206
   566   00FCFE  FC                 	db	252
   567   00FCFF  00                 	db	0
   568   00FD00  00                 	db	0
   569   00FD01  FF                 	db	255
   570   00FD02  C0                 	db	192
   571   00FD03  C0                 	db	192
   572   00FD04  C0                 	db	192
   573   00FD05  C0                 	db	192
   574   00FD06  FC                 	db	252
   575   00FD07  C0                 	db	192
   576   00FD08  C0                 	db	192
   577   00FD09  C0                 	db	192
   578   00FD0A  C0                 	db	192
   579   00FD0B  FF                 	db	255
   580   00FD0C  00                 	db	0
   581   00FD0D  00                 	db	0
   582   00FD0E  C0                 	db	192
   583   00FD0F  C0                 	db	192
   584   00FD10  C0                 	db	192
   585   00FD11  C0                 	db	192
   586   00FD12  C0                 	db	192
   587   00FD13  C0                 	db	192
   588   00FD14  FC                 	db	252
   589   00FD15  C0                 	db	192
   590   00FD16  C0                 	db	192
   591   00FD17  C0                 	db	192
   592   00FD18  FF                 	db	255
   593   00FD19  00                 	db	0
   594   00FD1A  00                 	db	0
   595   00FD1B  7E                 	db	126
   596   00FD1C  E7                 	db	231
   597   00FD1D  C3                 	db	195
   598   00FD1E  C3                 	db	195
   599   00FD1F  CF                 	db	207
   600   00FD20  C0                 	db	192
   601   00FD21  C0                 	db	192
   602   00FD22  C0                 	db	192
   603   00FD23  C0                 	db	192
   604   00FD24  E7                 	db	231
   605   00FD25  7E                 	db	126
   606   00FD26  00                 	db	0
   607   00FD27  00                 	db	0
   608   00FD28  C3                 	db	195
   609   00FD29  C3                 	db	195
   610   00FD2A  C3                 	db	195
   611   00FD2B  C3                 	db	195
   612   00FD2C  C3                 	db	195
   613   00FD2D  FF                 	db	255
   614   00FD2E  C3                 	db	195
   615   00FD2F  C3                 	db	195
   616   00FD30  C3                 	db	195
   617   00FD31  C3                 	db	195
   618   00FD32  C3                 	db	195
   619   00FD33  00                 	db	0
   620   00FD34  00                 	db	0
   621   00FD35  7E                 	db	126
   622   00FD36  18                 	db	24
   623   00FD37  18                 	db	24
   624   00FD38  18                 	db	24
   625   00FD39  18                 	db	24
   626   00FD3A  18                 	db	24
   627   00FD3B  18                 	db	24
   628   00FD3C  18                 	db	24
   629   00FD3D  18                 	db	24
   630   00FD3E  18                 	db	24
   631   00FD3F  7E                 	db	126
   632   00FD40  00                 	db	0
   633   00FD41  00                 	db	0
   634   00FD42  7C                 	db	124
   635   00FD43  EE                 	db	238
   636   00FD44  C6                 	db	198
   637   00FD45  06                 	db	6
   638   00FD46  06                 	db	6
   639   00FD47  06                 	db	6
   640   00FD48  06                 	db	6
   641   00FD49  06                 	db	6
   642   00FD4A  06                 	db	6
   643   00FD4B  06                 	db	6
   644   00FD4C  06                 	db	6
   645   00FD4D  00                 	db	0
   646   00FD4E  00                 	db	0
   647   00FD4F  C3                 	db	195
   648   00FD50  C6                 	db	198
   649   00FD51  CC                 	db	204
   650   00FD52  D8                 	db	216
   651   00FD53  F0                 	db	240
   652   00FD54  E0                 	db	224
   653   00FD55  F0                 	db	240
   654   00FD56  D8                 	db	216
   655   00FD57  CC                 	db	204
   656   00FD58  C6                 	db	198
   657   00FD59  C3                 	db	195
   658   00FD5A  00                 	db	0
   659   00FD5B  00                 	db	0
   660   00FD5C  FF                 	db	255
   661   00FD5D  C0                 	db	192
   662   00FD5E  C0                 	db	192
   663   00FD5F  C0                 	db	192
   664   00FD60  C0                 	db	192
   665   00FD61  C0                 	db	192
   666   00FD62  C0                 	db	192
   667   00FD63  C0                 	db	192
   668   00FD64  C0                 	db	192
   669   00FD65  C0                 	db	192
   670   00FD66  C0                 	db	192
   671   00FD67  00                 	db	0
   672   00FD68  00                 	db	0
   673   00FD69  C3                 	db	195
   674   00FD6A  C3                 	db	195
   675   00FD6B  C3                 	db	195
   676   00FD6C  C3                 	db	195
   677   00FD6D  C3                 	db	195
   678   00FD6E  C3                 	db	195
   679   00FD6F  DB                 	db	219
   680   00FD70  FF                 	db	255
   681   00FD71  FF                 	db	255
   682   00FD72  E7                 	db	231
   683   00FD73  C3                 	db	195
   684   00FD74  00                 	db	0
   685   00FD75  00                 	db	0
   686   00FD76  C7                 	db	199
   687   00FD77  C7                 	db	199
   688   00FD78  CF                 	db	207
   689   00FD79  CF                 	db	207
   690   00FD7A  DF                 	db	223
   691   00FD7B  DB                 	db	219
   692   00FD7C  FB                 	db	251
   693   00FD7D  F3                 	db	243
   694   00FD7E  F3                 	db	243
   695   00FD7F  E3                 	db	227
   696   00FD80  E3                 	db	227
   697   00FD81  00                 	db	0
   698   00FD82  00                 	db	0
   699   00FD83  7E                 	db	126
   700   00FD84  E7                 	db	231
   701   00FD85  C3                 	db	195
   702   00FD86  C3                 	db	195
   703   00FD87  C3                 	db	195
   704   00FD88  C3                 	db	195
   705   00FD89  C3                 	db	195
   706   00FD8A  C3                 	db	195
   707   00FD8B  C3                 	db	195
   708   00FD8C  E7                 	db	231
   709   00FD8D  7E                 	db	126
   710   00FD8E  00                 	db	0
   711   00FD8F  00                 	db	0
   712   00FD90  C0                 	db	192
   713   00FD91  C0                 	db	192
   714   00FD92  C0                 	db	192
   715   00FD93  C0                 	db	192
   716   00FD94  C0                 	db	192
   717   00FD95  FE                 	db	254
   718   00FD96  C7                 	db	199
   719   00FD97  C3                 	db	195
   720   00FD98  C3                 	db	195
   721   00FD99  C7                 	db	199
   722   00FD9A  FE                 	db	254
   723   00FD9B  00                 	db	0
   724   00FD9C  00                 	db	0
   725   00FD9D  3F                 	db	63
   726   00FD9E  6E                 	db	110
   727   00FD9F  DF                 	db	223
   728   00FDA0  DB                 	db	219
   729   00FDA1  C3                 	db	195
   730   00FDA2  C3                 	db	195
   731   00FDA3  C3                 	db	195
   732   00FDA4  C3                 	db	195
   733   00FDA5  C3                 	db	195
   734   00FDA6  66                 	db	102
   735   00FDA7  3C                 	db	60
   736   00FDA8  00                 	db	0
   737   00FDA9  00                 	db	0
   738   00FDAA  C3                 	db	195
   739   00FDAB  C6                 	db	198
   740   00FDAC  CC                 	db	204
   741   00FDAD  D8                 	db	216
   742   00FDAE  F0                 	db	240
   743   00FDAF  FE                 	db	254
   744   00FDB0  C7                 	db	199
   745   00FDB1  C3                 	db	195
   746   00FDB2  C3                 	db	195
   747   00FDB3  C7                 	db	199
   748   00FDB4  FE                 	db	254
   749   00FDB5  00                 	db	0
   750   00FDB6  00                 	db	0
   751   00FDB7  7E                 	db	126
   752   00FDB8  E7                 	db	231
   753   00FDB9  03                 	db	3
   754   00FDBA  03                 	db	3
   755   00FDBB  07                 	db	7
   756   00FDBC  7E                 	db	126
   757   00FDBD  E0                 	db	224
   758   00FDBE  C0                 	db	192
   759   00FDBF  C0                 	db	192
   760   00FDC0  E7                 	db	231
   761   00FDC1  7E                 	db	126
   762   00FDC2  00                 	db	0
   763   00FDC3  00                 	db	0
   764   00FDC4  18                 	db	24
   765   00FDC5  18                 	db	24
   766   00FDC6  18                 	db	24
   767   00FDC7  18                 	db	24
   768   00FDC8  18                 	db	24
   769   00FDC9  18                 	db	24
   770   00FDCA  18                 	db	24
   771   00FDCB  18                 	db	24
   772   00FDCC  18                 	db	24
   773   00FDCD  18                 	db	24
   774   00FDCE  FF                 	db	255
   775   00FDCF  00                 	db	0
   776   00FDD0  00                 	db	0
   777   00FDD1  7E                 	db	126
   778   00FDD2  E7                 	db	231
   779   00FDD3  C3                 	db	195
   780   00FDD4  C3                 	db	195
   781   00FDD5  C3                 	db	195
   782   00FDD6  C3                 	db	195
   783   00FDD7  C3                 	db	195
   784   00FDD8  C3                 	db	195
   785   00FDD9  C3                 	db	195
   786   00FDDA  C3                 	db	195
   787   00FDDB  C3                 	db	195
   788   00FDDC  00                 	db	0
   789   00FDDD  00                 	db	0
   790   00FDDE  18                 	db	24
   791   00FDDF  3C                 	db	60
   792   00FDE0  3C                 	db	60
   793   00FDE1  66                 	db	102
   794   00FDE2  66                 	db	102
   795   00FDE3  C3                 	db	195
   796   00FDE4  C3                 	db	195
   797   00FDE5  C3                 	db	195
   798   00FDE6  C3                 	db	195
   799   00FDE7  C3                 	db	195
   800   00FDE8  C3                 	db	195
   801   00FDE9  00                 	db	0
   802   00FDEA  00                 	db	0
   803   00FDEB  C3                 	db	195
   804   00FDEC  E7                 	db	231
   805   00FDED  FF                 	db	255
   806   00FDEE  FF                 	db	255
   807   00FDEF  DB                 	db	219
   808   00FDF0  DB                 	db	219
   809   00FDF1  C3                 	db	195
   810   00FDF2  C3                 	db	195
   811   00FDF3  C3                 	db	195
   812   00FDF4  C3                 	db	195
   813   00FDF5  C3                 	db	195
   814   00FDF6  00                 	db	0
   815   00FDF7  00                 	db	0
   816   00FDF8  C3                 	db	195
   817   00FDF9  66                 	db	102
   818   00FDFA  66                 	db	102
   819   00FDFB  3C                 	db	60
   820   00FDFC  3C                 	db	60
   821   00FDFD  18                 	db	24
   822   00FDFE  3C                 	db	60
   823   00FDFF  3C                 	db	60
   824   00FE00  66                 	db	102
   825   00FE01  66                 	db	102
   826   00FE02  C3                 	db	195
   827   00FE03  00                 	db	0
   828   00FE04  00                 	db	0
   829   00FE05  18                 	db	24
   830   00FE06  18                 	db	24
   831   00FE07  18                 	db	24
   832   00FE08  18                 	db	24
   833   00FE09  18                 	db	24
   834   00FE0A  18                 	db	24
   835   00FE0B  3C                 	db	60
   836   00FE0C  3C                 	db	60
   837   00FE0D  66                 	db	102
   838   00FE0E  66                 	db	102
   839   00FE0F  C3                 	db	195
   840   00FE10  00                 	db	0
   841   00FE11  00                 	db	0
   842   00FE12  FF                 	db	255
   843   00FE13  C0                 	db	192
   844   00FE14  C0                 	db	192
   845   00FE15  60                 	db	96
   846   00FE16  30                 	db	48
   847   00FE17  7E                 	db	126
   848   00FE18  0C                 	db	12
   849   00FE19  06                 	db	6
   850   00FE1A  03                 	db	3
   851   00FE1B  03                 	db	3
   852   00FE1C  FF                 	db	255
   853   00FE1D  00                 	db	0
   854   00FE1E  00                 	db	0
   855   00FE1F  3C                 	db	60
   856   00FE20  30                 	db	48
   857   00FE21  30                 	db	48
   858   00FE22  30                 	db	48
   859   00FE23  30                 	db	48
   860   00FE24  30                 	db	48
   861   00FE25  30                 	db	48
   862   00FE26  30                 	db	48
   863   00FE27  30                 	db	48
   864   00FE28  30                 	db	48
   865   00FE29  3C                 	db	60
   866   00FE2A  00                 	db	0
   867   00FE2B  03                 	db	3
   868   00FE2C  03                 	db	3
   869   00FE2D  06                 	db	6
   870   00FE2E  06                 	db	6
   871   00FE2F  0C                 	db	12
   872   00FE30  0C                 	db	12
   873   00FE31  18                 	db	24
   874   00FE32  18                 	db	24
   875   00FE33  30                 	db	48
   876   00FE34  30                 	db	48
   877   00FE35  60                 	db	96
   878   00FE36  60                 	db	96
   879   00FE37  00                 	db	0
   880   00FE38  00                 	db	0
   881   00FE39  3C                 	db	60
   882   00FE3A  0C                 	db	12
   883   00FE3B  0C                 	db	12
   884   00FE3C  0C                 	db	12
   885   00FE3D  0C                 	db	12
   886   00FE3E  0C                 	db	12
   887   00FE3F  0C                 	db	12
   888   00FE40  0C                 	db	12
   889   00FE41  0C                 	db	12
   890   00FE42  0C                 	db	12
   891   00FE43  3C                 	db	60
   892   00FE44  00                 	db	0
   893   00FE45  00                 	db	0
   894   00FE46  00                 	db	0
   895   00FE47  00                 	db	0
   896   00FE48  00                 	db	0
   897   00FE49  00                 	db	0
   898   00FE4A  00                 	db	0
   899   00FE4B  00                 	db	0
   900   00FE4C  00                 	db	0
   901   00FE4D  C3                 	db	195
   902   00FE4E  66                 	db	102
   903   00FE4F  3C                 	db	60
   904   00FE50  18                 	db	24
   905   00FE51  FF                 	db	255
   906   00FE52  FF                 	db	255
   907   00FE53  00                 	db	0
   908   00FE54  00                 	db	0
   909   00FE55  00                 	db	0
   910   00FE56  00                 	db	0
   911   00FE57  00                 	db	0
   912   00FE58  00                 	db	0
   913   00FE59  00                 	db	0
   914   00FE5A  00                 	db	0
   915   00FE5B  00                 	db	0
   916   00FE5C  00                 	db	0
   917   00FE5D  00                 	db	0
   918   00FE5E  00                 	db	0
   919   00FE5F  00                 	db	0
   920   00FE60  00                 	db	0
   921   00FE61  00                 	db	0
   922   00FE62  00                 	db	0
   923   00FE63  00                 	db	0
   924   00FE64  00                 	db	0
   925   00FE65  00                 	db	0
   926   00FE66  00                 	db	0
   927   00FE67  18                 	db	24
   928   00FE68  38                 	db	56
   929   00FE69  30                 	db	48
   930   00FE6A  70                 	db	112
   931   00FE6B  00                 	db	0
   932   00FE6C  00                 	db	0
   933   00FE6D  7F                 	db	127
   934   00FE6E  C3                 	db	195
   935   00FE6F  C3                 	db	195
   936   00FE70  7F                 	db	127
   937   00FE71  03                 	db	3
   938   00FE72  C3                 	db	195
   939   00FE73  7E                 	db	126
   940   00FE74  00                 	db	0
   941   00FE75  00                 	db	0
   942   00FE76  00                 	db	0
   943   00FE77  00                 	db	0
   944   00FE78  00                 	db	0
   945   00FE79  00                 	db	0
   946   00FE7A  FE                 	db	254
   947   00FE7B  C3                 	db	195
   948   00FE7C  C3                 	db	195
   949   00FE7D  C3                 	db	195
   950   00FE7E  C3                 	db	195
   951   00FE7F  FE                 	db	254
   952   00FE80  C0                 	db	192
   953   00FE81  C0                 	db	192
   954   00FE82  C0                 	db	192
   955   00FE83  C0                 	db	192
   956   00FE84  C0                 	db	192
   957   00FE85  00                 	db	0
   958   00FE86  00                 	db	0
   959   00FE87  7E                 	db	126
   960   00FE88  C3                 	db	195
   961   00FE89  C0                 	db	192
   962   00FE8A  C0                 	db	192
   963   00FE8B  C0                 	db	192
   964   00FE8C  C3                 	db	195
   965   00FE8D  7E                 	db	126
   966   00FE8E  00                 	db	0
   967   00FE8F  00                 	db	0
   968   00FE90  00                 	db	0
   969   00FE91  00                 	db	0
   970   00FE92  00                 	db	0
   971   00FE93  00                 	db	0
   972   00FE94  7F                 	db	127
   973   00FE95  C3                 	db	195
   974   00FE96  C3                 	db	195
   975   00FE97  C3                 	db	195
   976   00FE98  C3                 	db	195
   977   00FE99  7F                 	db	127
   978   00FE9A  03                 	db	3
   979   00FE9B  03                 	db	3
   980   00FE9C  03                 	db	3
   981   00FE9D  03                 	db	3
   982   00FE9E  03                 	db	3
   983   00FE9F  00                 	db	0
   984   00FEA0  00                 	db	0
   985   00FEA1  7F                 	db	127
   986   00FEA2  C0                 	db	192
   987   00FEA3  C0                 	db	192
   988   00FEA4  FE                 	db	254
   989   00FEA5  C3                 	db	195
   990   00FEA6  C3                 	db	195
   991   00FEA7  7E                 	db	126
   992   00FEA8  00                 	db	0
   993   00FEA9  00                 	db	0
   994   00FEAA  00                 	db	0
   995   00FEAB  00                 	db	0
   996   00FEAC  00                 	db	0
   997   00FEAD  00                 	db	0
   998   00FEAE  30                 	db	48
   999   00FEAF  30                 	db	48
  1000   00FEB0  30                 	db	48
  1001   00FEB1  30                 	db	48
  1002   00FEB2  30                 	db	48
  1003   00FEB3  FC                 	db	252
  1004   00FEB4  30                 	db	48
  1005   00FEB5  30                 	db	48
  1006   00FEB6  30                 	db	48
  1007   00FEB7  33                 	db	51
  1008   00FEB8  1E                 	db	30
  1009   00FEB9  7E                 	db	126
  1010   00FEBA  C3                 	db	195
  1011   00FEBB  03                 	db	3
  1012   00FEBC  03                 	db	3
  1013   00FEBD  7F                 	db	127
  1014   00FEBE  C3                 	db	195
  1015   00FEBF  C3                 	db	195
  1016   00FEC0  C3                 	db	195
  1017   00FEC1  7E                 	db	126
  1018   00FEC2  00                 	db	0
  1019   00FEC3  00                 	db	0
  1020   00FEC4  00                 	db	0
  1021   00FEC5  00                 	db	0
  1022   00FEC6  00                 	db	0
  1023   00FEC7  00                 	db	0
  1024   00FEC8  C3                 	db	195
  1025   00FEC9  C3                 	db	195
  1026   00FECA  C3                 	db	195
  1027   00FECB  C3                 	db	195
  1028   00FECC  C3                 	db	195
  1029   00FECD  C3                 	db	195
  1030   00FECE  FE                 	db	254
  1031   00FECF  C0                 	db	192
  1032   00FED0  C0                 	db	192
  1033   00FED1  C0                 	db	192
  1034   00FED2  C0                 	db	192
  1035   00FED3  00                 	db	0
  1036   00FED4  00                 	db	0
  1037   00FED5  18                 	db	24
  1038   00FED6  18                 	db	24
  1039   00FED7  18                 	db	24
  1040   00FED8  18                 	db	24
  1041   00FED9  18                 	db	24
  1042   00FEDA  18                 	db	24
  1043   00FEDB  18                 	db	24
  1044   00FEDC  00                 	db	0
  1045   00FEDD  00                 	db	0
  1046   00FEDE  18                 	db	24
  1047   00FEDF  00                 	db	0
  1048   00FEE0  38                 	db	56
  1049   00FEE1  6C                 	db	108
  1050   00FEE2  0C                 	db	12
  1051   00FEE3  0C                 	db	12
  1052   00FEE4  0C                 	db	12
  1053   00FEE5  0C                 	db	12
  1054   00FEE6  0C                 	db	12
  1055   00FEE7  0C                 	db	12
  1056   00FEE8  0C                 	db	12
  1057   00FEE9  00                 	db	0
  1058   00FEEA  00                 	db	0
  1059   00FEEB  0C                 	db	12
  1060   00FEEC  00                 	db	0
  1061   00FEED  00                 	db	0
  1062   00FEEE  00                 	db	0
  1063   00FEEF  C6                 	db	198
  1064   00FEF0  CC                 	db	204
  1065   00FEF1  F8                 	db	248
  1066   00FEF2  F0                 	db	240
  1067   00FEF3  D8                 	db	216
  1068   00FEF4  CC                 	db	204
  1069   00FEF5  C6                 	db	198
  1070   00FEF6  C0                 	db	192
  1071   00FEF7  C0                 	db	192
  1072   00FEF8  C0                 	db	192
  1073   00FEF9  C0                 	db	192
  1074   00FEFA  00                 	db	0
  1075   00FEFB  00                 	db	0
  1076   00FEFC  7E                 	db	126
  1077   00FEFD  18                 	db	24
  1078   00FEFE  18                 	db	24
  1079   00FEFF  18                 	db	24
  1080   00FF00  18                 	db	24
  1081   00FF01  18                 	db	24
  1082   00FF02  18                 	db	24
  1083   00FF03  18                 	db	24
  1084   00FF04  18                 	db	24
  1085   00FF05  18                 	db	24
  1086   00FF06  78                 	db	120
  1087   00FF07  00                 	db	0
  1088   00FF08  00                 	db	0
  1089   00FF09  DB                 	db	219
  1090   00FF0A  DB                 	db	219
  1091   00FF0B  DB                 	db	219
  1092   00FF0C  DB                 	db	219
  1093   00FF0D  DB                 	db	219
  1094   00FF0E  DB                 	db	219
  1095   00FF0F  FE                 	db	254
  1096   00FF10  00                 	db	0
  1097   00FF11  00                 	db	0
  1098   00FF12  00                 	db	0
  1099   00FF13  00                 	db	0
  1100   00FF14  00                 	db	0
  1101   00FF15  00                 	db	0
  1102   00FF16  C6                 	db	198
  1103   00FF17  C6                 	db	198
  1104   00FF18  C6                 	db	198
  1105   00FF19  C6                 	db	198
  1106   00FF1A  C6                 	db	198
  1107   00FF1B  C6                 	db	198
  1108   00FF1C  FC                 	db	252
  1109   00FF1D  00                 	db	0
  1110   00FF1E  00                 	db	0
  1111   00FF1F  00                 	db	0
  1112   00FF20  00                 	db	0
  1113   00FF21  00                 	db	0
  1114   00FF22  00                 	db	0
  1115   00FF23  7C                 	db	124
  1116   00FF24  C6                 	db	198
  1117   00FF25  C6                 	db	198
  1118   00FF26  C6                 	db	198
  1119   00FF27  C6                 	db	198
  1120   00FF28  C6                 	db	198
  1121   00FF29  7C                 	db	124
  1122   00FF2A  00                 	db	0
  1123   00FF2B  00                 	db	0
  1124   00FF2C  00                 	db	0
  1125   00FF2D  00                 	db	0
  1126   00FF2E  C0                 	db	192
  1127   00FF2F  C0                 	db	192
  1128   00FF30  C0                 	db	192
  1129   00FF31  FE                 	db	254
  1130   00FF32  C3                 	db	195
  1131   00FF33  C3                 	db	195
  1132   00FF34  C3                 	db	195
  1133   00FF35  C3                 	db	195
  1134   00FF36  FE                 	db	254
  1135   00FF37  00                 	db	0
  1136   00FF38  00                 	db	0
  1137   00FF39  00                 	db	0
  1138   00FF3A  00                 	db	0
  1139   00FF3B  03                 	db	3
  1140   00FF3C  03                 	db	3
  1141   00FF3D  03                 	db	3
  1142   00FF3E  7F                 	db	127
  1143   00FF3F  C3                 	db	195
  1144   00FF40  C3                 	db	195
  1145   00FF41  C3                 	db	195
  1146   00FF42  C3                 	db	195
  1147   00FF43  7F                 	db	127
  1148   00FF44  00                 	db	0
  1149   00FF45  00                 	db	0
  1150   00FF46  00                 	db	0
  1151   00FF47  00                 	db	0
  1152   00FF48  00                 	db	0
  1153   00FF49  00                 	db	0
  1154   00FF4A  C0                 	db	192
  1155   00FF4B  C0                 	db	192
  1156   00FF4C  C0                 	db	192
  1157   00FF4D  C0                 	db	192
  1158   00FF4E  C0                 	db	192
  1159   00FF4F  E0                 	db	224
  1160   00FF50  FE                 	db	254
  1161   00FF51  00                 	db	0
  1162   00FF52  00                 	db	0
  1163   00FF53  00                 	db	0
  1164   00FF54  00                 	db	0
  1165   00FF55  00                 	db	0
  1166   00FF56  00                 	db	0
  1167   00FF57  FE                 	db	254
  1168   00FF58  03                 	db	3
  1169   00FF59  03                 	db	3
  1170   00FF5A  7E                 	db	126
  1171   00FF5B  C0                 	db	192
  1172   00FF5C  C0                 	db	192
  1173   00FF5D  7F                 	db	127
  1174   00FF5E  00                 	db	0
  1175   00FF5F  00                 	db	0
  1176   00FF60  00                 	db	0
  1177   00FF61  00                 	db	0
  1178   00FF62  00                 	db	0
  1179   00FF63  00                 	db	0
  1180   00FF64  1C                 	db	28
  1181   00FF65  36                 	db	54
  1182   00FF66  30                 	db	48
  1183   00FF67  30                 	db	48
  1184   00FF68  30                 	db	48
  1185   00FF69  30                 	db	48
  1186   00FF6A  FC                 	db	252
  1187   00FF6B  30                 	db	48
  1188   00FF6C  30                 	db	48
  1189   00FF6D  30                 	db	48
  1190   00FF6E  00                 	db	0
  1191   00FF6F  00                 	db	0
  1192   00FF70  00                 	db	0
  1193   00FF71  7E                 	db	126
  1194   00FF72  C6                 	db	198
  1195   00FF73  C6                 	db	198
  1196   00FF74  C6                 	db	198
  1197   00FF75  C6                 	db	198
  1198   00FF76  C6                 	db	198
  1199   00FF77  C6                 	db	198
  1200   00FF78  00                 	db	0
  1201   00FF79  00                 	db	0
  1202   00FF7A  00                 	db	0
  1203   00FF7B  00                 	db	0
  1204   00FF7C  00                 	db	0
  1205   00FF7D  00                 	db	0
  1206   00FF7E  18                 	db	24
  1207   00FF7F  3C                 	db	60
  1208   00FF80  3C                 	db	60
  1209   00FF81  66                 	db	102
  1210   00FF82  66                 	db	102
  1211   00FF83  C3                 	db	195
  1212   00FF84  C3                 	db	195
  1213   00FF85  00                 	db	0
  1214   00FF86  00                 	db	0
  1215   00FF87  00                 	db	0
  1216   00FF88  00                 	db	0
  1217   00FF89  00                 	db	0
  1218   00FF8A  00                 	db	0
  1219   00FF8B  C3                 	db	195
  1220   00FF8C  E7                 	db	231
  1221   00FF8D  FF                 	db	255
  1222   00FF8E  DB                 	db	219
  1223   00FF8F  C3                 	db	195
  1224   00FF90  C3                 	db	195
  1225   00FF91  C3                 	db	195
  1226   00FF92  00                 	db	0
  1227   00FF93  00                 	db	0
  1228   00FF94  00                 	db	0
  1229   00FF95  00                 	db	0
  1230   00FF96  00                 	db	0
  1231   00FF97  00                 	db	0
  1232   00FF98  C3                 	db	195
  1233   00FF99  66                 	db	102
  1234   00FF9A  3C                 	db	60
  1235   00FF9B  18                 	db	24
  1236   00FF9C  3C                 	db	60
  1237   00FF9D  66                 	db	102
  1238   00FF9E  C3                 	db	195
  1239   00FF9F  00                 	db	0
  1240   00FFA0  00                 	db	0
  1241   00FFA1  00                 	db	0
  1242   00FFA2  00                 	db	0
  1243   00FFA3  C0                 	db	192
  1244   00FFA4  60                 	db	96
  1245   00FFA5  60                 	db	96
  1246   00FFA6  30                 	db	48
  1247   00FFA7  18                 	db	24
  1248   00FFA8  3C                 	db	60
  1249   00FFA9  66                 	db	102
  1250   00FFAA  66                 	db	102
  1251   00FFAB  C3                 	db	195
  1252   00FFAC  00                 	db	0
  1253   00FFAD  00                 	db	0
  1254   00FFAE  00                 	db	0
  1255   00FFAF  00                 	db	0
  1256   00FFB0  00                 	db	0
  1257   00FFB1  00                 	db	0
  1258   00FFB2  FF                 	db	255
  1259   00FFB3  60                 	db	96
  1260   00FFB4  30                 	db	48
  1261   00FFB5  18                 	db	24
  1262   00FFB6  0C                 	db	12
  1263   00FFB7  06                 	db	6
  1264   00FFB8  FF                 	db	255
  1265   00FFB9  00                 	db	0
  1266   00FFBA  00                 	db	0
  1267   00FFBB  00                 	db	0
  1268   00FFBC  00                 	db	0
  1269   00FFBD  00                 	db	0
  1270   00FFBE  00                 	db	0
  1271   00FFBF  0F                 	db	15
  1272   00FFC0  18                 	db	24
  1273   00FFC1  18                 	db	24
  1274   00FFC2  18                 	db	24
  1275   00FFC3  38                 	db	56
  1276   00FFC4  F0                 	db	240
  1277   00FFC5  38                 	db	56
  1278   00FFC6  18                 	db	24
  1279   00FFC7  18                 	db	24
  1280   00FFC8  18                 	db	24
  1281   00FFC9  0F                 	db	15
  1282   00FFCA  40                 	db	64
  1283   00FFCB  60                 	db	96
  1284   00FFCC  70                 	db	112
  1285   00FFCD  78                 	db	120
  1286   00FFCE  7C                 	db	124
  1287   00FFCF  7E                 	db	126
  1288   00FFD0  7F                 	db	127
  1289   00FFD1  7E                 	db	126
  1290   00FFD2  7C                 	db	124
  1291   00FFD3  78                 	db	120
  1292   00FFD4  70                 	db	112
  1293   00FFD5  60                 	db	96
  1294   00FFD6  40                 	db	64
  1295   00FFD7  00                 	db	0
  1296   00FFD8  18                 	db	24
  1297   00FFD9  3C                 	db	60
  1298   00FFDA  7E                 	db	126
  1299   00FFDB  FF                 	db	255
  1300   00FFDC  00                 	db	0
  1301   00FFDD  00                 	db	0
  1302   00FFDE  18                 	db	24
  1303   00FFDF  3C                 	db	60
  1304   00FFE0  7E                 	db	126
  1305   00FFE1  FF                 	db	255
  1306   00FFE2  00                 	db	0
  1307   00FFE3  00                 	db	0
  1308   00FFE4  00                 	db	0
  1309   00FFE5  18                 	db	24
  1310   00FFE6  3C                 	db	60
  1311   00FFE7  7E                 	db	126
  1312   00FFE8  FF                 	db	255
  1313   00FFE9  00                 	db	0
  1314   00FFEA  00                 	db	0
  1315   00FFEB  00                 	db	0
  1316   00FFEC  FF                 	db	255
  1317   00FFED  7E                 	db	126
  1318   00FFEE  3C                 	db	60
  1319   00FFEF  18                 	db	24
  1320   00FFF0  00                 	db	0
  1321   00FFF1                     __end_of_FontLarge:
  1322                           	callstack 0
  1323   000000                     _OSCTUNE	set	176
  1324   000000                     _OSCFRQ	set	177
  1325   000000                     _OSCEN	set	179
  1326   000000                     _TRISD	set	1225
  1327   000000                     _TRISC	set	1224
  1328   000000                     _TRISB	set	1223
  1329   000000                     _LATC	set	1216
  1330   000000                     _LATB	set	1215
  1331   000000                     _SPI1CON0bits	set	132
  1332   000000                     _TRISCbits	set	1224
  1333   000000                     _LATA3	set	9715
  1334   000000                     _LATA4	set	9716
  1335   000000                     _LATD4	set	9740
  1336   000000                     _LATE2	set	9746
  1337   000000                     _PMD0	set	96
  1338   000000                     _SPI1RXB	set	128
  1339   000000                     _SPI1TXB	set	129
  1340   000000                     _SPI1TCNTL	set	130
  1341   000000                     _SPI1CON0	set	132
  1342   000000                     _RC4PPS	set	533
  1343   000000                     _SPI1SCKPPS	set	618
  1344   000000                     _RC4I2C	set	646
  1345   000000                     _RC3I2C	set	647
  1346   000000                     _RB2I2C	set	648
  1347   000000                     _RB1I2C	set	649
  1348   000000                     _ANSELA	set	1024
  1349   000000                     _ANSELB	set	1032
  1350   000000                     _ANSELC	set	1040
  1351   000000                     _ANSELD	set	1048
  1352   000000                     _LATA	set	1214
  1353   000000                     _LATD	set	1217
  1354   000000                     _LATE	set	1218
  1355   000000                     _TRISA	set	1222
  1356   000000                     _TRISE	set	1226
  1357   000000                     _LATF	set	1219
  1358   000000                     _TRISF	set	1227
  1359   000000                     _INLVLD	set	1052
  1360   000000                     _SLRCOND	set	1051
  1361   000000                     _ODCOND	set	1050
  1362   000000                     _WPUD	set	1049
  1363   000000                     _ANSELE	set	1056
  1364   000000                     _INLVLC	set	1044
  1365   000000                     _SLRCONC	set	1043
  1366   000000                     _ODCONC	set	1042
  1367   000000                     _WPUC	set	1041
  1368   000000                     _INLVLB	set	1036
  1369   000000                     _SLRCONB	set	1035
  1370   000000                     _ODCONB	set	1034
  1371   000000                     _WPUB	set	1033
  1372   000000                     _INLVLE	set	1060
  1373   000000                     _SLRCONE	set	1059
  1374   000000                     _ODCONE	set	1058
  1375   000000                     _WPUE	set	1057
  1376   000000                     _ANSELF	set	1064
  1377   000000                     _PIR3bits	set	1201
  1378   000000                     _INLVLF	set	1068
  1379   000000                     _SLRCONF	set	1067
  1380   000000                     _ODCONF	set	1066
  1381   000000                     _WPUF	set	1065
  1382   000000                     _INLVLA	set	1028
  1383   000000                     _SLRCONA	set	1027
  1384   000000                     _ODCONA	set	1026
  1385   000000                     _WPUA	set	1025
  1386   000000                     _SPI1SDIPPS	set	619
  1387   000000                     _RC6PPS	set	535
  1388   000000                     _SPI1BAUD	set	137
  1389   000000                     _SPI1CLK	set	140
  1390   000000                     _SPI1CON2	set	134
  1391   000000                     _SPI1CON1	set	133
  1392   000000                     _ACTCON	set	172
  1393   000000                     _OSCCON1	set	173
  1394   000000                     _OSCCON3	set	175
  1395   000000                     _PMD3	set	99
  1396   000000                     _PMD1	set	97
  1397   000000                     _PMD8	set	104
  1398   000000                     _PMD7	set	103
  1399   000000                     _PMD6	set	102
  1400   000000                     _PMD5	set	101
  1401   000000                     _PMD4	set	100
  1402   00FFF1                     STR_1:
  1403                           
  1404                           ; BSR set to: 0
  1405   00FFF1  48                 	db	72	;'H'
  1406   00FFF2  65                 	db	101	;'e'
  1407   00FFF3  6C                 	db	108	;'l'
  1408   00FFF4  6C                 	db	108	;'l'
  1409   00FFF5  6F                 	db	111	;'o'
  1410   00FFF6  20                 	db	32
  1411   00FFF7  57                 	db	87	;'W'
  1412   00FFF8  6F                 	db	111	;'o'
  1413   00FFF9  72                 	db	114	;'r'
  1414   00FFFA  6C                 	db	108	;'l'
  1415   00FFFB  64                 	db	100	;'d'
  1416   00FFFC  00                 	db	0
  1417   00FFFD  00                 	db	0
  1418   00FFFE  00                 	db	0	; dummy byte at the end
  1419   000000                     
  1420                           ; #config settings
  1421                           
  1422                           	psect	cinit
  1423   0110EC                     __pcinit:
  1424                           	callstack 0
  1425   0110EC                     start_initialization:
  1426                           	callstack 0
  1427   0110EC                     __initialization:
  1428                           	callstack 0
  1429   0110EC                     end_of_initialization:
  1430                           	callstack 0
  1431   0110EC                     __end_of__initialization:
  1432                           	callstack 0
  1433   0110EC  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1434   0110EE  6EF8               	movwf	tblptru,c
  1435   0110F0  0100               	movlb	0
  1436   0110F2  EFD9  F084         	goto	_main	;jump to C main() function
  1437                           
  1438                           	psect	cstackCOMRAM
  1439   000501                     __pcstackCOMRAM:
  1440                           	callstack 0
  1441   000501                     ?___wmul:
  1442                           	callstack 0
  1443   000501                     ?___fladd:
  1444                           	callstack 0
  1445   000501                     spi_write@data:
  1446                           	callstack 0
  1447   000501                     swap_char@num1:
  1448                           	callstack 0
  1449   000501                     ___wmul@multiplier:
  1450                           	callstack 0
  1451   000501                     ___fladd@b:
  1452                           	callstack 0
  1453                           
  1454                           ; 4 bytes @ 0x0
  1455   000501                     	ds	1
  1456   000502                     lcd_write_data@data:
  1457                           	callstack 0
  1458   000502                     lcd_write_command@data:
  1459                           	callstack 0
  1460                           
  1461                           ; 1 bytes @ 0x1
  1462   000502                     	ds	1
  1463   000503                     lcd_write_register@reg:
  1464                           	callstack 0
  1465   000503                     swap_char@num2:
  1466                           	callstack 0
  1467   000503                     ___wmul@multiplicand:
  1468                           	callstack 0
  1469                           
  1470                           ; 2 bytes @ 0x2
  1471   000503                     	ds	2
  1472   000505                     swap_char@temp:
  1473                           	callstack 0
  1474   000505                     lcd_write_register@data:
  1475                           	callstack 0
  1476   000505                     ___wmul@product:
  1477                           	callstack 0
  1478   000505                     ___fladd@a:
  1479                           	callstack 0
  1480                           
  1481                           ; 4 bytes @ 0x4
  1482   000505                     	ds	2
  1483   000507                     set_draw_window@y1:
  1484                           	callstack 0
  1485                           
  1486                           ; 1 bytes @ 0x6
  1487   000507                     	ds	1
  1488   000508                     set_draw_window@x2:
  1489                           	callstack 0
  1490                           
  1491                           ; 1 bytes @ 0x7
  1492   000508                     	ds	1
  1493   000509                     ??___fladd:
  1494   000509                     set_draw_window@y2:
  1495                           	callstack 0
  1496                           
  1497                           ; 1 bytes @ 0x8
  1498   000509                     	ds	1
  1499   00050A                     set_draw_window@x1:
  1500                           	callstack 0
  1501                           
  1502                           ; 1 bytes @ 0x9
  1503   00050A                     	ds	1
  1504   00050B                     draw_pixel@y:
  1505                           	callstack 0
  1506   00050B                     fill_rectangle@y1:
  1507                           	callstack 0
  1508                           
  1509                           ; 1 bytes @ 0xA
  1510   00050B                     	ds	1
  1511   00050C                     fill_rectangle@x2:
  1512                           	callstack 0
  1513   00050C                     draw_pixel@colour:
  1514                           	callstack 0
  1515                           
  1516                           ; 2 bytes @ 0xB
  1517   00050C                     	ds	1
  1518   00050D                     fill_rectangle@y2:
  1519                           	callstack 0
  1520   00050D                     ___fladd@signs:
  1521                           	callstack 0
  1522                           
  1523                           ; 1 bytes @ 0xC
  1524   00050D                     	ds	1
  1525   00050E                     draw_pixel@x:
  1526                           	callstack 0
  1527   00050E                     ___fladd@aexp:
  1528                           	callstack 0
  1529   00050E                     fill_rectangle@colour:
  1530                           	callstack 0
  1531                           
  1532                           ; 2 bytes @ 0xD
  1533   00050E                     	ds	1
  1534   00050F                     ___fladd@bexp:
  1535                           	callstack 0
  1536                           
  1537                           ; 1 bytes @ 0xE
  1538   00050F                     	ds	1
  1539   000510                     ??_fill_rectangle:
  1540   000510                     ___fladd@grs:
  1541                           	callstack 0
  1542                           
  1543                           ; 1 bytes @ 0xF
  1544   000510                     	ds	1
  1545   000511                     ?___flsub:
  1546                           	callstack 0
  1547   000511                     ___flsub@b:
  1548                           	callstack 0
  1549                           
  1550                           ; 4 bytes @ 0x10
  1551   000511                     	ds	2
  1552   000513                     fill_rectangle@y:
  1553                           	callstack 0
  1554                           
  1555                           ; 2 bytes @ 0x12
  1556   000513                     	ds	2
  1557   000515                     fill_rectangle@x:
  1558                           	callstack 0
  1559   000515                     ___flsub@a:
  1560                           	callstack 0
  1561                           
  1562                           ; 4 bytes @ 0x14
  1563   000515                     	ds	2
  1564   000517                     fill_rectangle@colour_high:
  1565                           	callstack 0
  1566                           
  1567                           ; 1 bytes @ 0x16
  1568   000517                     	ds	1
  1569   000518                     fill_rectangle@colour_low:
  1570                           	callstack 0
  1571                           
  1572                           ; 1 bytes @ 0x17
  1573   000518                     	ds	1
  1574   000519                     fill_rectangle@x1:
  1575                           	callstack 0
  1576   000519                     ___fleq@ff1:
  1577                           	callstack 0
  1578                           
  1579                           ; 4 bytes @ 0x18
  1580   000519                     	ds	1
  1581   00051A                     draw_char@y:
  1582                           	callstack 0
  1583                           
  1584                           ; 1 bytes @ 0x19
  1585   00051A                     	ds	1
  1586   00051B                     draw_char@c:
  1587                           	callstack 0
  1588                           
  1589                           ; 1 bytes @ 0x1A
  1590   00051B                     	ds	1
  1591   00051C                     draw_char@colour:
  1592                           	callstack 0
  1593                           
  1594                           ; 2 bytes @ 0x1B
  1595   00051C                     	ds	1
  1596   00051D                     ___fleq@ff2:
  1597                           	callstack 0
  1598                           
  1599                           ; 4 bytes @ 0x1C
  1600   00051D                     	ds	1
  1601   00051E                     draw_char@size:
  1602                           	callstack 0
  1603                           
  1604                           ; 1 bytes @ 0x1D
  1605   00051E                     	ds	1
  1606   00051F                     ??_draw_char:
  1607                           
  1608                           ; 1 bytes @ 0x1E
  1609   00051F                     	ds	2
  1610   000521                     ??___fleq:
  1611   000521                     draw_char@font_index:
  1612                           	callstack 0
  1613                           
  1614                           ; 2 bytes @ 0x20
  1615   000521                     	ds	2
  1616   000523                     draw_char@line:
  1617                           	callstack 0
  1618                           
  1619                           ; 1 bytes @ 0x22
  1620   000523                     	ds	1
  1621   000524                     draw_char@x:
  1622                           	callstack 0
  1623                           
  1624                           ; 1 bytes @ 0x23
  1625   000524                     	ds	1
  1626   000525                     draw_char@i:
  1627                           	callstack 0
  1628   000525                     delay_ms@millis:
  1629                           	callstack 0
  1630                           
  1631                           ; 4 bytes @ 0x24
  1632   000525                     	ds	2
  1633   000527                     draw_char@j:
  1634                           	callstack 0
  1635                           
  1636                           ; 2 bytes @ 0x26
  1637   000527                     	ds	2
  1638   000529                     draw_string@y:
  1639                           	callstack 0
  1640   000529                     delay_ms@multiplier:
  1641                           	callstack 0
  1642                           
  1643                           ; 2 bytes @ 0x28
  1644   000529                     	ds	1
  1645   00052A                     draw_string@colour:
  1646                           	callstack 0
  1647                           
  1648                           ; 2 bytes @ 0x29
  1649   00052A                     	ds	1
  1650   00052B                     delay_ms@counter:
  1651                           	callstack 0
  1652                           
  1653                           ; 4 bytes @ 0x2A
  1654   00052B                     	ds	1
  1655   00052C                     draw_string@size:
  1656                           	callstack 0
  1657                           
  1658                           ; 1 bytes @ 0x2B
  1659   00052C                     	ds	1
  1660   00052D                     draw_string@str:
  1661                           	callstack 0
  1662                           
  1663                           ; 2 bytes @ 0x2C
  1664   00052D                     	ds	2
  1665   00052F                     ??_draw_string:
  1666   00052F                     
  1667                           ; 1 bytes @ 0x2E
  1668   00052F                     	ds	2
  1669   000531                     draw_string@char_width:
  1670                           	callstack 0
  1671                           
  1672                           ; 2 bytes @ 0x30
  1673   000531                     	ds	2
  1674   000533                     draw_string@char_pos:
  1675                           	callstack 0
  1676                           
  1677                           ; 2 bytes @ 0x32
  1678   000533                     	ds	2
  1679   000535                     draw_string@x:
  1680                           	callstack 0
  1681                           
  1682                           ; 1 bytes @ 0x34
  1683   000535                     	ds	1
  1684   000536                     draw_string@counter:
  1685                           	callstack 0
  1686                           
  1687                           ; 2 bytes @ 0x35
  1688   000536                     	ds	2
  1689   000538                     
  1690                           ; 1 bytes @ 0x37
  1691 ;;
  1692 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1693 ;;
  1694 ;; *************** function _main *****************
  1695 ;; Defined at:
  1696 ;;		line 51 in file "main.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;		None
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;		None
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1714 ;;Total ram usage:        0 bytes
  1715 ;; Hardware stack levels required when called: 7
  1716 ;; This function calls:
  1717 ;;		_SYSTEM_Initialize
  1718 ;;		_delay_ms
  1719 ;;		_draw_string
  1720 ;;		_fill_rectangle
  1721 ;;		_lcd_init
  1722 ;; This function is called by:
  1723 ;;		Startup code after reset
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text0
  1728   0109B2                     __ptext0:
  1729                           	callstack 0
  1730   0109B2                     _main:
  1731                           	callstack 120
  1732   0109B2                     
  1733                           ;main.c: 54:     SYSTEM_Initialize();
  1734   0109B2  EC5D  F088         	call	_SYSTEM_Initialize	;wreg free
  1735   0109B6                     
  1736                           ;main.c: 67:     lcd_init();
  1737   0109B6  ECD2  F087         	call	_lcd_init	;wreg free
  1738   0109BA                     
  1739                           ;main.c: 69:     fill_rectangle(0, 0, 220, 176, 0x0000);
  1740   0109BA  0E00               	movlw	0
  1741   0109BC  6E0B               	movwf	fill_rectangle@y1^(0+1280),c
  1742   0109BE  0EDC               	movlw	220
  1743   0109C0  6E0C               	movwf	fill_rectangle@x2^(0+1280),c
  1744   0109C2  0EB0               	movlw	176
  1745   0109C4  6E0D               	movwf	fill_rectangle@y2^(0+1280),c
  1746   0109C6  0E00               	movlw	0
  1747   0109C8  6E0F               	movwf	(fill_rectangle@colour+1)^(0+1280),c
  1748   0109CA  0E00               	movlw	0
  1749   0109CC  6E0E               	movwf	fill_rectangle@colour^(0+1280),c
  1750   0109CE  0E00               	movlw	0
  1751   0109D0  EC61  F085         	call	_fill_rectangle
  1752   0109D4                     
  1753                           ;main.c: 72:     LATE2 = 1;
  1754   0109D4  84C2               	bsf	1218,2,c	;volatile
  1755   0109D6                     l2098:
  1756                           
  1757                           ;main.c: 76:         fill_rectangle(0, 0, 220, 176, 0xAEDC);
  1758   0109D6  0E00               	movlw	0
  1759   0109D8  6E0B               	movwf	fill_rectangle@y1^(0+1280),c
  1760   0109DA  0EDC               	movlw	220
  1761   0109DC  6E0C               	movwf	fill_rectangle@x2^(0+1280),c
  1762   0109DE  0EB0               	movlw	176
  1763   0109E0  6E0D               	movwf	fill_rectangle@y2^(0+1280),c
  1764   0109E2  0EAE               	movlw	174
  1765   0109E4  6E0F               	movwf	(fill_rectangle@colour+1)^(0+1280),c
  1766   0109E6  0EDC               	movlw	220
  1767   0109E8  6E0E               	movwf	fill_rectangle@colour^(0+1280),c
  1768   0109EA  0E00               	movlw	0
  1769   0109EC  EC61  F085         	call	_fill_rectangle
  1770   0109F0                     
  1771                           ;main.c: 77:         draw_string(64, 64, 0x0000, 1, "Hello World\0");
  1772   0109F0  0E40               	movlw	64
  1773   0109F2  6E29               	movwf	draw_string@y^(0+1280),c
  1774   0109F4  0E00               	movlw	0
  1775   0109F6  6E2B               	movwf	(draw_string@colour+1)^(0+1280),c
  1776   0109F8  0E00               	movlw	0
  1777   0109FA  6E2A               	movwf	draw_string@colour^(0+1280),c
  1778   0109FC  0E01               	movlw	1
  1779   0109FE  6E2C               	movwf	draw_string@size^(0+1280),c
  1780   010A00  0EF1               	movlw	low STR_1
  1781   010A02  6E2D               	movwf	draw_string@str^(0+1280),c
  1782   010A04  0EFF               	movlw	high STR_1
  1783   010A06  6E2E               	movwf	(draw_string@str+1)^(0+1280),c
  1784   010A08  0E40               	movlw	64
  1785   010A0A  EC45  F087         	call	_draw_string
  1786   010A0E                     
  1787                           ;main.c: 78:         delay_ms(1000);
  1788   010A0E  0E00               	movlw	0
  1789   010A10  6E25               	movwf	delay_ms@millis^(0+1280),c
  1790   010A12  0E00               	movlw	0
  1791   010A14  6E26               	movwf	(delay_ms@millis+1)^(0+1280),c
  1792   010A16  0E7A               	movlw	122
  1793   010A18  6E27               	movwf	(delay_ms@millis+2)^(0+1280),c
  1794   010A1A  0E44               	movlw	68
  1795   010A1C  6E28               	movwf	(delay_ms@millis+3)^(0+1280),c
  1796   010A1E  ECF4  F086         	call	_delay_ms	;wreg free
  1797   010A22                     
  1798                           ;main.c: 79:         fill_rectangle(0, 0, 220, 176, 0xF800);
  1799   010A22  0E00               	movlw	0
  1800   010A24  6E0B               	movwf	fill_rectangle@y1^(0+1280),c
  1801   010A26  0EDC               	movlw	220
  1802   010A28  6E0C               	movwf	fill_rectangle@x2^(0+1280),c
  1803   010A2A  0EB0               	movlw	176
  1804   010A2C  6E0D               	movwf	fill_rectangle@y2^(0+1280),c
  1805   010A2E  0EF8               	movlw	248
  1806   010A30  6E0F               	movwf	(fill_rectangle@colour+1)^(0+1280),c
  1807   010A32  0E00               	movlw	0
  1808   010A34  6E0E               	movwf	fill_rectangle@colour^(0+1280),c
  1809   010A36  0E00               	movlw	0
  1810   010A38  EC61  F085         	call	_fill_rectangle
  1811   010A3C                     
  1812                           ;main.c: 80:         draw_string(64, 64, 0x0000, 2, "Hello World\0");
  1813   010A3C  0E40               	movlw	64
  1814   010A3E  6E29               	movwf	draw_string@y^(0+1280),c
  1815   010A40  0E00               	movlw	0
  1816   010A42  6E2B               	movwf	(draw_string@colour+1)^(0+1280),c
  1817   010A44  0E00               	movlw	0
  1818   010A46  6E2A               	movwf	draw_string@colour^(0+1280),c
  1819   010A48  0E02               	movlw	2
  1820   010A4A  6E2C               	movwf	draw_string@size^(0+1280),c
  1821   010A4C  0EF1               	movlw	low STR_1
  1822   010A4E  6E2D               	movwf	draw_string@str^(0+1280),c
  1823   010A50  0EFF               	movlw	high STR_1
  1824   010A52  6E2E               	movwf	(draw_string@str+1)^(0+1280),c
  1825   010A54  0E40               	movlw	64
  1826   010A56  EC45  F087         	call	_draw_string
  1827   010A5A                     
  1828                           ;main.c: 81:         delay_ms(1000);
  1829   010A5A  0E00               	movlw	0
  1830   010A5C  6E25               	movwf	delay_ms@millis^(0+1280),c
  1831   010A5E  0E00               	movlw	0
  1832   010A60  6E26               	movwf	(delay_ms@millis+1)^(0+1280),c
  1833   010A62  0E7A               	movlw	122
  1834   010A64  6E27               	movwf	(delay_ms@millis+2)^(0+1280),c
  1835   010A66  0E44               	movlw	68
  1836   010A68  6E28               	movwf	(delay_ms@millis+3)^(0+1280),c
  1837   010A6A  ECF4  F086         	call	_delay_ms	;wreg free
  1838   010A6E                     
  1839                           ;main.c: 82:         fill_rectangle(0, 0, 220, 176, 0x07E0);
  1840   010A6E  0E00               	movlw	0
  1841   010A70  6E0B               	movwf	fill_rectangle@y1^(0+1280),c
  1842   010A72  0EDC               	movlw	220
  1843   010A74  6E0C               	movwf	fill_rectangle@x2^(0+1280),c
  1844   010A76  0EB0               	movlw	176
  1845   010A78  6E0D               	movwf	fill_rectangle@y2^(0+1280),c
  1846   010A7A  0E07               	movlw	7
  1847   010A7C  6E0F               	movwf	(fill_rectangle@colour+1)^(0+1280),c
  1848   010A7E  0EE0               	movlw	224
  1849   010A80  6E0E               	movwf	fill_rectangle@colour^(0+1280),c
  1850   010A82  0E00               	movlw	0
  1851   010A84  EC61  F085         	call	_fill_rectangle
  1852   010A88                     
  1853                           ;main.c: 83:         draw_string(64, 64, 0x0000, 3, "Hello World\0");
  1854   010A88  0E40               	movlw	64
  1855   010A8A  6E29               	movwf	draw_string@y^(0+1280),c
  1856   010A8C  0E00               	movlw	0
  1857   010A8E  6E2B               	movwf	(draw_string@colour+1)^(0+1280),c
  1858   010A90  0E00               	movlw	0
  1859   010A92  6E2A               	movwf	draw_string@colour^(0+1280),c
  1860   010A94  0E03               	movlw	3
  1861   010A96  6E2C               	movwf	draw_string@size^(0+1280),c
  1862   010A98  0EF1               	movlw	low STR_1
  1863   010A9A  6E2D               	movwf	draw_string@str^(0+1280),c
  1864   010A9C  0EFF               	movlw	high STR_1
  1865   010A9E  6E2E               	movwf	(draw_string@str+1)^(0+1280),c
  1866   010AA0  0E40               	movlw	64
  1867   010AA2  EC45  F087         	call	_draw_string
  1868   010AA6                     
  1869                           ;main.c: 84:         delay_ms(1000);
  1870   010AA6  0E00               	movlw	0
  1871   010AA8  6E25               	movwf	delay_ms@millis^(0+1280),c
  1872   010AAA  0E00               	movlw	0
  1873   010AAC  6E26               	movwf	(delay_ms@millis+1)^(0+1280),c
  1874   010AAE  0E7A               	movlw	122
  1875   010AB0  6E27               	movwf	(delay_ms@millis+2)^(0+1280),c
  1876   010AB2  0E44               	movlw	68
  1877   010AB4  6E28               	movwf	(delay_ms@millis+3)^(0+1280),c
  1878   010AB6  ECF4  F086         	call	_delay_ms	;wreg free
  1879   010ABA  EFEB  F084         	goto	l2098
  1880   010ABE  EFFE  F0FF         	goto	start
  1881   010AC2                     __end_of_main:
  1882                           	callstack 0
  1883                           
  1884 ;; *************** function _lcd_init *****************
  1885 ;; Defined at:
  1886 ;;		line 122 in file "ILI9225.c"
  1887 ;; Parameters:    Size  Location     Type
  1888 ;;		None
  1889 ;; Auto vars:     Size  Location     Type
  1890 ;;		None
  1891 ;; Return value:  Size  Location     Type
  1892 ;;                  1    wreg      void 
  1893 ;; Registers used:
  1894 ;;		wreg, status,2, status,0, cstack
  1895 ;; Tracked objects:
  1896 ;;		On entry : 0/0
  1897 ;;		On exit  : 0/0
  1898 ;;		Unchanged: 0/0
  1899 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1904 ;;Total ram usage:        0 bytes
  1905 ;; Hardware stack levels used: 1
  1906 ;; Hardware stack levels required when called: 4
  1907 ;; This function calls:
  1908 ;;		_delay_ms
  1909 ;;		_lcd_init_command_list
  1910 ;; This function is called by:
  1911 ;;		_main
  1912 ;; This function uses a non-reentrant model
  1913 ;;
  1914                           
  1915                           	psect	text1
  1916   010FA4                     __ptext1:
  1917                           	callstack 0
  1918   010FA4                     _lcd_init:
  1919                           	callstack 122
  1920   010FA4                     
  1921                           ;ILI9225.c: 125:     LATD4 = 1;
  1922   010FA4  88C1               	bsf	1217,4,c	;volatile
  1923                           
  1924                           ;ILI9225.c: 126:     LATA4 = 0;
  1925   010FA6  98BE               	bcf	1214,4,c	;volatile
  1926                           
  1927                           ;ILI9225.c: 127:     LATA3 = 1;
  1928   010FA8  86BE               	bsf	1214,3,c	;volatile
  1929                           
  1930                           ;ILI9225.c: 130:     LATA3 = 0;
  1931   010FAA  96BE               	bcf	1214,3,c	;volatile
  1932   010FAC                     
  1933                           ;ILI9225.c: 131:     delay_ms(500);
  1934   010FAC  0E00               	movlw	0
  1935   010FAE  6E25               	movwf	delay_ms@millis^(0+1280),c
  1936   010FB0  0E00               	movlw	0
  1937   010FB2  6E26               	movwf	(delay_ms@millis+1)^(0+1280),c
  1938   010FB4  0EFA               	movlw	250
  1939   010FB6  6E27               	movwf	(delay_ms@millis+2)^(0+1280),c
  1940   010FB8  0E43               	movlw	67
  1941   010FBA  6E28               	movwf	(delay_ms@millis+3)^(0+1280),c
  1942   010FBC  ECF4  F086         	call	_delay_ms	;wreg free
  1943   010FC0                     
  1944                           ;ILI9225.c: 132:     LATA3 = 1;
  1945   010FC0  86BE               	bsf	1214,3,c	;volatile
  1946                           
  1947                           ;ILI9225.c: 133:     delay_ms(500);
  1948   010FC2  0E00               	movlw	0
  1949   010FC4  6E25               	movwf	delay_ms@millis^(0+1280),c
  1950   010FC6  0E00               	movlw	0
  1951   010FC8  6E26               	movwf	(delay_ms@millis+1)^(0+1280),c
  1952   010FCA  0EFA               	movlw	250
  1953   010FCC  6E27               	movwf	(delay_ms@millis+2)^(0+1280),c
  1954   010FCE  0E43               	movlw	67
  1955   010FD0  6E28               	movwf	(delay_ms@millis+3)^(0+1280),c
  1956   010FD2  ECF4  F086         	call	_delay_ms	;wreg free
  1957                           
  1958                           ;ILI9225.c: 135:     lcd_init_command_list();
  1959   010FD6  EC60  F082         	call	_lcd_init_command_list	;wreg free
  1960   010FDA  0012               	return		;funcret
  1961   010FDC                     __end_of_lcd_init:
  1962                           	callstack 0
  1963                           
  1964 ;; *************** function _lcd_init_command_list *****************
  1965 ;; Defined at:
  1966 ;;		line 144 in file "ILI9225.c"
  1967 ;; Parameters:    Size  Location     Type
  1968 ;;		None
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;		None
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, status,2, status,0, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  1980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1984 ;;Total ram usage:        0 bytes
  1985 ;; Hardware stack levels used: 1
  1986 ;; Hardware stack levels required when called: 3
  1987 ;; This function calls:
  1988 ;;		_delay_ms
  1989 ;;		_lcd_write_register
  1990 ;; This function is called by:
  1991 ;;		_lcd_init
  1992 ;; This function uses a non-reentrant model
  1993 ;;
  1994                           
  1995                           	psect	text2
  1996   0104C0                     __ptext2:
  1997                           	callstack 0
  1998   0104C0                     _lcd_init_command_list:
  1999                           	callstack 122
  2000   0104C0                     
  2001                           ;ILI9225.c: 147:     lcd_write_register((0x10u), 0x0000);
  2002   0104C0  0E00               	movlw	0
  2003   0104C2  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2004   0104C4  0E10               	movlw	16
  2005   0104C6  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2006   0104C8  0E00               	movlw	0
  2007   0104CA  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2008   0104CC  0E00               	movlw	0
  2009   0104CE  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2010   0104D0  EC38  F088         	call	_lcd_write_register	;wreg free
  2011                           
  2012                           ;ILI9225.c: 148:     lcd_write_register((0x11u), 0x0000);
  2013   0104D4  0E00               	movlw	0
  2014   0104D6  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2015   0104D8  0E11               	movlw	17
  2016   0104DA  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2017   0104DC  0E00               	movlw	0
  2018   0104DE  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2019   0104E0  0E00               	movlw	0
  2020   0104E2  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2021   0104E4  EC38  F088         	call	_lcd_write_register	;wreg free
  2022                           
  2023                           ;ILI9225.c: 149:     lcd_write_register((0x12u), 0x0000);
  2024   0104E8  0E00               	movlw	0
  2025   0104EA  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2026   0104EC  0E12               	movlw	18
  2027   0104EE  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2028   0104F0  0E00               	movlw	0
  2029   0104F2  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2030   0104F4  0E00               	movlw	0
  2031   0104F6  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2032   0104F8  EC38  F088         	call	_lcd_write_register	;wreg free
  2033                           
  2034                           ;ILI9225.c: 150:     lcd_write_register((0x13u), 0x0000);
  2035   0104FC  0E00               	movlw	0
  2036   0104FE  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2037   010500  0E13               	movlw	19
  2038   010502  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2039   010504  0E00               	movlw	0
  2040   010506  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2041   010508  0E00               	movlw	0
  2042   01050A  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2043   01050C  EC38  F088         	call	_lcd_write_register	;wreg free
  2044                           
  2045                           ;ILI9225.c: 151:     lcd_write_register((0x14u), 0x0000);
  2046   010510  0E00               	movlw	0
  2047   010512  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2048   010514  0E14               	movlw	20
  2049   010516  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2050   010518  0E00               	movlw	0
  2051   01051A  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2052   01051C  0E00               	movlw	0
  2053   01051E  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2054   010520  EC38  F088         	call	_lcd_write_register	;wreg free
  2055   010524                     
  2056                           ;ILI9225.c: 153:     delay_ms(10);
  2057   010524  0E00               	movlw	0
  2058   010526  6E25               	movwf	delay_ms@millis^(0+1280),c
  2059   010528  0E00               	movlw	0
  2060   01052A  6E26               	movwf	(delay_ms@millis+1)^(0+1280),c
  2061   01052C  0E20               	movlw	32
  2062   01052E  6E27               	movwf	(delay_ms@millis+2)^(0+1280),c
  2063   010530  0E41               	movlw	65
  2064   010532  6E28               	movwf	(delay_ms@millis+3)^(0+1280),c
  2065   010534  ECF4  F086         	call	_delay_ms	;wreg free
  2066   010538                     
  2067                           ;ILI9225.c: 155:     lcd_write_register((0x11u), 0x0018);
  2068   010538  0E00               	movlw	0
  2069   01053A  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2070   01053C  0E11               	movlw	17
  2071   01053E  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2072   010540  0E00               	movlw	0
  2073   010542  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2074   010544  0E18               	movlw	24
  2075   010546  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2076   010548  EC38  F088         	call	_lcd_write_register	;wreg free
  2077   01054C                     
  2078                           ;ILI9225.c: 156:     lcd_write_register((0x12u), 0x6121);
  2079   01054C  0E00               	movlw	0
  2080   01054E  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2081   010550  0E12               	movlw	18
  2082   010552  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2083   010554  0E61               	movlw	97
  2084   010556  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2085   010558  0E21               	movlw	33
  2086   01055A  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2087   01055C  EC38  F088         	call	_lcd_write_register	;wreg free
  2088   010560                     
  2089                           ;ILI9225.c: 157:     lcd_write_register((0x13u), 0x006F);
  2090   010560  0E00               	movlw	0
  2091   010562  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2092   010564  0E13               	movlw	19
  2093   010566  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2094   010568  0E00               	movlw	0
  2095   01056A  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2096   01056C  0E6F               	movlw	111
  2097   01056E  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2098   010570  EC38  F088         	call	_lcd_write_register	;wreg free
  2099   010574                     
  2100                           ;ILI9225.c: 158:     lcd_write_register((0x14u), 0x495F);
  2101   010574  0E00               	movlw	0
  2102   010576  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2103   010578  0E14               	movlw	20
  2104   01057A  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2105   01057C  0E49               	movlw	73
  2106   01057E  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2107   010580  0E5F               	movlw	95
  2108   010582  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2109   010584  EC38  F088         	call	_lcd_write_register	;wreg free
  2110   010588                     
  2111                           ;ILI9225.c: 159:     lcd_write_register((0x10u), 0x0800);
  2112   010588  0E00               	movlw	0
  2113   01058A  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2114   01058C  0E10               	movlw	16
  2115   01058E  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2116   010590  0E08               	movlw	8
  2117   010592  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2118   010594  0E00               	movlw	0
  2119   010596  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2120   010598  EC38  F088         	call	_lcd_write_register	;wreg free
  2121                           
  2122                           ;ILI9225.c: 161:     delay_ms(10);
  2123   01059C  0E00               	movlw	0
  2124   01059E  6E25               	movwf	delay_ms@millis^(0+1280),c
  2125   0105A0  0E00               	movlw	0
  2126   0105A2  6E26               	movwf	(delay_ms@millis+1)^(0+1280),c
  2127   0105A4  0E20               	movlw	32
  2128   0105A6  6E27               	movwf	(delay_ms@millis+2)^(0+1280),c
  2129   0105A8  0E41               	movlw	65
  2130   0105AA  6E28               	movwf	(delay_ms@millis+3)^(0+1280),c
  2131   0105AC  ECF4  F086         	call	_delay_ms	;wreg free
  2132   0105B0                     
  2133                           ;ILI9225.c: 164:     lcd_write_register((0x11u), 0x103B);
  2134   0105B0  0E00               	movlw	0
  2135   0105B2  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2136   0105B4  0E11               	movlw	17
  2137   0105B6  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2138   0105B8  0E10               	movlw	16
  2139   0105BA  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2140   0105BC  0E3B               	movlw	59
  2141   0105BE  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2142   0105C0  EC38  F088         	call	_lcd_write_register	;wreg free
  2143   0105C4                     
  2144                           ;ILI9225.c: 166:     delay_ms(50);
  2145   0105C4  0E00               	movlw	0
  2146   0105C6  6E25               	movwf	delay_ms@millis^(0+1280),c
  2147   0105C8  0E00               	movlw	0
  2148   0105CA  6E26               	movwf	(delay_ms@millis+1)^(0+1280),c
  2149   0105CC  0E48               	movlw	72
  2150   0105CE  6E27               	movwf	(delay_ms@millis+2)^(0+1280),c
  2151   0105D0  0E42               	movlw	66
  2152   0105D2  6E28               	movwf	(delay_ms@millis+3)^(0+1280),c
  2153   0105D4  ECF4  F086         	call	_delay_ms	;wreg free
  2154                           
  2155                           ;ILI9225.c: 169:     lcd_write_register((0x01u), 0x011C);
  2156   0105D8  0E00               	movlw	0
  2157   0105DA  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2158   0105DC  0E01               	movlw	1
  2159   0105DE  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2160   0105E0  0E01               	movlw	1
  2161   0105E2  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2162   0105E4  0E1C               	movlw	28
  2163   0105E6  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2164   0105E8  EC38  F088         	call	_lcd_write_register	;wreg free
  2165                           
  2166                           ;ILI9225.c: 170:     lcd_write_register((0x02u), 0x0100);
  2167   0105EC  0E00               	movlw	0
  2168   0105EE  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2169   0105F0  0E02               	movlw	2
  2170   0105F2  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2171   0105F4  0E01               	movlw	1
  2172   0105F6  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2173   0105F8  0E00               	movlw	0
  2174   0105FA  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2175   0105FC  EC38  F088         	call	_lcd_write_register	;wreg free
  2176                           
  2177                           ;ILI9225.c: 171:     lcd_write_register((0x03u), 0x1030);
  2178   010600  0E00               	movlw	0
  2179   010602  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2180   010604  0E03               	movlw	3
  2181   010606  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2182   010608  0E10               	movlw	16
  2183   01060A  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2184   01060C  0E30               	movlw	48
  2185   01060E  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2186   010610  EC38  F088         	call	_lcd_write_register	;wreg free
  2187                           
  2188                           ;ILI9225.c: 172:     lcd_write_register((0x07u), 0x0000);
  2189   010614  0E00               	movlw	0
  2190   010616  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2191   010618  0E07               	movlw	7
  2192   01061A  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2193   01061C  0E00               	movlw	0
  2194   01061E  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2195   010620  0E00               	movlw	0
  2196   010622  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2197   010624  EC38  F088         	call	_lcd_write_register	;wreg free
  2198                           
  2199                           ;ILI9225.c: 173:     lcd_write_register((0x08u), 0x0808);
  2200   010628  0E00               	movlw	0
  2201   01062A  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2202   01062C  0E08               	movlw	8
  2203   01062E  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2204   010630  0E08               	movlw	8
  2205   010632  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2206   010634  0E08               	movlw	8
  2207   010636  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2208   010638  EC38  F088         	call	_lcd_write_register	;wreg free
  2209                           
  2210                           ;ILI9225.c: 174:     lcd_write_register((0x0Bu), 0x1100);
  2211   01063C  0E00               	movlw	0
  2212   01063E  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2213   010640  0E0B               	movlw	11
  2214   010642  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2215   010644  0E11               	movlw	17
  2216   010646  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2217   010648  0E00               	movlw	0
  2218   01064A  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2219   01064C  EC38  F088         	call	_lcd_write_register	;wreg free
  2220                           
  2221                           ;ILI9225.c: 175:     lcd_write_register((0x0Cu), 0x0000);
  2222   010650  0E00               	movlw	0
  2223   010652  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2224   010654  0E0C               	movlw	12
  2225   010656  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2226   010658  0E00               	movlw	0
  2227   01065A  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2228   01065C  0E00               	movlw	0
  2229   01065E  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2230   010660  EC38  F088         	call	_lcd_write_register	;wreg free
  2231                           
  2232                           ;ILI9225.c: 176:     lcd_write_register((0x0Fu), 0x0D01);
  2233   010664  0E00               	movlw	0
  2234   010666  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2235   010668  0E0F               	movlw	15
  2236   01066A  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2237   01066C  0E0D               	movlw	13
  2238   01066E  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2239   010670  0E01               	movlw	1
  2240   010672  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2241   010674  EC38  F088         	call	_lcd_write_register	;wreg free
  2242                           
  2243                           ;ILI9225.c: 177:     lcd_write_register((0x15u), 0x0020);
  2244   010678  0E00               	movlw	0
  2245   01067A  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2246   01067C  0E15               	movlw	21
  2247   01067E  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2248   010680  0E00               	movlw	0
  2249   010682  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2250   010684  0E20               	movlw	32
  2251   010686  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2252   010688  EC38  F088         	call	_lcd_write_register	;wreg free
  2253                           
  2254                           ;ILI9225.c: 178:     lcd_write_register((0x20u), 0x0000);
  2255   01068C  0E00               	movlw	0
  2256   01068E  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2257   010690  0E20               	movlw	32
  2258   010692  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2259   010694  0E00               	movlw	0
  2260   010696  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2261   010698  0E00               	movlw	0
  2262   01069A  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2263   01069C  EC38  F088         	call	_lcd_write_register	;wreg free
  2264                           
  2265                           ;ILI9225.c: 179:     lcd_write_register((0x21u), 0x0000);
  2266   0106A0  0E00               	movlw	0
  2267   0106A2  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2268   0106A4  0E21               	movlw	33
  2269   0106A6  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2270   0106A8  0E00               	movlw	0
  2271   0106AA  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2272   0106AC  0E00               	movlw	0
  2273   0106AE  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2274   0106B0  EC38  F088         	call	_lcd_write_register	;wreg free
  2275                           
  2276                           ;ILI9225.c: 182:     lcd_write_register((0x30u), 0x0000);
  2277   0106B4  0E00               	movlw	0
  2278   0106B6  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2279   0106B8  0E30               	movlw	48
  2280   0106BA  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2281   0106BC  0E00               	movlw	0
  2282   0106BE  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2283   0106C0  0E00               	movlw	0
  2284   0106C2  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2285   0106C4  EC38  F088         	call	_lcd_write_register	;wreg free
  2286                           
  2287                           ;ILI9225.c: 183:     lcd_write_register((0x31u), 0x00DB);
  2288   0106C8  0E00               	movlw	0
  2289   0106CA  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2290   0106CC  0E31               	movlw	49
  2291   0106CE  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2292   0106D0  0E00               	movlw	0
  2293   0106D2  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2294   0106D4  0EDB               	movlw	219
  2295   0106D6  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2296   0106D8  EC38  F088         	call	_lcd_write_register	;wreg free
  2297                           
  2298                           ;ILI9225.c: 184:     lcd_write_register((0x32u), 0x0000);
  2299   0106DC  0E00               	movlw	0
  2300   0106DE  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2301   0106E0  0E32               	movlw	50
  2302   0106E2  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2303   0106E4  0E00               	movlw	0
  2304   0106E6  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2305   0106E8  0E00               	movlw	0
  2306   0106EA  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2307   0106EC  EC38  F088         	call	_lcd_write_register	;wreg free
  2308                           
  2309                           ;ILI9225.c: 185:     lcd_write_register((0x33u), 0x0000);
  2310   0106F0  0E00               	movlw	0
  2311   0106F2  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2312   0106F4  0E33               	movlw	51
  2313   0106F6  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2314   0106F8  0E00               	movlw	0
  2315   0106FA  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2316   0106FC  0E00               	movlw	0
  2317   0106FE  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2318   010700  EC38  F088         	call	_lcd_write_register	;wreg free
  2319                           
  2320                           ;ILI9225.c: 186:     lcd_write_register((0x34u), 0x00DB);
  2321   010704  0E00               	movlw	0
  2322   010706  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2323   010708  0E34               	movlw	52
  2324   01070A  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2325   01070C  0E00               	movlw	0
  2326   01070E  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2327   010710  0EDB               	movlw	219
  2328   010712  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2329   010714  EC38  F088         	call	_lcd_write_register	;wreg free
  2330                           
  2331                           ;ILI9225.c: 187:     lcd_write_register((0x35u), 0x0000);
  2332   010718  0E00               	movlw	0
  2333   01071A  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2334   01071C  0E35               	movlw	53
  2335   01071E  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2336   010720  0E00               	movlw	0
  2337   010722  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2338   010724  0E00               	movlw	0
  2339   010726  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2340   010728  EC38  F088         	call	_lcd_write_register	;wreg free
  2341                           
  2342                           ;ILI9225.c: 188:     lcd_write_register((0x36u), 0x00AF);
  2343   01072C  0E00               	movlw	0
  2344   01072E  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2345   010730  0E36               	movlw	54
  2346   010732  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2347   010734  0E00               	movlw	0
  2348   010736  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2349   010738  0EAF               	movlw	175
  2350   01073A  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2351   01073C  EC38  F088         	call	_lcd_write_register	;wreg free
  2352                           
  2353                           ;ILI9225.c: 189:     lcd_write_register((0x37u), 0x0000);
  2354   010740  0E00               	movlw	0
  2355   010742  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2356   010744  0E37               	movlw	55
  2357   010746  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2358   010748  0E00               	movlw	0
  2359   01074A  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2360   01074C  0E00               	movlw	0
  2361   01074E  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2362   010750  EC38  F088         	call	_lcd_write_register	;wreg free
  2363                           
  2364                           ;ILI9225.c: 190:     lcd_write_register((0x38u), 0x00DB);
  2365   010754  0E00               	movlw	0
  2366   010756  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2367   010758  0E38               	movlw	56
  2368   01075A  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2369   01075C  0E00               	movlw	0
  2370   01075E  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2371   010760  0EDB               	movlw	219
  2372   010762  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2373   010764  EC38  F088         	call	_lcd_write_register	;wreg free
  2374                           
  2375                           ;ILI9225.c: 191:     lcd_write_register((0x39u), 0x0000);
  2376   010768  0E00               	movlw	0
  2377   01076A  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2378   01076C  0E39               	movlw	57
  2379   01076E  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2380   010770  0E00               	movlw	0
  2381   010772  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2382   010774  0E00               	movlw	0
  2383   010776  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2384   010778  EC38  F088         	call	_lcd_write_register	;wreg free
  2385                           
  2386                           ;ILI9225.c: 194:     lcd_write_register((0x50u), 0x0000);
  2387   01077C  0E00               	movlw	0
  2388   01077E  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2389   010780  0E50               	movlw	80
  2390   010782  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2391   010784  0E00               	movlw	0
  2392   010786  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2393   010788  0E00               	movlw	0
  2394   01078A  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2395   01078C  EC38  F088         	call	_lcd_write_register	;wreg free
  2396                           
  2397                           ;ILI9225.c: 195:     lcd_write_register((0x51u), 0x0808);
  2398   010790  0E00               	movlw	0
  2399   010792  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2400   010794  0E51               	movlw	81
  2401   010796  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2402   010798  0E08               	movlw	8
  2403   01079A  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2404   01079C  0E08               	movlw	8
  2405   01079E  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2406   0107A0  EC38  F088         	call	_lcd_write_register	;wreg free
  2407                           
  2408                           ;ILI9225.c: 196:     lcd_write_register((0x52u), 0x080A);
  2409   0107A4  0E00               	movlw	0
  2410   0107A6  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2411   0107A8  0E52               	movlw	82
  2412   0107AA  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2413   0107AC  0E08               	movlw	8
  2414   0107AE  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2415   0107B0  0E0A               	movlw	10
  2416   0107B2  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2417   0107B4  EC38  F088         	call	_lcd_write_register	;wreg free
  2418                           
  2419                           ;ILI9225.c: 197:     lcd_write_register((0x53u), 0x000A);
  2420   0107B8  0E00               	movlw	0
  2421   0107BA  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2422   0107BC  0E53               	movlw	83
  2423   0107BE  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2424   0107C0  0E00               	movlw	0
  2425   0107C2  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2426   0107C4  0E0A               	movlw	10
  2427   0107C6  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2428   0107C8  EC38  F088         	call	_lcd_write_register	;wreg free
  2429                           
  2430                           ;ILI9225.c: 198:     lcd_write_register((0x54u), 0x0A08);
  2431   0107CC  0E00               	movlw	0
  2432   0107CE  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2433   0107D0  0E54               	movlw	84
  2434   0107D2  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2435   0107D4  0E0A               	movlw	10
  2436   0107D6  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2437   0107D8  0E08               	movlw	8
  2438   0107DA  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2439   0107DC  EC38  F088         	call	_lcd_write_register	;wreg free
  2440                           
  2441                           ;ILI9225.c: 199:     lcd_write_register((0x55u), 0x0808);
  2442   0107E0  0E00               	movlw	0
  2443   0107E2  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2444   0107E4  0E55               	movlw	85
  2445   0107E6  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2446   0107E8  0E08               	movlw	8
  2447   0107EA  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2448   0107EC  0E08               	movlw	8
  2449   0107EE  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2450   0107F0  EC38  F088         	call	_lcd_write_register	;wreg free
  2451                           
  2452                           ;ILI9225.c: 200:     lcd_write_register((0x56u), 0x0000);
  2453   0107F4  0E00               	movlw	0
  2454   0107F6  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2455   0107F8  0E56               	movlw	86
  2456   0107FA  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2457   0107FC  0E00               	movlw	0
  2458   0107FE  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2459   010800  0E00               	movlw	0
  2460   010802  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2461   010804  EC38  F088         	call	_lcd_write_register	;wreg free
  2462                           
  2463                           ;ILI9225.c: 201:     lcd_write_register((0x57u), 0x0A00);
  2464   010808  0E00               	movlw	0
  2465   01080A  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2466   01080C  0E57               	movlw	87
  2467   01080E  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2468   010810  0E0A               	movlw	10
  2469   010812  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2470   010814  0E00               	movlw	0
  2471   010816  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2472   010818  EC38  F088         	call	_lcd_write_register	;wreg free
  2473                           
  2474                           ;ILI9225.c: 202:     lcd_write_register((0x58u), 0x0710);
  2475   01081C  0E00               	movlw	0
  2476   01081E  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2477   010820  0E58               	movlw	88
  2478   010822  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2479   010824  0E07               	movlw	7
  2480   010826  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2481   010828  0E10               	movlw	16
  2482   01082A  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2483   01082C  EC38  F088         	call	_lcd_write_register	;wreg free
  2484                           
  2485                           ;ILI9225.c: 203:     lcd_write_register((0x59u), 0x0710);
  2486   010830  0E00               	movlw	0
  2487   010832  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2488   010834  0E59               	movlw	89
  2489   010836  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2490   010838  0E07               	movlw	7
  2491   01083A  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2492   01083C  0E10               	movlw	16
  2493   01083E  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2494   010840  EC38  F088         	call	_lcd_write_register	;wreg free
  2495                           
  2496                           ;ILI9225.c: 205:     lcd_write_register((0x07u), 0x0012);
  2497   010844  0E00               	movlw	0
  2498   010846  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2499   010848  0E07               	movlw	7
  2500   01084A  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2501   01084C  0E00               	movlw	0
  2502   01084E  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2503   010850  0E12               	movlw	18
  2504   010852  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2505   010854  EC38  F088         	call	_lcd_write_register	;wreg free
  2506   010858                     
  2507                           ;ILI9225.c: 207:     delay_ms(50);
  2508   010858  0E00               	movlw	0
  2509   01085A  6E25               	movwf	delay_ms@millis^(0+1280),c
  2510   01085C  0E00               	movlw	0
  2511   01085E  6E26               	movwf	(delay_ms@millis+1)^(0+1280),c
  2512   010860  0E48               	movlw	72
  2513   010862  6E27               	movwf	(delay_ms@millis+2)^(0+1280),c
  2514   010864  0E42               	movlw	66
  2515   010866  6E28               	movwf	(delay_ms@millis+3)^(0+1280),c
  2516   010868  ECF4  F086         	call	_delay_ms	;wreg free
  2517   01086C                     
  2518                           ;ILI9225.c: 209:     lcd_write_register((0x07u), 0x1017);
  2519   01086C  0E00               	movlw	0
  2520   01086E  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  2521   010870  0E07               	movlw	7
  2522   010872  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  2523   010874  0E10               	movlw	16
  2524   010876  6E06               	movwf	(lcd_write_register@data+1)^(0+1280),c
  2525   010878  0E17               	movlw	23
  2526   01087A  6E05               	movwf	lcd_write_register@data^(0+1280),c
  2527   01087C  EC38  F088         	call	_lcd_write_register	;wreg free
  2528   010880  0012               	return		;funcret
  2529   010882                     __end_of_lcd_init_command_list:
  2530                           	callstack 0
  2531                           
  2532 ;; *************** function _delay_ms *****************
  2533 ;; Defined at:
  2534 ;;		line 100 in file "ILI9225.c"
  2535 ;; Parameters:    Size  Location     Type
  2536 ;;  millis          4   36[COMRAM] void 
  2537 ;; Auto vars:     Size  Location     Type
  2538 ;;  counter         4   42[COMRAM] void 
  2539 ;;  multiplier      2   40[COMRAM] int 
  2540 ;; Return value:  Size  Location     Type
  2541 ;;                  1    wreg      void 
  2542 ;; Registers used:
  2543 ;;		wreg, status,2, status,0, cstack
  2544 ;; Tracked objects:
  2545 ;;		On entry : 0/0
  2546 ;;		On exit  : 0/0
  2547 ;;		Unchanged: 0/0
  2548 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2549 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2550 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2552 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2553 ;;Total ram usage:       10 bytes
  2554 ;; Hardware stack levels used: 1
  2555 ;; Hardware stack levels required when called: 2
  2556 ;; This function calls:
  2557 ;;		___fleq
  2558 ;;		___flsub
  2559 ;; This function is called by:
  2560 ;;		_main
  2561 ;;		_lcd_init
  2562 ;;		_lcd_init_command_list
  2563 ;; This function uses a non-reentrant model
  2564 ;;
  2565                           
  2566                           	psect	text3
  2567   010DE8                     __ptext3:
  2568                           	callstack 0
  2569   010DE8                     _delay_ms:
  2570                           	callstack 122
  2571   010DE8                     
  2572                           ;ILI9225.c: 101:     int multiplier = 4;
  2573   010DE8  0E00               	movlw	0
  2574   010DEA  6E2A               	movwf	(delay_ms@multiplier+1)^(0+1280),c
  2575   010DEC  0E04               	movlw	4
  2576   010DEE  6E29               	movwf	delay_ms@multiplier^(0+1280),c
  2577   010DF0                     l1950:
  2578                           
  2579                           ;ILI9225.c: 102:     double counter = millis;
  2580   010DF0  C525  F52B         	movff	delay_ms@millis,delay_ms@counter
  2581   010DF4  C526  F52C         	movff	delay_ms@millis+1,delay_ms@counter+1
  2582   010DF8  C527  F52D         	movff	delay_ms@millis+2,delay_ms@counter+2
  2583   010DFC  C528  F52E         	movff	delay_ms@millis+3,delay_ms@counter+3
  2584                           
  2585                           ;ILI9225.c: 103:     while(multiplier--) {
  2586   010E00  EF37  F087         	goto	l1954
  2587   010E04                     l1952:
  2588   010E04  0E00               	movlw	0
  2589   010E06  6E15               	movwf	___flsub@a^(0+1280),c
  2590   010E08  0E00               	movlw	0
  2591   010E0A  6E16               	movwf	(___flsub@a+1)^(0+1280),c
  2592   010E0C  0E80               	movlw	128
  2593   010E0E  6E17               	movwf	(___flsub@a+2)^(0+1280),c
  2594   010E10  0E3F               	movlw	63
  2595   010E12  6E18               	movwf	(___flsub@a+3)^(0+1280),c
  2596   010E14  C52B  F511         	movff	delay_ms@counter,___flsub@b
  2597   010E18  C52C  F512         	movff	delay_ms@counter+1,___flsub@b+1
  2598   010E1C  C52D  F513         	movff	delay_ms@counter+2,___flsub@b+2
  2599   010E20  C52E  F514         	movff	delay_ms@counter+3,___flsub@b+3
  2600   010E24  EC91  F087         	call	___flsub	;wreg free
  2601   010E28  C511  F52B         	movff	?___flsub,delay_ms@counter
  2602   010E2C  C512  F52C         	movff	?___flsub+1,delay_ms@counter+1
  2603   010E30  C513  F52D         	movff	?___flsub+2,delay_ms@counter+2
  2604   010E34  C514  F52E         	movff	?___flsub+3,delay_ms@counter+3
  2605   010E38  C52B  F519         	movff	delay_ms@counter,___fleq@ff1
  2606   010E3C  C52C  F51A         	movff	delay_ms@counter+1,___fleq@ff1+1
  2607   010E40  C52D  F51B         	movff	delay_ms@counter+2,___fleq@ff1+2
  2608   010E44  C52E  F51C         	movff	delay_ms@counter+3,___fleq@ff1+3
  2609   010E48  0E00               	movlw	0
  2610   010E4A  6E1D               	movwf	___fleq@ff2^(0+1280),c
  2611   010E4C  0E00               	movlw	0
  2612   010E4E  6E1E               	movwf	(___fleq@ff2+1)^(0+1280),c
  2613   010E50  0E80               	movlw	128
  2614   010E52  6E1F               	movwf	(___fleq@ff2+2)^(0+1280),c
  2615   010E54  0EBF               	movlw	191
  2616   010E56  6E20               	movwf	(___fleq@ff2+3)^(0+1280),c
  2617   010E58  EC9F  F086         	call	___fleq	;wreg free
  2618   010E5C  A0D8               	btfss	status,0,c
  2619   010E5E  EF33  F087         	goto	u1181
  2620   010E62  EF35  F087         	goto	u1180
  2621   010E66                     u1181:
  2622   010E66  EF02  F087         	goto	l1952
  2623   010E6A                     u1180:
  2624   010E6A  EFF8  F086         	goto	l1950
  2625   010E6E                     l1954:
  2626                           
  2627                           ;ILI9225.c: 103:     while(multiplier--) {
  2628   010E6E  0629               	decf	delay_ms@multiplier^(0+1280),f,c
  2629   010E70  A0D8               	btfss	status,0,c
  2630   010E72  062A               	decf	(delay_ms@multiplier+1)^(0+1280),f,c
  2631   010E74  2829               	incf	delay_ms@multiplier^(0+1280),w,c
  2632   010E76  E106               	bnz	u1191
  2633   010E78  282A               	incf	(delay_ms@multiplier+1)^(0+1280),w,c
  2634   010E7A  A4D8               	btfss	status,2,c
  2635   010E7C  EF42  F087         	goto	u1191
  2636   010E80  EF44  F087         	goto	u1190
  2637   010E84                     u1191:
  2638   010E84  EF02  F087         	goto	l1952
  2639   010E88                     u1190:
  2640   010E88  0012               	return		;funcret
  2641   010E8A                     __end_of_delay_ms:
  2642                           	callstack 0
  2643                           
  2644 ;; *************** function ___flsub *****************
  2645 ;; Defined at:
  2646 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  2647 ;; Parameters:    Size  Location     Type
  2648 ;;  b               4   16[COMRAM] void 
  2649 ;;  a               4   20[COMRAM] void 
  2650 ;; Auto vars:     Size  Location     Type
  2651 ;;		None
  2652 ;; Return value:  Size  Location     Type
  2653 ;;                  4   16[COMRAM] void 
  2654 ;; Registers used:
  2655 ;;		wreg, status,2, status,0, cstack
  2656 ;; Tracked objects:
  2657 ;;		On entry : 0/0
  2658 ;;		On exit  : 0/0
  2659 ;;		Unchanged: 0/0
  2660 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2661 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2664 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2665 ;;Total ram usage:        8 bytes
  2666 ;; Hardware stack levels used: 1
  2667 ;; Hardware stack levels required when called: 1
  2668 ;; This function calls:
  2669 ;;		___fladd
  2670 ;; This function is called by:
  2671 ;;		_delay_ms
  2672 ;; This function uses a non-reentrant model
  2673 ;;
  2674                           
  2675                           	psect	text4
  2676   010F22                     __ptext4:
  2677                           	callstack 0
  2678   010F22                     ___flsub:
  2679                           	callstack 122
  2680   010F22  0E00               	movlw	0
  2681   010F24  1A15               	xorwf	___flsub@a^(0+1280),f,c
  2682   010F26  0E00               	movlw	0
  2683   010F28  1A16               	xorwf	(___flsub@a+1)^(0+1280),f,c
  2684   010F2A  0E00               	movlw	0
  2685   010F2C  1A17               	xorwf	(___flsub@a+2)^(0+1280),f,c
  2686   010F2E  0E80               	movlw	128
  2687   010F30  1A18               	xorwf	(___flsub@a+3)^(0+1280),f,c
  2688   010F32  C511  F501         	movff	___flsub@b,___fladd@b
  2689   010F36  C512  F502         	movff	___flsub@b+1,___fladd@b+1
  2690   010F3A  C513  F503         	movff	___flsub@b+2,___fladd@b+2
  2691   010F3E  C514  F504         	movff	___flsub@b+3,___fladd@b+3
  2692   010F42  C515  F505         	movff	___flsub@a,___fladd@a
  2693   010F46  C516  F506         	movff	___flsub@a+1,___fladd@a+1
  2694   010F4A  C517  F507         	movff	___flsub@a+2,___fladd@a+2
  2695   010F4E  C518  F508         	movff	___flsub@a+3,___fladd@a+3
  2696   010F52  EC00  F080         	call	___fladd	;wreg free
  2697   010F56  C501  F511         	movff	?___fladd,?___flsub
  2698   010F5A  C502  F512         	movff	?___fladd+1,?___flsub+1
  2699   010F5E  C503  F513         	movff	?___fladd+2,?___flsub+2
  2700   010F62  C504  F514         	movff	?___fladd+3,?___flsub+3
  2701   010F66  0012               	return		;funcret
  2702   010F68                     __end_of___flsub:
  2703                           	callstack 0
  2704                           
  2705 ;; *************** function ___fladd *****************
  2706 ;; Defined at:
  2707 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\sprcadd.c"
  2708 ;; Parameters:    Size  Location     Type
  2709 ;;  b               4    0[COMRAM] void 
  2710 ;;  a               4    4[COMRAM] void 
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  grs             1   15[COMRAM] unsigned char 
  2713 ;;  bexp            1   14[COMRAM] unsigned char 
  2714 ;;  aexp            1   13[COMRAM] unsigned char 
  2715 ;;  signs           1   12[COMRAM] unsigned char 
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  4    0[COMRAM] unsigned char 
  2718 ;; Registers used:
  2719 ;;		wreg, status,2, status,0
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  2725 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2726 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2727 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2728 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2729 ;;Total ram usage:       16 bytes
  2730 ;; Hardware stack levels used: 1
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		___flsub
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           	psect	text5
  2739   010000                     __ptext5:
  2740                           	callstack 0
  2741   010000                     ___fladd:
  2742                           	callstack 122
  2743   010000  5004               	movf	(___fladd@b+3)^(0+1280),w,c
  2744   010002  0B80               	andlw	128
  2745   010004  6E0D               	movwf	___fladd@signs^(0+1280),c
  2746   010006  5004               	movf	(___fladd@b+3)^(0+1280),w,c
  2747   010008  2404               	addwf	(___fladd@b+3)^(0+1280),w,c
  2748   01000A  6E0F               	movwf	___fladd@bexp^(0+1280),c
  2749   01000C  AE03               	btfss	(___fladd@b+2)^(0+1280),7,c
  2750   01000E  EF0B  F080         	goto	u721
  2751   010012  EF0D  F080         	goto	u720
  2752   010016                     u721:
  2753   010016  EF0E  F080         	goto	l1680
  2754   01001A                     u720:
  2755   01001A  800F               	bsf	___fladd@bexp^(0+1280),0,c
  2756   01001C                     l1680:
  2757   01001C  500F               	movf	___fladd@bexp^(0+1280),w,c
  2758   01001E  B4D8               	btfsc	status,2,c
  2759   010020  EF14  F080         	goto	u731
  2760   010024  EF16  F080         	goto	u730
  2761   010028                     u731:
  2762   010028  EF2B  F080         	goto	l1690
  2763   01002C                     u730:
  2764   01002C  280F               	incf	___fladd@bexp^(0+1280),w,c
  2765   01002E  A4D8               	btfss	status,2,c
  2766   010030  EF1C  F080         	goto	u741
  2767   010034  EF1E  F080         	goto	u740
  2768   010038                     u741:
  2769   010038  EF26  F080         	goto	l1686
  2770   01003C                     u740:
  2771   01003C  0E00               	movlw	0
  2772   01003E  6E01               	movwf	___fladd@b^(0+1280),c
  2773   010040  0E00               	movlw	0
  2774   010042  6E02               	movwf	(___fladd@b+1)^(0+1280),c
  2775   010044  0E00               	movlw	0
  2776   010046  6E03               	movwf	(___fladd@b+2)^(0+1280),c
  2777   010048  0E00               	movlw	0
  2778   01004A  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  2779   01004C                     l1686:
  2780   01004C  8E03               	bsf	(___fladd@b+2)^(0+1280),7,c
  2781   01004E  0E00               	movlw	0
  2782   010050  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  2783   010052  EF33  F080         	goto	l1692
  2784   010056                     l1690:
  2785   010056  0E00               	movlw	0
  2786   010058  6E01               	movwf	___fladd@b^(0+1280),c
  2787   01005A  0E00               	movlw	0
  2788   01005C  6E02               	movwf	(___fladd@b+1)^(0+1280),c
  2789   01005E  0E00               	movlw	0
  2790   010060  6E03               	movwf	(___fladd@b+2)^(0+1280),c
  2791   010062  0E00               	movlw	0
  2792   010064  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  2793   010066                     l1692:
  2794   010066  5008               	movf	(___fladd@a+3)^(0+1280),w,c
  2795   010068  0B80               	andlw	128
  2796   01006A  6E0E               	movwf	___fladd@aexp^(0+1280),c
  2797   01006C  500D               	movf	___fladd@signs^(0+1280),w,c
  2798   01006E  180E               	xorwf	___fladd@aexp^(0+1280),w,c
  2799   010070  B4D8               	btfsc	status,2,c
  2800   010072  EF3D  F080         	goto	u751
  2801   010076  EF3F  F080         	goto	u750
  2802   01007A                     u751:
  2803   01007A  EF40  F080         	goto	l1698
  2804   01007E                     u750:
  2805   01007E  8C0D               	bsf	___fladd@signs^(0+1280),6,c
  2806   010080                     l1698:
  2807   010080  5008               	movf	(___fladd@a+3)^(0+1280),w,c
  2808   010082  2408               	addwf	(___fladd@a+3)^(0+1280),w,c
  2809   010084  6E0E               	movwf	___fladd@aexp^(0+1280),c
  2810   010086  AE07               	btfss	(___fladd@a+2)^(0+1280),7,c
  2811   010088  EF48  F080         	goto	u761
  2812   01008C  EF4A  F080         	goto	u760
  2813   010090                     u761:
  2814   010090  EF4B  F080         	goto	l1704
  2815   010094                     u760:
  2816   010094  800E               	bsf	___fladd@aexp^(0+1280),0,c
  2817   010096                     l1704:
  2818   010096  500E               	movf	___fladd@aexp^(0+1280),w,c
  2819   010098  B4D8               	btfsc	status,2,c
  2820   01009A  EF51  F080         	goto	u771
  2821   01009E  EF53  F080         	goto	u770
  2822   0100A2                     u771:
  2823   0100A2  EF68  F080         	goto	l1714
  2824   0100A6                     u770:
  2825   0100A6  280E               	incf	___fladd@aexp^(0+1280),w,c
  2826   0100A8  A4D8               	btfss	status,2,c
  2827   0100AA  EF59  F080         	goto	u781
  2828   0100AE  EF5B  F080         	goto	u780
  2829   0100B2                     u781:
  2830   0100B2  EF63  F080         	goto	l1710
  2831   0100B6                     u780:
  2832   0100B6  0E00               	movlw	0
  2833   0100B8  6E05               	movwf	___fladd@a^(0+1280),c
  2834   0100BA  0E00               	movlw	0
  2835   0100BC  6E06               	movwf	(___fladd@a+1)^(0+1280),c
  2836   0100BE  0E00               	movlw	0
  2837   0100C0  6E07               	movwf	(___fladd@a+2)^(0+1280),c
  2838   0100C2  0E00               	movlw	0
  2839   0100C4  6E08               	movwf	(___fladd@a+3)^(0+1280),c
  2840   0100C6                     l1710:
  2841   0100C6  8E07               	bsf	(___fladd@a+2)^(0+1280),7,c
  2842   0100C8  0E00               	movlw	0
  2843   0100CA  6E08               	movwf	(___fladd@a+3)^(0+1280),c
  2844   0100CC  EF70  F080         	goto	l1716
  2845   0100D0                     l1714:
  2846   0100D0  0E00               	movlw	0
  2847   0100D2  6E05               	movwf	___fladd@a^(0+1280),c
  2848   0100D4  0E00               	movlw	0
  2849   0100D6  6E06               	movwf	(___fladd@a+1)^(0+1280),c
  2850   0100D8  0E00               	movlw	0
  2851   0100DA  6E07               	movwf	(___fladd@a+2)^(0+1280),c
  2852   0100DC  0E00               	movlw	0
  2853   0100DE  6E08               	movwf	(___fladd@a+3)^(0+1280),c
  2854   0100E0                     l1716:
  2855   0100E0  500F               	movf	___fladd@bexp^(0+1280),w,c
  2856   0100E2  5C0E               	subwf	___fladd@aexp^(0+1280),w,c
  2857   0100E4  B0D8               	btfsc	status,0,c
  2858   0100E6  EF77  F080         	goto	u791
  2859   0100EA  EF79  F080         	goto	u790
  2860   0100EE                     u791:
  2861   0100EE  EFA0  F080         	goto	l1752
  2862   0100F2                     u790:
  2863   0100F2  AC0D               	btfss	___fladd@signs^(0+1280),6,c
  2864   0100F4  EF7E  F080         	goto	u801
  2865   0100F8  EF80  F080         	goto	u800
  2866   0100FC                     u801:
  2867   0100FC  EF82  F080         	goto	l1722
  2868   010100                     u800:
  2869   010100  0E80               	movlw	128
  2870   010102  1A0D               	xorwf	___fladd@signs^(0+1280),f,c
  2871   010104                     l1722:
  2872   010104  C50F  F510         	movff	___fladd@bexp,___fladd@grs
  2873   010108  C50E  F50F         	movff	___fladd@aexp,___fladd@bexp
  2874   01010C  C510  F50E         	movff	___fladd@grs,___fladd@aexp
  2875   010110  C501  F510         	movff	___fladd@b,___fladd@grs
  2876   010114  C505  F501         	movff	___fladd@a,___fladd@b
  2877   010118  C510  F505         	movff	___fladd@grs,___fladd@a
  2878   01011C  C502  F510         	movff	___fladd@b+1,___fladd@grs
  2879   010120  C506  F502         	movff	___fladd@a+1,___fladd@b+1
  2880   010124  C510  F506         	movff	___fladd@grs,___fladd@a+1
  2881   010128  C503  F510         	movff	___fladd@b+2,___fladd@grs
  2882   01012C  C507  F503         	movff	___fladd@a+2,___fladd@b+2
  2883   010130  C510  F507         	movff	___fladd@grs,___fladd@a+2
  2884   010134  C504  F510         	movff	___fladd@b+3,___fladd@grs
  2885   010138  C508  F504         	movff	___fladd@a+3,___fladd@b+3
  2886   01013C  C510  F508         	movff	___fladd@grs,___fladd@a+3
  2887   010140                     l1752:
  2888   010140  0E00               	movlw	0
  2889   010142  6E10               	movwf	___fladd@grs^(0+1280),c
  2890   010144  500F               	movf	___fladd@bexp^(0+1280),w,c
  2891   010146  C50E  F509         	movff	___fladd@aexp,??___fladd
  2892   01014A  6A0A               	clrf	(??___fladd+1)^(0+1280),c
  2893   01014C  5E09               	subwf	??___fladd^(0+1280),f,c
  2894   01014E  0E00               	movlw	0
  2895   010150  5A0A               	subwfb	(??___fladd+1)^(0+1280),f,c
  2896   010152  BE0A               	btfsc	(??___fladd+1)^(0+1280),7,c
  2897   010154  EFB5  F080         	goto	u811
  2898   010158  500A               	movf	(??___fladd+1)^(0+1280),w,c
  2899   01015A  E109               	bnz	u810
  2900   01015C  0E1A               	movlw	26
  2901   01015E  5C09               	subwf	??___fladd^(0+1280),w,c
  2902   010160  A0D8               	btfss	status,0,c
  2903   010162  EFB5  F080         	goto	u811
  2904   010166  EFB7  F080         	goto	u810
  2905   01016A                     u811:
  2906   01016A  EFEE  F080         	goto	l902
  2907   01016E                     u810:
  2908   01016E  5001               	movf	___fladd@b^(0+1280),w,c
  2909   010170  1002               	iorwf	(___fladd@b+1)^(0+1280),w,c
  2910   010172  1003               	iorwf	(___fladd@b+2)^(0+1280),w,c
  2911   010174  1004               	iorwf	(___fladd@b+3)^(0+1280),w,c
  2912   010176  A4D8               	btfss	status,2,c
  2913   010178  EFC0  F080         	goto	u821
  2914   01017C  EFC3  F080         	goto	u820
  2915   010180                     u821:
  2916   010180  0E01               	movlw	1
  2917   010182  EFC4  F080         	goto	u830
  2918   010186                     u820:
  2919   010186  0E00               	movlw	0
  2920   010188                     u830:
  2921   010188  6E10               	movwf	___fladd@grs^(0+1280),c
  2922   01018A  0E00               	movlw	0
  2923   01018C  6E01               	movwf	___fladd@b^(0+1280),c
  2924   01018E  0E00               	movlw	0
  2925   010190  6E02               	movwf	(___fladd@b+1)^(0+1280),c
  2926   010192  0E00               	movlw	0
  2927   010194  6E03               	movwf	(___fladd@b+2)^(0+1280),c
  2928   010196  0E00               	movlw	0
  2929   010198  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  2930   01019A  C50E  F50F         	movff	___fladd@aexp,___fladd@bexp
  2931   01019E  EFF7  F080         	goto	l901
  2932   0101A2                     l903:
  2933   0101A2  A010               	btfss	___fladd@grs^(0+1280),0,c
  2934   0101A4  EFD6  F080         	goto	u841
  2935   0101A8  EFD8  F080         	goto	u840
  2936   0101AC                     u841:
  2937   0101AC  EFDE  F080         	goto	l1764
  2938   0101B0                     u840:
  2939   0101B0  90D8               	bcf	status,0,c
  2940   0101B2  3010               	rrcf	___fladd@grs^(0+1280),w,c
  2941   0101B4  0901               	iorlw	1
  2942   0101B6  6E10               	movwf	___fladd@grs^(0+1280),c
  2943   0101B8  EFE0  F080         	goto	l1766
  2944   0101BC                     l1764:
  2945   0101BC  90D8               	bcf	status,0,c
  2946   0101BE  3210               	rrcf	___fladd@grs^(0+1280),f,c
  2947   0101C0                     l1766:
  2948   0101C0  A001               	btfss	___fladd@b^(0+1280),0,c
  2949   0101C2  EFE5  F080         	goto	u851
  2950   0101C6  EFE7  F080         	goto	u850
  2951   0101CA                     u851:
  2952   0101CA  EFE8  F080         	goto	l1770
  2953   0101CE                     u850:
  2954   0101CE  8E10               	bsf	___fladd@grs^(0+1280),7,c
  2955   0101D0                     l1770:
  2956   0101D0  3404               	rlcf	(___fladd@b+3)^(0+1280),w,c
  2957   0101D2  3204               	rrcf	(___fladd@b+3)^(0+1280),f,c
  2958   0101D4  3203               	rrcf	(___fladd@b+2)^(0+1280),f,c
  2959   0101D6  3202               	rrcf	(___fladd@b+1)^(0+1280),f,c
  2960   0101D8  3201               	rrcf	___fladd@b^(0+1280),f,c
  2961   0101DA  2A0F               	incf	___fladd@bexp^(0+1280),f,c
  2962   0101DC                     l902:
  2963   0101DC  500E               	movf	___fladd@aexp^(0+1280),w,c
  2964   0101DE  5C0F               	subwf	___fladd@bexp^(0+1280),w,c
  2965   0101E0  A0D8               	btfss	status,0,c
  2966   0101E2  EFF5  F080         	goto	u861
  2967   0101E6  EFF7  F080         	goto	u860
  2968   0101EA                     u861:
  2969   0101EA  EFD1  F080         	goto	l903
  2970   0101EE                     u860:
  2971   0101EE                     l901:
  2972   0101EE  BC0D               	btfsc	___fladd@signs^(0+1280),6,c
  2973   0101F0  EFFC  F080         	goto	u871
  2974   0101F4  EFFE  F080         	goto	u870
  2975   0101F8                     u871:
  2976   0101F8  EF3E  F081         	goto	l1798
  2977   0101FC                     u870:
  2978   0101FC  500F               	movf	___fladd@bexp^(0+1280),w,c
  2979   0101FE  A4D8               	btfss	status,2,c
  2980   010200  EF04  F081         	goto	u881
  2981   010204  EF06  F081         	goto	u880
  2982   010208                     u881:
  2983   010208  EF10  F081         	goto	l1780
  2984   01020C                     u880:
  2985   01020C  0E00               	movlw	0
  2986   01020E  6E01               	movwf	?___fladd^(0+1280),c
  2987   010210  0E00               	movlw	0
  2988   010212  6E02               	movwf	(?___fladd+1)^(0+1280),c
  2989   010214  0E00               	movlw	0
  2990   010216  6E03               	movwf	(?___fladd+2)^(0+1280),c
  2991   010218  0E00               	movlw	0
  2992   01021A  6E04               	movwf	(?___fladd+3)^(0+1280),c
  2993   01021C  EF5F  F082         	goto	l910
  2994   010220                     l1780:
  2995   010220  5005               	movf	___fladd@a^(0+1280),w,c
  2996   010222  2601               	addwf	___fladd@b^(0+1280),f,c
  2997   010224  5006               	movf	(___fladd@a+1)^(0+1280),w,c
  2998   010226  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
  2999   010228  5007               	movf	(___fladd@a+2)^(0+1280),w,c
  3000   01022A  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
  3001   01022C  5008               	movf	(___fladd@a+3)^(0+1280),w,c
  3002   01022E  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
  3003   010230  A004               	btfss	(___fladd@b+3)^(0+1280),0,c
  3004   010232  EF1D  F081         	goto	u891
  3005   010236  EF1F  F081         	goto	u890
  3006   01023A                     u891:
  3007   01023A  EFCB  F081         	goto	l1834
  3008   01023E                     u890:
  3009   01023E  A010               	btfss	___fladd@grs^(0+1280),0,c
  3010   010240  EF24  F081         	goto	u901
  3011   010244  EF26  F081         	goto	u900
  3012   010248                     u901:
  3013   010248  EF2C  F081         	goto	l1788
  3014   01024C                     u900:
  3015   01024C  90D8               	bcf	status,0,c
  3016   01024E  3010               	rrcf	___fladd@grs^(0+1280),w,c
  3017   010250  0901               	iorlw	1
  3018   010252  6E10               	movwf	___fladd@grs^(0+1280),c
  3019   010254  EF2E  F081         	goto	l1790
  3020   010258                     l1788:
  3021   010258  90D8               	bcf	status,0,c
  3022   01025A  3210               	rrcf	___fladd@grs^(0+1280),f,c
  3023   01025C                     l1790:
  3024   01025C  A001               	btfss	___fladd@b^(0+1280),0,c
  3025   01025E  EF33  F081         	goto	u911
  3026   010262  EF35  F081         	goto	u910
  3027   010266                     u911:
  3028   010266  EF36  F081         	goto	l1794
  3029   01026A                     u910:
  3030   01026A  8E10               	bsf	___fladd@grs^(0+1280),7,c
  3031   01026C                     l1794:
  3032   01026C  3404               	rlcf	(___fladd@b+3)^(0+1280),w,c
  3033   01026E  3204               	rrcf	(___fladd@b+3)^(0+1280),f,c
  3034   010270  3203               	rrcf	(___fladd@b+2)^(0+1280),f,c
  3035   010272  3202               	rrcf	(___fladd@b+1)^(0+1280),f,c
  3036   010274  3201               	rrcf	___fladd@b^(0+1280),f,c
  3037   010276  2A0F               	incf	___fladd@bexp^(0+1280),f,c
  3038   010278  EFCB  F081         	goto	l1834
  3039   01027C                     l1798:
  3040   01027C  5005               	movf	___fladd@a^(0+1280),w,c
  3041   01027E  5C01               	subwf	___fladd@b^(0+1280),w,c
  3042   010280  5006               	movf	(___fladd@a+1)^(0+1280),w,c
  3043   010282  5802               	subwfb	(___fladd@b+1)^(0+1280),w,c
  3044   010284  5007               	movf	(___fladd@a+2)^(0+1280),w,c
  3045   010286  5803               	subwfb	(___fladd@b+2)^(0+1280),w,c
  3046   010288  5004               	movf	(___fladd@b+3)^(0+1280),w,c
  3047   01028A  0A80               	xorlw	128
  3048   01028C  6E09               	movwf	??___fladd^(0+1280),c
  3049   01028E  5008               	movf	(___fladd@a+3)^(0+1280),w,c
  3050   010290  0A80               	xorlw	128
  3051   010292  5809               	subwfb	??___fladd^(0+1280),w,c
  3052   010294  B0D8               	btfsc	status,0,c
  3053   010296  EF4F  F081         	goto	u921
  3054   01029A  EF51  F081         	goto	u920
  3055   01029E                     u921:
  3056   01029E  EF7C  F081         	goto	l1808
  3057   0102A2                     u920:
  3058   0102A2  5001               	movf	___fladd@b^(0+1280),w,c
  3059   0102A4  5C05               	subwf	___fladd@a^(0+1280),w,c
  3060   0102A6  6E09               	movwf	??___fladd^(0+1280),c
  3061   0102A8  5002               	movf	(___fladd@b+1)^(0+1280),w,c
  3062   0102AA  5806               	subwfb	(___fladd@a+1)^(0+1280),w,c
  3063   0102AC  6E0A               	movwf	(??___fladd+1)^(0+1280),c
  3064   0102AE  5003               	movf	(___fladd@b+2)^(0+1280),w,c
  3065   0102B0  5807               	subwfb	(___fladd@a+2)^(0+1280),w,c
  3066   0102B2  6E0B               	movwf	(??___fladd+2)^(0+1280),c
  3067   0102B4  5004               	movf	(___fladd@b+3)^(0+1280),w,c
  3068   0102B6  5808               	subwfb	(___fladd@a+3)^(0+1280),w,c
  3069   0102B8  6E0C               	movwf	(??___fladd+3)^(0+1280),c
  3070   0102BA  0EFF               	movlw	255
  3071   0102BC  2409               	addwf	??___fladd^(0+1280),w,c
  3072   0102BE  6E01               	movwf	___fladd@b^(0+1280),c
  3073   0102C0  0EFF               	movlw	255
  3074   0102C2  200A               	addwfc	(??___fladd+1)^(0+1280),w,c
  3075   0102C4  6E02               	movwf	(___fladd@b+1)^(0+1280),c
  3076   0102C6  0EFF               	movlw	255
  3077   0102C8  200B               	addwfc	(??___fladd+2)^(0+1280),w,c
  3078   0102CA  6E03               	movwf	(___fladd@b+2)^(0+1280),c
  3079   0102CC  0EFF               	movlw	255
  3080   0102CE  200C               	addwfc	(??___fladd+3)^(0+1280),w,c
  3081   0102D0  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  3082   0102D2  0E80               	movlw	128
  3083   0102D4  1A0D               	xorwf	___fladd@signs^(0+1280),f,c
  3084   0102D6  6C10               	negf	___fladd@grs^(0+1280),c
  3085   0102D8  5010               	movf	___fladd@grs^(0+1280),w,c
  3086   0102DA  A4D8               	btfss	status,2,c
  3087   0102DC  EF72  F081         	goto	u931
  3088   0102E0  EF74  F081         	goto	u930
  3089   0102E4                     u931:
  3090   0102E4  EF84  F081         	goto	l918
  3091   0102E8                     u930:
  3092   0102E8  0E01               	movlw	1
  3093   0102EA  2601               	addwf	___fladd@b^(0+1280),f,c
  3094   0102EC  0E00               	movlw	0
  3095   0102EE  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
  3096   0102F0  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
  3097   0102F2  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
  3098   0102F4  EF84  F081         	goto	l918
  3099   0102F8                     l1808:
  3100   0102F8  5005               	movf	___fladd@a^(0+1280),w,c
  3101   0102FA  5E01               	subwf	___fladd@b^(0+1280),f,c
  3102   0102FC  5006               	movf	(___fladd@a+1)^(0+1280),w,c
  3103   0102FE  5A02               	subwfb	(___fladd@b+1)^(0+1280),f,c
  3104   010300  5007               	movf	(___fladd@a+2)^(0+1280),w,c
  3105   010302  5A03               	subwfb	(___fladd@b+2)^(0+1280),f,c
  3106   010304  5008               	movf	(___fladd@a+3)^(0+1280),w,c
  3107   010306  5A04               	subwfb	(___fladd@b+3)^(0+1280),f,c
  3108   010308                     l918:
  3109   010308  5001               	movf	___fladd@b^(0+1280),w,c
  3110   01030A  1002               	iorwf	(___fladd@b+1)^(0+1280),w,c
  3111   01030C  1003               	iorwf	(___fladd@b+2)^(0+1280),w,c
  3112   01030E  1004               	iorwf	(___fladd@b+3)^(0+1280),w,c
  3113   010310  A4D8               	btfss	status,2,c
  3114   010312  EF8D  F081         	goto	u941
  3115   010316  EF8F  F081         	goto	u940
  3116   01031A                     u941:
  3117   01031A  EFC4  F081         	goto	l1832
  3118   01031E                     u940:
  3119   01031E  5010               	movf	___fladd@grs^(0+1280),w,c
  3120   010320  A4D8               	btfss	status,2,c
  3121   010322  EF95  F081         	goto	u951
  3122   010326  EF97  F081         	goto	u950
  3123   01032A                     u951:
  3124   01032A  EFC4  F081         	goto	l1832
  3125   01032E                     u950:
  3126   01032E  0E00               	movlw	0
  3127   010330  6E01               	movwf	?___fladd^(0+1280),c
  3128   010332  0E00               	movlw	0
  3129   010334  6E02               	movwf	(?___fladd+1)^(0+1280),c
  3130   010336  0E00               	movlw	0
  3131   010338  6E03               	movwf	(?___fladd+2)^(0+1280),c
  3132   01033A  0E00               	movlw	0
  3133   01033C  6E04               	movwf	(?___fladd+3)^(0+1280),c
  3134   01033E  EF5F  F082         	goto	l910
  3135   010342                     l1816:
  3136   010342  90D8               	bcf	status,0,c
  3137   010344  3601               	rlcf	___fladd@b^(0+1280),f,c
  3138   010346  3602               	rlcf	(___fladd@b+1)^(0+1280),f,c
  3139   010348  3603               	rlcf	(___fladd@b+2)^(0+1280),f,c
  3140   01034A  3604               	rlcf	(___fladd@b+3)^(0+1280),f,c
  3141   01034C  AE10               	btfss	___fladd@grs^(0+1280),7,c
  3142   01034E  EFAB  F081         	goto	u961
  3143   010352  EFAD  F081         	goto	u960
  3144   010356                     u961:
  3145   010356  EFAE  F081         	goto	l1822
  3146   01035A                     u960:
  3147   01035A  8001               	bsf	___fladd@b^(0+1280),0,c
  3148   01035C                     l1822:
  3149   01035C  A010               	btfss	___fladd@grs^(0+1280),0,c
  3150   01035E  EFB3  F081         	goto	u971
  3151   010362  EFB5  F081         	goto	u970
  3152   010366                     u971:
  3153   010366  EFB9  F081         	goto	l1826
  3154   01036A                     u970:
  3155   01036A  80D8               	bsf	status,0,c
  3156   01036C  3610               	rlcf	___fladd@grs^(0+1280),f,c
  3157   01036E  EFBB  F081         	goto	l1828
  3158   010372                     l1826:
  3159   010372  90D8               	bcf	status,0,c
  3160   010374  3610               	rlcf	___fladd@grs^(0+1280),f,c
  3161   010376                     l1828:
  3162   010376  500F               	movf	___fladd@bexp^(0+1280),w,c
  3163   010378  B4D8               	btfsc	status,2,c
  3164   01037A  EFC1  F081         	goto	u981
  3165   01037E  EFC3  F081         	goto	u980
  3166   010382                     u981:
  3167   010382  EFC4  F081         	goto	l1832
  3168   010386                     u980:
  3169   010386  060F               	decf	___fladd@bexp^(0+1280),f,c
  3170   010388                     l1832:
  3171   010388  AE03               	btfss	(___fladd@b+2)^(0+1280),7,c
  3172   01038A  EFC9  F081         	goto	u991
  3173   01038E  EFCB  F081         	goto	u990
  3174   010392                     u991:
  3175   010392  EFA1  F081         	goto	l1816
  3176   010396                     u990:
  3177   010396                     l1834:
  3178   010396  0E00               	movlw	0
  3179   010398  6E0E               	movwf	___fladd@aexp^(0+1280),c
  3180   01039A  AE10               	btfss	___fladd@grs^(0+1280),7,c
  3181   01039C  EFD2  F081         	goto	u1001
  3182   0103A0  EFD4  F081         	goto	u1000
  3183   0103A4                     u1001:
  3184   0103A4  EFEC  F081         	goto	l927
  3185   0103A8                     u1000:
  3186   0103A8  C510  F509         	movff	___fladd@grs,??___fladd
  3187   0103AC  0E7F               	movlw	127
  3188   0103AE  1609               	andwf	??___fladd^(0+1280),f,c
  3189   0103B0  B4D8               	btfsc	status,2,c
  3190   0103B2  EFDD  F081         	goto	u1011
  3191   0103B6  EFDF  F081         	goto	u1010
  3192   0103BA                     u1011:
  3193   0103BA  EFE3  F081         	goto	l928
  3194   0103BE                     u1010:
  3195   0103BE                     l1840:
  3196   0103BE  0E01               	movlw	1
  3197   0103C0  6E0E               	movwf	___fladd@aexp^(0+1280),c
  3198   0103C2  EFEC  F081         	goto	l927
  3199   0103C6                     l928:
  3200   0103C6  A001               	btfss	___fladd@b^(0+1280),0,c
  3201   0103C8  EFE8  F081         	goto	u1021
  3202   0103CC  EFEA  F081         	goto	u1020
  3203   0103D0                     u1021:
  3204   0103D0  EFEC  F081         	goto	l927
  3205   0103D4                     u1020:
  3206   0103D4  EFDF  F081         	goto	l1840
  3207   0103D8                     l927:
  3208   0103D8  500E               	movf	___fladd@aexp^(0+1280),w,c
  3209   0103DA  B4D8               	btfsc	status,2,c
  3210   0103DC  EFF2  F081         	goto	u1031
  3211   0103E0  EFF4  F081         	goto	u1030
  3212   0103E4                     u1031:
  3213   0103E4  EF1F  F082         	goto	l1852
  3214   0103E8                     u1030:
  3215   0103E8  0E01               	movlw	1
  3216   0103EA  2601               	addwf	___fladd@b^(0+1280),f,c
  3217   0103EC  0E00               	movlw	0
  3218   0103EE  2202               	addwfc	(___fladd@b+1)^(0+1280),f,c
  3219   0103F0  2203               	addwfc	(___fladd@b+2)^(0+1280),f,c
  3220   0103F2  2204               	addwfc	(___fladd@b+3)^(0+1280),f,c
  3221   0103F4  A004               	btfss	(___fladd@b+3)^(0+1280),0,c
  3222   0103F6  EFFF  F081         	goto	u1041
  3223   0103FA  EF01  F082         	goto	u1040
  3224   0103FE                     u1041:
  3225   0103FE  EF1F  F082         	goto	l1852
  3226   010402                     u1040:
  3227   010402  C501  F509         	movff	___fladd@b,??___fladd
  3228   010406  C502  F50A         	movff	___fladd@b+1,??___fladd+1
  3229   01040A  C503  F50B         	movff	___fladd@b+2,??___fladd+2
  3230   01040E  C504  F50C         	movff	___fladd@b+3,??___fladd+3
  3231   010412  340C               	rlcf	(??___fladd+3)^(0+1280),w,c
  3232   010414  320C               	rrcf	(??___fladd+3)^(0+1280),f,c
  3233   010416  320B               	rrcf	(??___fladd+2)^(0+1280),f,c
  3234   010418  320A               	rrcf	(??___fladd+1)^(0+1280),f,c
  3235   01041A  3209               	rrcf	??___fladd^(0+1280),f,c
  3236   01041C  C509  F501         	movff	??___fladd,___fladd@b
  3237   010420  C50A  F502         	movff	??___fladd+1,___fladd@b+1
  3238   010424  C50B  F503         	movff	??___fladd+2,___fladd@b+2
  3239   010428  C50C  F504         	movff	??___fladd+3,___fladd@b+3
  3240   01042C  280F               	incf	___fladd@bexp^(0+1280),w,c
  3241   01042E  B4D8               	btfsc	status,2,c
  3242   010430  EF1C  F082         	goto	u1051
  3243   010434  EF1E  F082         	goto	u1050
  3244   010438                     u1051:
  3245   010438  EF1F  F082         	goto	l1852
  3246   01043C                     u1050:
  3247   01043C  2A0F               	incf	___fladd@bexp^(0+1280),f,c
  3248   01043E                     l1852:
  3249   01043E  280F               	incf	___fladd@bexp^(0+1280),w,c
  3250   010440  B4D8               	btfsc	status,2,c
  3251   010442  EF25  F082         	goto	u1061
  3252   010446  EF27  F082         	goto	u1060
  3253   01044A                     u1061:
  3254   01044A  EF2F  F082         	goto	l1856
  3255   01044E                     u1060:
  3256   01044E  500F               	movf	___fladd@bexp^(0+1280),w,c
  3257   010450  A4D8               	btfss	status,2,c
  3258   010452  EF2D  F082         	goto	u1071
  3259   010456  EF2F  F082         	goto	u1070
  3260   01045A                     u1071:
  3261   01045A  EF41  F082         	goto	l1860
  3262   01045E                     u1070:
  3263   01045E                     l1856:
  3264   01045E  0E00               	movlw	0
  3265   010460  6E01               	movwf	___fladd@b^(0+1280),c
  3266   010462  0E00               	movlw	0
  3267   010464  6E02               	movwf	(___fladd@b+1)^(0+1280),c
  3268   010466  0E00               	movlw	0
  3269   010468  6E03               	movwf	(___fladd@b+2)^(0+1280),c
  3270   01046A  0E00               	movlw	0
  3271   01046C  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  3272   01046E  500F               	movf	___fladd@bexp^(0+1280),w,c
  3273   010470  A4D8               	btfss	status,2,c
  3274   010472  EF3D  F082         	goto	u1081
  3275   010476  EF3F  F082         	goto	u1080
  3276   01047A                     u1081:
  3277   01047A  EF41  F082         	goto	l1860
  3278   01047E                     u1080:
  3279   01047E  0E00               	movlw	0
  3280   010480  6E0D               	movwf	___fladd@signs^(0+1280),c
  3281   010482                     l1860:
  3282   010482  A00F               	btfss	___fladd@bexp^(0+1280),0,c
  3283   010484  EF46  F082         	goto	u1091
  3284   010488  EF48  F082         	goto	u1090
  3285   01048C                     u1091:
  3286   01048C  EF4B  F082         	goto	l1864
  3287   010490                     u1090:
  3288   010490  8E03               	bsf	(___fladd@b+2)^(0+1280),7,c
  3289   010492  EF4C  F082         	goto	l1866
  3290   010496                     l1864:
  3291   010496  9E03               	bcf	(___fladd@b+2)^(0+1280),7,c
  3292   010498                     l1866:
  3293   010498  90D8               	bcf	status,0,c
  3294   01049A  300F               	rrcf	___fladd@bexp^(0+1280),w,c
  3295   01049C  6E04               	movwf	(___fladd@b+3)^(0+1280),c
  3296   01049E  AE0D               	btfss	___fladd@signs^(0+1280),7,c
  3297   0104A0  EF54  F082         	goto	u1101
  3298   0104A4  EF56  F082         	goto	u1100
  3299   0104A8                     u1101:
  3300   0104A8  EF57  F082         	goto	l1872
  3301   0104AC                     u1100:
  3302   0104AC  8E04               	bsf	(___fladd@b+3)^(0+1280),7,c
  3303   0104AE                     l1872:
  3304   0104AE  C501  F501         	movff	___fladd@b,?___fladd
  3305   0104B2  C502  F502         	movff	___fladd@b+1,?___fladd+1
  3306   0104B6  C503  F503         	movff	___fladd@b+2,?___fladd+2
  3307   0104BA  C504  F504         	movff	___fladd@b+3,?___fladd+3
  3308   0104BE                     l910:
  3309   0104BE  0012               	return		;funcret
  3310   0104C0                     __end_of___fladd:
  3311                           	callstack 0
  3312                           
  3313 ;; *************** function ___fleq *****************
  3314 ;; Defined at:
  3315 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\fleq.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  ff1             4   24[COMRAM] unsigned char 
  3318 ;;  ff2             4   28[COMRAM] unsigned char 
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;		None
  3321 ;; Return value:  Size  Location     Type
  3322 ;;		None               void
  3323 ;; Registers used:
  3324 ;;		wreg, status,2, status,0
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3330 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3332 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3333 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3334 ;;Total ram usage:       12 bytes
  3335 ;; Hardware stack levels used: 1
  3336 ;; This function calls:
  3337 ;;		Nothing
  3338 ;; This function is called by:
  3339 ;;		_delay_ms
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text6
  3344   010D3E                     __ptext6:
  3345                           	callstack 0
  3346   010D3E                     ___fleq:
  3347                           	callstack 123
  3348   010D3E  0E00               	movlw	0
  3349   010D40  1419               	andwf	___fleq@ff1^(0+1280),w,c
  3350   010D42  6E21               	movwf	??___fleq^(0+1280),c
  3351   010D44  0E00               	movlw	0
  3352   010D46  141A               	andwf	(___fleq@ff1+1)^(0+1280),w,c
  3353   010D48  6E22               	movwf	(??___fleq+1)^(0+1280),c
  3354   010D4A  0E80               	movlw	128
  3355   010D4C  141B               	andwf	(___fleq@ff1+2)^(0+1280),w,c
  3356   010D4E  6E23               	movwf	(??___fleq+2)^(0+1280),c
  3357   010D50  0E7F               	movlw	127
  3358   010D52  141C               	andwf	(___fleq@ff1+3)^(0+1280),w,c
  3359   010D54  6E24               	movwf	(??___fleq+3)^(0+1280),c
  3360   010D56  5021               	movf	??___fleq^(0+1280),w,c
  3361   010D58  1022               	iorwf	(??___fleq+1)^(0+1280),w,c
  3362   010D5A  1023               	iorwf	(??___fleq+2)^(0+1280),w,c
  3363   010D5C  1024               	iorwf	(??___fleq+3)^(0+1280),w,c
  3364   010D5E  A4D8               	btfss	status,2,c
  3365   010D60  EFB4  F086         	goto	u1131
  3366   010D64  EFB6  F086         	goto	u1130
  3367   010D68                     u1131:
  3368   010D68  EFBE  F086         	goto	l1910
  3369   010D6C                     u1130:
  3370   010D6C  0E00               	movlw	0
  3371   010D6E  6E19               	movwf	___fleq@ff1^(0+1280),c
  3372   010D70  0E00               	movlw	0
  3373   010D72  6E1A               	movwf	(___fleq@ff1+1)^(0+1280),c
  3374   010D74  0E00               	movlw	0
  3375   010D76  6E1B               	movwf	(___fleq@ff1+2)^(0+1280),c
  3376   010D78  0E00               	movlw	0
  3377   010D7A  6E1C               	movwf	(___fleq@ff1+3)^(0+1280),c
  3378   010D7C                     l1910:
  3379   010D7C  0E00               	movlw	0
  3380   010D7E  141D               	andwf	___fleq@ff2^(0+1280),w,c
  3381   010D80  6E21               	movwf	??___fleq^(0+1280),c
  3382   010D82  0E00               	movlw	0
  3383   010D84  141E               	andwf	(___fleq@ff2+1)^(0+1280),w,c
  3384   010D86  6E22               	movwf	(??___fleq+1)^(0+1280),c
  3385   010D88  0E80               	movlw	128
  3386   010D8A  141F               	andwf	(___fleq@ff2+2)^(0+1280),w,c
  3387   010D8C  6E23               	movwf	(??___fleq+2)^(0+1280),c
  3388   010D8E  0E7F               	movlw	127
  3389   010D90  1420               	andwf	(___fleq@ff2+3)^(0+1280),w,c
  3390   010D92  6E24               	movwf	(??___fleq+3)^(0+1280),c
  3391   010D94  5021               	movf	??___fleq^(0+1280),w,c
  3392   010D96  1022               	iorwf	(??___fleq+1)^(0+1280),w,c
  3393   010D98  1023               	iorwf	(??___fleq+2)^(0+1280),w,c
  3394   010D9A  1024               	iorwf	(??___fleq+3)^(0+1280),w,c
  3395   010D9C  A4D8               	btfss	status,2,c
  3396   010D9E  EFD3  F086         	goto	u1141
  3397   010DA2  EFD5  F086         	goto	u1140
  3398   010DA6                     u1141:
  3399   010DA6  EFDD  F086         	goto	l1914
  3400   010DAA                     u1140:
  3401   010DAA  0E00               	movlw	0
  3402   010DAC  6E1D               	movwf	___fleq@ff2^(0+1280),c
  3403   010DAE  0E00               	movlw	0
  3404   010DB0  6E1E               	movwf	(___fleq@ff2+1)^(0+1280),c
  3405   010DB2  0E00               	movlw	0
  3406   010DB4  6E1F               	movwf	(___fleq@ff2+2)^(0+1280),c
  3407   010DB6  0E00               	movlw	0
  3408   010DB8  6E20               	movwf	(___fleq@ff2+3)^(0+1280),c
  3409   010DBA                     l1914:
  3410   010DBA  501D               	movf	___fleq@ff2^(0+1280),w,c
  3411   010DBC  1819               	xorwf	___fleq@ff1^(0+1280),w,c
  3412   010DBE  E10F               	bnz	u1150
  3413   010DC0  501E               	movf	(___fleq@ff2+1)^(0+1280),w,c
  3414   010DC2  181A               	xorwf	(___fleq@ff1+1)^(0+1280),w,c
  3415   010DC4  E10C               	bnz	u1150
  3416   010DC6  501F               	movf	(___fleq@ff2+2)^(0+1280),w,c
  3417   010DC8  181B               	xorwf	(___fleq@ff1+2)^(0+1280),w,c
  3418   010DCA  E109               	bnz	u1150
  3419   010DCC  5020               	movf	(___fleq@ff2+3)^(0+1280),w,c
  3420   010DCE  181C               	xorwf	(___fleq@ff1+3)^(0+1280),w,c
  3421   010DD0  B4D8               	btfsc	status,2,c
  3422   010DD2  EFED  F086         	goto	u1151
  3423   010DD6  EFEF  F086         	goto	u1150
  3424   010DDA                     u1151:
  3425   010DDA  EFF2  F086         	goto	l1918
  3426   010DDE                     u1150:
  3427   010DDE  90D8               	bcf	status,0,c
  3428   010DE0  EFF3  F086         	goto	l632
  3429   010DE4                     l1918:
  3430   010DE4  80D8               	bsf	status,0,c
  3431   010DE6                     l632:
  3432   010DE6  0012               	return		;funcret
  3433   010DE8                     __end_of___fleq:
  3434                           	callstack 0
  3435                           
  3436 ;; *************** function _draw_string *****************
  3437 ;; Defined at:
  3438 ;;		line 396 in file "ILI9225.c"
  3439 ;; Parameters:    Size  Location     Type
  3440 ;;  x               1    wreg     unsigned char 
  3441 ;;  y               1   40[COMRAM] unsigned char 
  3442 ;;  colour          2   41[COMRAM] unsigned int 
  3443 ;;  size            1   43[COMRAM] unsigned char 
  3444 ;;  str             2   44[COMRAM] PTR unsigned char 
  3445 ;;		 -> STR_3(13), STR_2(13), STR_1(13), 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  x               1   52[COMRAM] unsigned char 
  3448 ;;  char_pos        2   50[COMRAM] int 
  3449 ;;  counter         2   53[COMRAM] int 
  3450 ;;  char_width      2   48[COMRAM] int 
  3451 ;; Return value:  Size  Location     Type
  3452 ;;                  1    wreg      void 
  3453 ;; Registers used:
  3454 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3455 ;; Tracked objects:
  3456 ;;		On entry : 0/0
  3457 ;;		On exit  : 0/0
  3458 ;;		Unchanged: 0/0
  3459 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3460 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3461 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3462 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3463 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3464 ;;Total ram usage:       15 bytes
  3465 ;; Hardware stack levels used: 1
  3466 ;; Hardware stack levels required when called: 6
  3467 ;; This function calls:
  3468 ;;		___wmul
  3469 ;;		_draw_char
  3470 ;; This function is called by:
  3471 ;;		_main
  3472 ;; This function uses a non-reentrant model
  3473 ;;
  3474                           
  3475                           	psect	text7
  3476   010E8A                     __ptext7:
  3477                           	callstack 0
  3478   010E8A                     _draw_string:
  3479                           	callstack 120
  3480                           
  3481                           ;incstack = 0
  3482                           ;draw_string@x stored from wreg
  3483   010E8A  6E35               	movwf	draw_string@x^(0+1280),c
  3484   010E8C                     
  3485                           ;ILI9225.c: 399:     int char_width = size * 9;
  3486   010E8C  502C               	movf	draw_string@size^(0+1280),w,c
  3487   010E8E  0D09               	mullw	9
  3488   010E90  C4F3 F531          	movff	prodl,draw_string@char_width
  3489   010E94  C4F4 F532          	movff	prodh,draw_string@char_width+1
  3490   010E98                     
  3491                           ;ILI9225.c: 401:     int counter = 0;
  3492   010E98  0E00               	movlw	0
  3493   010E9A  6E37               	movwf	(draw_string@counter+1)^(0+1280),c
  3494   010E9C  0E00               	movlw	0
  3495   010E9E  6E36               	movwf	draw_string@counter^(0+1280),c
  3496                           
  3497                           ;ILI9225.c: 402:     while(str[counter] != '\0') {
  3498   010EA0  EF7C  F087         	goto	l2042
  3499   010EA4                     l2036:
  3500                           
  3501                           ;ILI9225.c: 404:         int char_pos = x + (counter * char_width);
  3502   010EA4  C536  F501         	movff	draw_string@counter,___wmul@multiplier
  3503   010EA8  C537  F502         	movff	draw_string@counter+1,___wmul@multiplier+1
  3504   010EAC  C531  F503         	movff	draw_string@char_width,___wmul@multiplicand
  3505   010EB0  C532  F504         	movff	draw_string@char_width+1,___wmul@multiplicand+1
  3506   010EB4  EC05  F088         	call	___wmul	;wreg free
  3507   010EB8  5035               	movf	draw_string@x^(0+1280),w,c
  3508   010EBA  2401               	addwf	?___wmul^(0+1280),w,c
  3509   010EBC  6E33               	movwf	draw_string@char_pos^(0+1280),c
  3510   010EBE  0E00               	movlw	0
  3511   010EC0  2002               	addwfc	(?___wmul+1)^(0+1280),w,c
  3512   010EC2  6E34               	movwf	(draw_string@char_pos+1)^(0+1280),c
  3513   010EC4                     
  3514                           ;ILI9225.c: 406:         draw_char(char_pos, y, str[counter], colour, size);
  3515   010EC4  C529  F51A         	movff	draw_string@y,draw_char@y
  3516   010EC8  5036               	movf	draw_string@counter^(0+1280),w,c
  3517   010ECA  242D               	addwf	draw_string@str^(0+1280),w,c
  3518   010ECC  6E2F               	movwf	??_draw_string^(0+1280),c
  3519   010ECE  5037               	movf	(draw_string@counter+1)^(0+1280),w,c
  3520   010ED0  202E               	addwfc	(draw_string@str+1)^(0+1280),w,c
  3521   010ED2  6E30               	movwf	(??_draw_string+1)^(0+1280),c
  3522   010ED4  C52F  F4F6         	movff	??_draw_string,tblptrl
  3523   010ED8  C530  F4F7         	movff	??_draw_string+1,tblptrh
  3524   010EDC                     	if	0	;tblptru may be non-zero
  3525   010EDC                     	endif
  3526   010EDC                     	if	0	;tblptru may be non-zero
  3527   010EDC                     	endif
  3528   010EDC  0008               	tblrd		*
  3529   010EDE  C4F5 F51B          	movff	tablat,draw_char@c
  3530   010EE2  C52A  F51C         	movff	draw_string@colour,draw_char@colour
  3531   010EE6  C52B  F51D         	movff	draw_string@colour+1,draw_char@colour+1
  3532   010EEA  C52C  F51E         	movff	draw_string@size,draw_char@size
  3533   010EEE  5033               	movf	draw_string@char_pos^(0+1280),w,c
  3534   010EF0  EC41  F084         	call	_draw_char
  3535   010EF4                     
  3536                           ;ILI9225.c: 408:         counter++;
  3537   010EF4  4A36               	infsnz	draw_string@counter^(0+1280),f,c
  3538   010EF6  2A37               	incf	(draw_string@counter+1)^(0+1280),f,c
  3539   010EF8                     l2042:
  3540                           
  3541                           ;ILI9225.c: 402:     while(str[counter] != '\0') {
  3542   010EF8  5036               	movf	draw_string@counter^(0+1280),w,c
  3543   010EFA  242D               	addwf	draw_string@str^(0+1280),w,c
  3544   010EFC  6E2F               	movwf	??_draw_string^(0+1280),c
  3545   010EFE  5037               	movf	(draw_string@counter+1)^(0+1280),w,c
  3546   010F00  202E               	addwfc	(draw_string@str+1)^(0+1280),w,c
  3547   010F02  6E30               	movwf	(??_draw_string+1)^(0+1280),c
  3548   010F04  C52F  F4F6         	movff	??_draw_string,tblptrl
  3549   010F08  C530  F4F7         	movff	??_draw_string+1,tblptrh
  3550   010F0C                     	if	0	;tblptru may be non-zero
  3551   010F0C                     	endif
  3552   010F0C                     	if	0	;tblptru may be non-zero
  3553   010F0C                     	endif
  3554   010F0C  0008               	tblrd		*
  3555   010F0E  50F5               	movf	tablat,w,c
  3556   010F10  0900               	iorlw	0
  3557   010F12  A4D8               	btfss	status,2,c
  3558   010F14  EF8E  F087         	goto	u1251
  3559   010F18  EF90  F087         	goto	u1250
  3560   010F1C                     u1251:
  3561   010F1C  EF52  F087         	goto	l2036
  3562   010F20                     u1250:
  3563   010F20  0012               	return		;funcret
  3564   010F22                     __end_of_draw_string:
  3565                           	callstack 0
  3566                           
  3567 ;; *************** function _draw_char *****************
  3568 ;; Defined at:
  3569 ;;		line 305 in file "ILI9225.c"
  3570 ;; Parameters:    Size  Location     Type
  3571 ;;  x               1    wreg     unsigned char 
  3572 ;;  y               1   25[COMRAM] unsigned char 
  3573 ;;  c               1   26[COMRAM] unsigned char 
  3574 ;;  colour          2   27[COMRAM] unsigned int 
  3575 ;;  size            1   29[COMRAM] unsigned char 
  3576 ;; Auto vars:     Size  Location     Type
  3577 ;;  x               1   35[COMRAM] unsigned char 
  3578 ;;  j               2   38[COMRAM] int 
  3579 ;;  i               2   36[COMRAM] int 
  3580 ;;  font_index      2   32[COMRAM] unsigned int 
  3581 ;;  line            1   34[COMRAM] unsigned char 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3591 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3592 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3593 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3594 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3595 ;;Total ram usage:       15 bytes
  3596 ;; Hardware stack levels used: 1
  3597 ;; Hardware stack levels required when called: 5
  3598 ;; This function calls:
  3599 ;;		___wmul
  3600 ;;		_draw_pixel
  3601 ;;		_fill_rectangle
  3602 ;; This function is called by:
  3603 ;;		_draw_string
  3604 ;; This function uses a non-reentrant model
  3605 ;;
  3606                           
  3607                           	psect	text8
  3608   010882                     __ptext8:
  3609                           	callstack 0
  3610   010882                     _draw_char:
  3611                           	callstack 120
  3612                           
  3613                           ;incstack = 0
  3614                           ;draw_char@x stored from wreg
  3615   010882  6E24               	movwf	draw_char@x^(0+1280),c
  3616   010884                     
  3617                           ;ILI9225.c: 306:     int i, j;;ILI9225.c: 307:     char line;;ILI9225.c: 308:     unsign
      +                          ed int font_index = (c - 32);
  3618   010884  0EE0               	movlw	224
  3619   010886  241B               	addwf	draw_char@c^(0+1280),w,c
  3620   010888  6E21               	movwf	draw_char@font_index^(0+1280),c
  3621   01088A  6A22               	clrf	(draw_char@font_index+1)^(0+1280),c
  3622   01088C  0EFF               	movlw	255
  3623   01088E  2222               	addwfc	(draw_char@font_index+1)^(0+1280),f,c
  3624   010890                     
  3625                           ;ILI9225.c: 311:     for(i=0; i<13; i++ ) {
  3626   010890  0E00               	movlw	0
  3627   010892  6E26               	movwf	(draw_char@i+1)^(0+1280),c
  3628   010894  0E00               	movlw	0
  3629   010896  6E25               	movwf	draw_char@i^(0+1280),c
  3630   010898                     l2002:
  3631                           
  3632                           ;ILI9225.c: 313:         line = FontLarge[font_index][12 - i];
  3633   010898  C521  F501         	movff	draw_char@font_index,___wmul@multiplier
  3634   01089C  C522  F502         	movff	draw_char@font_index+1,___wmul@multiplier+1
  3635   0108A0  0E00               	movlw	0
  3636   0108A2  6E04               	movwf	(___wmul@multiplicand+1)^(0+1280),c
  3637   0108A4  0E0D               	movlw	13
  3638   0108A6  6E03               	movwf	___wmul@multiplicand^(0+1280),c
  3639   0108A8  EC05  F088         	call	___wmul	;wreg free
  3640   0108AC  0E1E               	movlw	low _FontLarge
  3641   0108AE  2401               	addwf	?___wmul^(0+1280),w,c
  3642   0108B0  6E1F               	movwf	??_draw_char^(0+1280),c
  3643   0108B2  0EFB               	movlw	high _FontLarge
  3644   0108B4  2002               	addwfc	(?___wmul+1)^(0+1280),w,c
  3645   0108B6  6E20               	movwf	(??_draw_char+1)^(0+1280),c
  3646   0108B8  5025               	movf	draw_char@i^(0+1280),w,c
  3647   0108BA  5E1F               	subwf	??_draw_char^(0+1280),f,c
  3648   0108BC  5026               	movf	(draw_char@i+1)^(0+1280),w,c
  3649   0108BE  5A20               	subwfb	(??_draw_char+1)^(0+1280),f,c
  3650   0108C0  0E0C               	movlw	12
  3651   0108C2  261F               	addwf	??_draw_char^(0+1280),f,c
  3652   0108C4  0E00               	movlw	0
  3653   0108C6  2220               	addwfc	(??_draw_char+1)^(0+1280),f,c
  3654   0108C8  C51F  F4F6         	movff	??_draw_char,tblptrl
  3655   0108CC  C520  F4F7         	movff	??_draw_char+1,tblptrh
  3656   0108D0                     	if	0	;tblptru may be non-zero
  3657   0108D0                     	endif
  3658   0108D0                     	if	0	;tblptru may be non-zero
  3659   0108D0                     	endif
  3660   0108D0  0008               	tblrd		*
  3661   0108D2  C4F5 F523          	movff	tablat,draw_char@line
  3662   0108D6                     
  3663                           ;ILI9225.c: 316:         for(j=0; j<8; j++) {
  3664   0108D6  0E00               	movlw	0
  3665   0108D8  6E28               	movwf	(draw_char@j+1)^(0+1280),c
  3666   0108DA  0E00               	movlw	0
  3667   0108DC  6E27               	movwf	draw_char@j^(0+1280),c
  3668   0108DE                     l2010:
  3669                           
  3670                           ;ILI9225.c: 317:             if(line & (0x01 << j)) {
  3671   0108DE  C527  F51F         	movff	draw_char@j,??_draw_char
  3672   0108E2  0E01               	movlw	1
  3673   0108E4  6E20               	movwf	(??_draw_char+1)^(0+1280),c
  3674   0108E6  2A1F               	incf	??_draw_char^(0+1280),f,c
  3675   0108E8  EF78  F084         	goto	u1204
  3676   0108EC                     u1205:
  3677   0108EC  90D8               	bcf	status,0,c
  3678   0108EE  3620               	rlcf	(??_draw_char+1)^(0+1280),f,c
  3679   0108F0                     u1204:
  3680   0108F0  2E1F               	decfsz	??_draw_char^(0+1280),f,c
  3681   0108F2  EF76  F084         	goto	u1205
  3682   0108F6  5020               	movf	(??_draw_char+1)^(0+1280),w,c
  3683   0108F8  1423               	andwf	draw_char@line^(0+1280),w,c
  3684   0108FA  0900               	iorlw	0
  3685   0108FC  B4D8               	btfsc	status,2,c
  3686   0108FE  EF83  F084         	goto	u1211
  3687   010902  EF85  F084         	goto	u1210
  3688   010906                     u1211:
  3689   010906  EFB8  F084         	goto	l2018
  3690   01090A                     u1210:
  3691   01090A                     
  3692                           ;ILI9225.c: 318:                 if(size == 1) {
  3693   01090A  041E               	decf	draw_char@size^(0+1280),w,c
  3694   01090C  A4D8               	btfss	status,2,c
  3695   01090E  EF8B  F084         	goto	u1221
  3696   010912  EF8D  F084         	goto	u1220
  3697   010916                     u1221:
  3698   010916  EF9B  F084         	goto	l2016
  3699   01091A                     u1220:
  3700   01091A                     
  3701                           ;ILI9225.c: 320:                     draw_pixel(x+(8-j), y+i, colour);
  3702   01091A  501A               	movf	draw_char@y^(0+1280),w,c
  3703   01091C  2425               	addwf	draw_char@i^(0+1280),w,c
  3704   01091E  6E0B               	movwf	draw_pixel@y^(0+1280),c
  3705   010920  C51C  F50C         	movff	draw_char@colour,draw_pixel@colour
  3706   010924  C51D  F50D         	movff	draw_char@colour+1,draw_pixel@colour+1
  3707   010928  5027               	movf	draw_char@j^(0+1280),w,c
  3708   01092A  5C24               	subwf	draw_char@x^(0+1280),w,c
  3709   01092C  0F08               	addlw	8
  3710   01092E  ECB4  F087         	call	_draw_pixel
  3711                           
  3712                           ;ILI9225.c: 321:                 }
  3713   010932  EFB8  F084         	goto	l2018
  3714   010936                     l2016:
  3715                           
  3716                           ;ILI9225.c: 324:                     fill_rectangle(x+((8-j)*size), y+((i)*size), x+((8-
      +                          j)*size)+size, y+((i)*size)+size, colour);
  3717   010936  501E               	movf	draw_char@size^(0+1280),w,c
  3718   010938  0225               	mulwf	draw_char@i^(0+1280),c
  3719   01093A  50F3               	movf	243,w,c
  3720   01093C  241A               	addwf	draw_char@y^(0+1280),w,c
  3721   01093E  6E0B               	movwf	fill_rectangle@y1^(0+1280),c
  3722   010940  5027               	movf	draw_char@j^(0+1280),w,c
  3723   010942  0808               	sublw	8
  3724   010944  021E               	mulwf	draw_char@size^(0+1280),c
  3725   010946  50F3               	movf	243,w,c
  3726   010948  2424               	addwf	draw_char@x^(0+1280),w,c
  3727   01094A  241E               	addwf	draw_char@size^(0+1280),w,c
  3728   01094C  6E0C               	movwf	fill_rectangle@x2^(0+1280),c
  3729   01094E  501E               	movf	draw_char@size^(0+1280),w,c
  3730   010950  0225               	mulwf	draw_char@i^(0+1280),c
  3731   010952  50F3               	movf	243,w,c
  3732   010954  241A               	addwf	draw_char@y^(0+1280),w,c
  3733   010956  241E               	addwf	draw_char@size^(0+1280),w,c
  3734   010958  6E0D               	movwf	fill_rectangle@y2^(0+1280),c
  3735   01095A  C51C  F50E         	movff	draw_char@colour,fill_rectangle@colour
  3736   01095E  C51D  F50F         	movff	draw_char@colour+1,fill_rectangle@colour+1
  3737   010962  5027               	movf	draw_char@j^(0+1280),w,c
  3738   010964  0808               	sublw	8
  3739   010966  021E               	mulwf	draw_char@size^(0+1280),c
  3740   010968  50F3               	movf	243,w,c
  3741   01096A  2424               	addwf	draw_char@x^(0+1280),w,c
  3742   01096C  EC61  F085         	call	_fill_rectangle
  3743   010970                     l2018:
  3744                           
  3745                           ;ILI9225.c: 327:         }
  3746   010970  4A27               	infsnz	draw_char@j^(0+1280),f,c
  3747   010972  2A28               	incf	(draw_char@j+1)^(0+1280),f,c
  3748   010974  BE28               	btfsc	(draw_char@j+1)^(0+1280),7,c
  3749   010976  EFC6  F084         	goto	u1231
  3750   01097A  5028               	movf	(draw_char@j+1)^(0+1280),w,c
  3751   01097C  E109               	bnz	u1230
  3752   01097E  0E08               	movlw	8
  3753   010980  5C27               	subwf	draw_char@j^(0+1280),w,c
  3754   010982  A0D8               	btfss	status,0,c
  3755   010984  EFC6  F084         	goto	u1231
  3756   010988  EFC8  F084         	goto	u1230
  3757   01098C                     u1231:
  3758   01098C  EF6F  F084         	goto	l2010
  3759   010990                     u1230:
  3760   010990                     
  3761                           ;ILI9225.c: 328:     }
  3762   010990  4A25               	infsnz	draw_char@i^(0+1280),f,c
  3763   010992  2A26               	incf	(draw_char@i+1)^(0+1280),f,c
  3764   010994  BE26               	btfsc	(draw_char@i+1)^(0+1280),7,c
  3765   010996  EFD6  F084         	goto	u1241
  3766   01099A  5026               	movf	(draw_char@i+1)^(0+1280),w,c
  3767   01099C  E109               	bnz	u1240
  3768   01099E  0E0D               	movlw	13
  3769   0109A0  5C25               	subwf	draw_char@i^(0+1280),w,c
  3770   0109A2  A0D8               	btfss	status,0,c
  3771   0109A4  EFD6  F084         	goto	u1241
  3772   0109A8  EFD8  F084         	goto	u1240
  3773   0109AC                     u1241:
  3774   0109AC  EF4C  F084         	goto	l2002
  3775   0109B0                     u1240:
  3776   0109B0  0012               	return		;funcret
  3777   0109B2                     __end_of_draw_char:
  3778                           	callstack 0
  3779                           
  3780 ;; *************** function _fill_rectangle *****************
  3781 ;; Defined at:
  3782 ;;		line 236 in file "ILI9225.c"
  3783 ;; Parameters:    Size  Location     Type
  3784 ;;  x1              1    wreg     unsigned char 
  3785 ;;  y1              1   10[COMRAM] unsigned char 
  3786 ;;  x2              1   11[COMRAM] unsigned char 
  3787 ;;  y2              1   12[COMRAM] unsigned char 
  3788 ;;  colour          2   13[COMRAM] unsigned int 
  3789 ;; Auto vars:     Size  Location     Type
  3790 ;;  x1              1   24[COMRAM] unsigned char 
  3791 ;;  x               2   20[COMRAM] int 
  3792 ;;  y               2   18[COMRAM] int 
  3793 ;;  colour_low      1   23[COMRAM] unsigned char 
  3794 ;;  colour_high     1   22[COMRAM] unsigned char 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3804 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3805 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3806 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3807 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3808 ;;Total ram usage:       15 bytes
  3809 ;; Hardware stack levels used: 1
  3810 ;; Hardware stack levels required when called: 4
  3811 ;; This function calls:
  3812 ;;		_lcd_write_data
  3813 ;;		_set_draw_window
  3814 ;;		_swap_char
  3815 ;; This function is called by:
  3816 ;;		_main
  3817 ;;		_draw_char
  3818 ;; This function uses a non-reentrant model
  3819 ;;
  3820                           
  3821                           	psect	text9
  3822   010AC2                     __ptext9:
  3823                           	callstack 0
  3824   010AC2                     _fill_rectangle:
  3825                           	callstack 122
  3826                           
  3827                           ;incstack = 0
  3828                           ;fill_rectangle@x1 stored from wreg
  3829   010AC2  6E19               	movwf	fill_rectangle@x1^(0+1280),c
  3830   010AC4                     
  3831                           ;ILI9225.c: 239:         swap_char(&x1, &y1);
  3832   010AC4  0E19               	movlw	low fill_rectangle@x1
  3833   010AC6  6E01               	movwf	swap_char@num1^(0+1280),c
  3834   010AC8  0E05               	movlw	high fill_rectangle@x1
  3835   010ACA  6E02               	movwf	(swap_char@num1+1)^(0+1280),c
  3836   010ACC  0E0B               	movlw	low fill_rectangle@y1
  3837   010ACE  6E03               	movwf	swap_char@num2^(0+1280),c
  3838   010AD0  0E05               	movlw	high fill_rectangle@y1
  3839   010AD2  6E04               	movwf	(swap_char@num2+1)^(0+1280),c
  3840   010AD4  ECEE  F087         	call	_swap_char	;wreg free
  3841                           
  3842                           ;ILI9225.c: 240:         swap_char(&x2, &y2);
  3843   010AD8  0E0C               	movlw	low fill_rectangle@x2
  3844   010ADA  6E01               	movwf	swap_char@num1^(0+1280),c
  3845   010ADC  0E05               	movlw	high fill_rectangle@x2
  3846   010ADE  6E02               	movwf	(swap_char@num1+1)^(0+1280),c
  3847   010AE0  0E0D               	movlw	low fill_rectangle@y2
  3848   010AE2  6E03               	movwf	swap_char@num2^(0+1280),c
  3849   010AE4  0E05               	movlw	high fill_rectangle@y2
  3850   010AE6  6E04               	movwf	(swap_char@num2+1)^(0+1280),c
  3851   010AE8  ECEE  F087         	call	_swap_char	;wreg free
  3852   010AEC                     
  3853                           ;ILI9225.c: 241:         y1 = 220 - y1;
  3854   010AEC  500B               	movf	fill_rectangle@y1^(0+1280),w,c
  3855   010AEE  08DC               	sublw	220
  3856   010AF0  6E0B               	movwf	fill_rectangle@y1^(0+1280),c
  3857   010AF2                     
  3858                           ;ILI9225.c: 242:         y2 = 220 - y2;
  3859   010AF2  500D               	movf	fill_rectangle@y2^(0+1280),w,c
  3860   010AF4  08DC               	sublw	220
  3861   010AF6  6E0D               	movwf	fill_rectangle@y2^(0+1280),c
  3862                           
  3863                           ;ILI9225.c: 243:         swap_char(&y2, &y1);
  3864   010AF8  0E0D               	movlw	low fill_rectangle@y2
  3865   010AFA  6E01               	movwf	swap_char@num1^(0+1280),c
  3866   010AFC  0E05               	movlw	high fill_rectangle@y2
  3867   010AFE  6E02               	movwf	(swap_char@num1+1)^(0+1280),c
  3868   010B00  0E0B               	movlw	low fill_rectangle@y1
  3869   010B02  6E03               	movwf	swap_char@num2^(0+1280),c
  3870   010B04  0E05               	movlw	high fill_rectangle@y1
  3871   010B06  6E04               	movwf	(swap_char@num2+1)^(0+1280),c
  3872   010B08  ECEE  F087         	call	_swap_char	;wreg free
  3873   010B0C                     
  3874                           ;ILI9225.c: 247:     unsigned char colour_high = colour >> 8;
  3875   010B0C  500F               	movf	(fill_rectangle@colour+1)^(0+1280),w,c
  3876   010B0E  6E17               	movwf	fill_rectangle@colour_high^(0+1280),c
  3877   010B10                     
  3878                           ;ILI9225.c: 248:     unsigned char colour_low = colour & 0xFF;
  3879   010B10  C50E  F518         	movff	fill_rectangle@colour,fill_rectangle@colour_low
  3880   010B14                     
  3881                           ;ILI9225.c: 251:     set_draw_window(x1, y1, x2, y2);
  3882   010B14  C50B  F507         	movff	fill_rectangle@y1,set_draw_window@y1
  3883   010B18  C50C  F508         	movff	fill_rectangle@x2,set_draw_window@x2
  3884   010B1C  C50D  F509         	movff	fill_rectangle@y2,set_draw_window@y2
  3885   010B20  5019               	movf	fill_rectangle@x1^(0+1280),w,c
  3886   010B22  ECE0  F085         	call	_set_draw_window
  3887   010B26                     
  3888                           ;ILI9225.c: 257:     LATD4 = 0;
  3889   010B26  98C1               	bcf	1217,4,c	;volatile
  3890                           
  3891                           ;ILI9225.c: 259:     for(int y = 0; y < y2-y1+1 ; y++) {
  3892   010B28  0E00               	movlw	0
  3893   010B2A  6E14               	movwf	(fill_rectangle@y+1)^(0+1280),c
  3894   010B2C  0E00               	movlw	0
  3895   010B2E  6E13               	movwf	fill_rectangle@y^(0+1280),c
  3896   010B30  EFC4  F085         	goto	l1946
  3897   010B34                     l1936:
  3898                           
  3899                           ;ILI9225.c: 260:         for(int x = 0; x < x2-x1+1; x++) {
  3900   010B34  0E00               	movlw	0
  3901   010B36  6E16               	movwf	(fill_rectangle@x+1)^(0+1280),c
  3902   010B38  0E00               	movlw	0
  3903   010B3A  6E15               	movwf	fill_rectangle@x^(0+1280),c
  3904   010B3C  EFA8  F085         	goto	l1942
  3905   010B40                     l1938:
  3906                           
  3907                           ;ILI9225.c: 261:             lcd_write_data(colour_high);
  3908   010B40  5017               	movf	fill_rectangle@colour_high^(0+1280),w,c
  3909   010B42  EC66  F088         	call	_lcd_write_data
  3910                           
  3911                           ;ILI9225.c: 262:             lcd_write_data(colour_low);
  3912   010B46  5018               	movf	fill_rectangle@colour_low^(0+1280),w,c
  3913   010B48  EC66  F088         	call	_lcd_write_data
  3914   010B4C                     
  3915                           ;ILI9225.c: 263:         }
  3916   010B4C  4A15               	infsnz	fill_rectangle@x^(0+1280),f,c
  3917   010B4E  2A16               	incf	(fill_rectangle@x+1)^(0+1280),f,c
  3918   010B50                     l1942:
  3919   010B50  5019               	movf	fill_rectangle@x1^(0+1280),w,c
  3920   010B52  C50C  F510         	movff	fill_rectangle@x2,??_fill_rectangle
  3921   010B56  6A11               	clrf	(??_fill_rectangle+1)^(0+1280),c
  3922   010B58  5E10               	subwf	??_fill_rectangle^(0+1280),f,c
  3923   010B5A  0E00               	movlw	0
  3924   010B5C  5A11               	subwfb	(??_fill_rectangle+1)^(0+1280),f,c
  3925   010B5E  0E01               	movlw	1
  3926   010B60  2610               	addwf	??_fill_rectangle^(0+1280),f,c
  3927   010B62  0E00               	movlw	0
  3928   010B64  2211               	addwfc	(??_fill_rectangle+1)^(0+1280),f,c
  3929   010B66  5010               	movf	??_fill_rectangle^(0+1280),w,c
  3930   010B68  5C15               	subwf	fill_rectangle@x^(0+1280),w,c
  3931   010B6A  5016               	movf	(fill_rectangle@x+1)^(0+1280),w,c
  3932   010B6C  0A80               	xorlw	128
  3933   010B6E  6E12               	movwf	(??_fill_rectangle+2)^(0+1280),c
  3934   010B70  5011               	movf	(??_fill_rectangle+1)^(0+1280),w,c
  3935   010B72  0A80               	xorlw	128
  3936   010B74  5812               	subwfb	(??_fill_rectangle+2)^(0+1280),w,c
  3937   010B76  A0D8               	btfss	status,0,c
  3938   010B78  EFC0  F085         	goto	u1161
  3939   010B7C  EFC2  F085         	goto	u1160
  3940   010B80                     u1161:
  3941   010B80  EFA0  F085         	goto	l1938
  3942   010B84                     u1160:
  3943   010B84                     
  3944                           ;ILI9225.c: 264:     }
  3945   010B84  4A13               	infsnz	fill_rectangle@y^(0+1280),f,c
  3946   010B86  2A14               	incf	(fill_rectangle@y+1)^(0+1280),f,c
  3947   010B88                     l1946:
  3948   010B88  500B               	movf	fill_rectangle@y1^(0+1280),w,c
  3949   010B8A  C50D  F510         	movff	fill_rectangle@y2,??_fill_rectangle
  3950   010B8E  6A11               	clrf	(??_fill_rectangle+1)^(0+1280),c
  3951   010B90  5E10               	subwf	??_fill_rectangle^(0+1280),f,c
  3952   010B92  0E00               	movlw	0
  3953   010B94  5A11               	subwfb	(??_fill_rectangle+1)^(0+1280),f,c
  3954   010B96  0E01               	movlw	1
  3955   010B98  2610               	addwf	??_fill_rectangle^(0+1280),f,c
  3956   010B9A  0E00               	movlw	0
  3957   010B9C  2211               	addwfc	(??_fill_rectangle+1)^(0+1280),f,c
  3958   010B9E  5010               	movf	??_fill_rectangle^(0+1280),w,c
  3959   010BA0  5C13               	subwf	fill_rectangle@y^(0+1280),w,c
  3960   010BA2  5014               	movf	(fill_rectangle@y+1)^(0+1280),w,c
  3961   010BA4  0A80               	xorlw	128
  3962   010BA6  6E12               	movwf	(??_fill_rectangle+2)^(0+1280),c
  3963   010BA8  5011               	movf	(??_fill_rectangle+1)^(0+1280),w,c
  3964   010BAA  0A80               	xorlw	128
  3965   010BAC  5812               	subwfb	(??_fill_rectangle+2)^(0+1280),w,c
  3966   010BAE  A0D8               	btfss	status,0,c
  3967   010BB0  EFDC  F085         	goto	u1171
  3968   010BB4  EFDE  F085         	goto	u1170
  3969   010BB8                     u1171:
  3970   010BB8  EF9A  F085         	goto	l1936
  3971   010BBC                     u1170:
  3972   010BBC                     
  3973                           ;ILI9225.c: 266:     LATD4 = 1;
  3974   010BBC  88C1               	bsf	1217,4,c	;volatile
  3975   010BBE  0012               	return		;funcret
  3976   010BC0                     __end_of_fill_rectangle:
  3977                           	callstack 0
  3978                           
  3979 ;; *************** function _draw_pixel *****************
  3980 ;; Defined at:
  3981 ;;		line 220 in file "ILI9225.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  x               1    wreg     unsigned char 
  3984 ;;  y               1   10[COMRAM] unsigned char 
  3985 ;;  colour          2   11[COMRAM] unsigned int 
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;  x               1   13[COMRAM] unsigned char 
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  1    wreg      void 
  3990 ;; Registers used:
  3991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  3997 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4000 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4001 ;;Total ram usage:        4 bytes
  4002 ;; Hardware stack levels used: 1
  4003 ;; Hardware stack levels required when called: 4
  4004 ;; This function calls:
  4005 ;;		_lcd_write_data
  4006 ;;		_set_draw_window
  4007 ;;		_swap_char
  4008 ;; This function is called by:
  4009 ;;		_draw_char
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013                           	psect	text10
  4014   010F68                     __ptext10:
  4015                           	callstack 0
  4016   010F68                     _draw_pixel:
  4017                           	callstack 120
  4018                           
  4019                           ;incstack = 0
  4020                           ;draw_pixel@x stored from wreg
  4021   010F68  6E0E               	movwf	draw_pixel@x^(0+1280),c
  4022   010F6A                     
  4023                           ;ILI9225.c: 223:         swap_char(&x, &y);
  4024   010F6A  0E0E               	movlw	low draw_pixel@x
  4025   010F6C  6E01               	movwf	swap_char@num1^(0+1280),c
  4026   010F6E  0E05               	movlw	high draw_pixel@x
  4027   010F70  6E02               	movwf	(swap_char@num1+1)^(0+1280),c
  4028   010F72  0E0B               	movlw	low draw_pixel@y
  4029   010F74  6E03               	movwf	swap_char@num2^(0+1280),c
  4030   010F76  0E05               	movlw	high draw_pixel@y
  4031   010F78  6E04               	movwf	(swap_char@num2+1)^(0+1280),c
  4032   010F7A  ECEE  F087         	call	_swap_char	;wreg free
  4033   010F7E                     
  4034                           ;ILI9225.c: 224:         y = 220 - y;
  4035   010F7E  500B               	movf	draw_pixel@y^(0+1280),w,c
  4036   010F80  08DC               	sublw	220
  4037   010F82  6E0B               	movwf	draw_pixel@y^(0+1280),c
  4038   010F84                     
  4039                           ;ILI9225.c: 228:     set_draw_window(x, y, x+1, y+1);
  4040   010F84  C50B  F507         	movff	draw_pixel@y,set_draw_window@y1
  4041   010F88  280E               	incf	draw_pixel@x^(0+1280),w,c
  4042   010F8A  6E08               	movwf	set_draw_window@x2^(0+1280),c
  4043   010F8C  280B               	incf	draw_pixel@y^(0+1280),w,c
  4044   010F8E  6E09               	movwf	set_draw_window@y2^(0+1280),c
  4045   010F90  500E               	movf	draw_pixel@x^(0+1280),w,c
  4046   010F92  ECE0  F085         	call	_set_draw_window
  4047   010F96                     
  4048                           ;ILI9225.c: 229:     lcd_write_data(colour >> 8);
  4049   010F96  500D               	movf	(draw_pixel@colour+1)^(0+1280),w,c
  4050   010F98  EC66  F088         	call	_lcd_write_data
  4051   010F9C                     
  4052                           ;ILI9225.c: 230:     lcd_write_data(colour & 0xFF);
  4053   010F9C  500C               	movf	draw_pixel@colour^(0+1280),w,c
  4054   010F9E  EC66  F088         	call	_lcd_write_data
  4055   010FA2  0012               	return		;funcret
  4056   010FA4                     __end_of_draw_pixel:
  4057                           	callstack 0
  4058                           
  4059 ;; *************** function _set_draw_window *****************
  4060 ;; Defined at:
  4061 ;;		line 276 in file "ILI9225.c"
  4062 ;; Parameters:    Size  Location     Type
  4063 ;;  x1              1    wreg     unsigned char 
  4064 ;;  y1              1    6[COMRAM] unsigned char 
  4065 ;;  x2              1    7[COMRAM] unsigned char 
  4066 ;;  y2              1    8[COMRAM] unsigned char 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;  x1              1    9[COMRAM] unsigned char 
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      void 
  4071 ;; Registers used:
  4072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4078 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4079 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4081 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4082 ;;Total ram usage:        4 bytes
  4083 ;; Hardware stack levels used: 1
  4084 ;; Hardware stack levels required when called: 3
  4085 ;; This function calls:
  4086 ;;		_lcd_write_command
  4087 ;;		_lcd_write_register
  4088 ;;		_swap_char
  4089 ;; This function is called by:
  4090 ;;		_draw_pixel
  4091 ;;		_fill_rectangle
  4092 ;;		_draw_fast_char
  4093 ;;		_draw_bitmap
  4094 ;; This function uses a non-reentrant model
  4095 ;;
  4096                           
  4097                           	psect	text11
  4098   010BC0                     __ptext11:
  4099                           	callstack 0
  4100   010BC0                     _set_draw_window:
  4101                           	callstack 122
  4102                           
  4103                           ;incstack = 0
  4104                           ;set_draw_window@x1 stored from wreg
  4105   010BC0  6E0A               	movwf	set_draw_window@x1^(0+1280),c
  4106   010BC2                     
  4107                           ;ILI9225.c: 279:     if(x2 < x1)
  4108   010BC2  500A               	movf	set_draw_window@x1^(0+1280),w,c
  4109   010BC4  5C08               	subwf	set_draw_window@x2^(0+1280),w,c
  4110   010BC6  B0D8               	btfsc	status,0,c
  4111   010BC8  EFE8  F085         	goto	u1111
  4112   010BCC  EFEA  F085         	goto	u1110
  4113   010BD0                     u1111:
  4114   010BD0  EFF4  F085         	goto	l1880
  4115   010BD4                     u1110:
  4116   010BD4                     
  4117                           ;ILI9225.c: 280:         swap_char(&x2, &x1);
  4118   010BD4  0E08               	movlw	low set_draw_window@x2
  4119   010BD6  6E01               	movwf	swap_char@num1^(0+1280),c
  4120   010BD8  0E05               	movlw	high set_draw_window@x2
  4121   010BDA  6E02               	movwf	(swap_char@num1+1)^(0+1280),c
  4122   010BDC  0E0A               	movlw	low set_draw_window@x1
  4123   010BDE  6E03               	movwf	swap_char@num2^(0+1280),c
  4124   010BE0  0E05               	movlw	high set_draw_window@x1
  4125   010BE2  6E04               	movwf	(swap_char@num2+1)^(0+1280),c
  4126   010BE4  ECEE  F087         	call	_swap_char	;wreg free
  4127   010BE8                     l1880:
  4128                           
  4129                           ;ILI9225.c: 281:     if(y2 < y1)
  4130   010BE8  5007               	movf	set_draw_window@y1^(0+1280),w,c
  4131   010BEA  5C09               	subwf	set_draw_window@y2^(0+1280),w,c
  4132   010BEC  B0D8               	btfsc	status,0,c
  4133   010BEE  EFFB  F085         	goto	u1121
  4134   010BF2  EFFD  F085         	goto	u1120
  4135   010BF6                     u1121:
  4136   010BF6  EF07  F086         	goto	l1884
  4137   010BFA                     u1120:
  4138   010BFA                     
  4139                           ;ILI9225.c: 282:         swap_char(&y2, &y1);
  4140   010BFA  0E09               	movlw	low set_draw_window@y2
  4141   010BFC  6E01               	movwf	swap_char@num1^(0+1280),c
  4142   010BFE  0E05               	movlw	high set_draw_window@y2
  4143   010C00  6E02               	movwf	(swap_char@num1+1)^(0+1280),c
  4144   010C02  0E07               	movlw	low set_draw_window@y1
  4145   010C04  6E03               	movwf	swap_char@num2^(0+1280),c
  4146   010C06  0E05               	movlw	high set_draw_window@y1
  4147   010C08  6E04               	movwf	(swap_char@num2+1)^(0+1280),c
  4148   010C0A  ECEE  F087         	call	_swap_char	;wreg free
  4149   010C0E                     l1884:
  4150                           
  4151                           ;ILI9225.c: 284:     lcd_write_register((0x36u),x2);
  4152   010C0E  0E00               	movlw	0
  4153   010C10  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  4154   010C12  0E36               	movlw	54
  4155   010C14  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  4156   010C16  C508  F505         	movff	set_draw_window@x2,lcd_write_register@data
  4157   010C1A  6A06               	clrf	(lcd_write_register@data+1)^(0+1280),c
  4158   010C1C  EC38  F088         	call	_lcd_write_register	;wreg free
  4159   010C20                     
  4160                           ;ILI9225.c: 285:     lcd_write_register((0x37u),x1);
  4161   010C20  0E00               	movlw	0
  4162   010C22  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  4163   010C24  0E37               	movlw	55
  4164   010C26  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  4165   010C28  C50A  F505         	movff	set_draw_window@x1,lcd_write_register@data
  4166   010C2C  6A06               	clrf	(lcd_write_register@data+1)^(0+1280),c
  4167   010C2E  EC38  F088         	call	_lcd_write_register	;wreg free
  4168   010C32                     
  4169                           ;ILI9225.c: 287:     lcd_write_register((0x38u),y2);
  4170   010C32  0E00               	movlw	0
  4171   010C34  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  4172   010C36  0E38               	movlw	56
  4173   010C38  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  4174   010C3A  C509  F505         	movff	set_draw_window@y2,lcd_write_register@data
  4175   010C3E  6A06               	clrf	(lcd_write_register@data+1)^(0+1280),c
  4176   010C40  EC38  F088         	call	_lcd_write_register	;wreg free
  4177   010C44                     
  4178                           ;ILI9225.c: 288:     lcd_write_register((0x39u),y1);
  4179   010C44  0E00               	movlw	0
  4180   010C46  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  4181   010C48  0E39               	movlw	57
  4182   010C4A  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  4183   010C4C  C507  F505         	movff	set_draw_window@y1,lcd_write_register@data
  4184   010C50  6A06               	clrf	(lcd_write_register@data+1)^(0+1280),c
  4185   010C52  EC38  F088         	call	_lcd_write_register	;wreg free
  4186   010C56                     
  4187                           ;ILI9225.c: 290:     lcd_write_register((0x20u),x1);
  4188   010C56  0E00               	movlw	0
  4189   010C58  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  4190   010C5A  0E20               	movlw	32
  4191   010C5C  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  4192   010C5E  C50A  F505         	movff	set_draw_window@x1,lcd_write_register@data
  4193   010C62  6A06               	clrf	(lcd_write_register@data+1)^(0+1280),c
  4194   010C64  EC38  F088         	call	_lcd_write_register	;wreg free
  4195   010C68                     
  4196                           ;ILI9225.c: 291:     lcd_write_register((0x21u),y1);
  4197   010C68  0E00               	movlw	0
  4198   010C6A  6E04               	movwf	(lcd_write_register@reg+1)^(0+1280),c
  4199   010C6C  0E21               	movlw	33
  4200   010C6E  6E03               	movwf	lcd_write_register@reg^(0+1280),c
  4201   010C70  C507  F505         	movff	set_draw_window@y1,lcd_write_register@data
  4202   010C74  6A06               	clrf	(lcd_write_register@data+1)^(0+1280),c
  4203   010C76  EC38  F088         	call	_lcd_write_register	;wreg free
  4204   010C7A                     
  4205                           ;ILI9225.c: 293:     lcd_write_command(0x00);
  4206   010C7A  0E00               	movlw	0
  4207   010C7C  EC6E  F088         	call	_lcd_write_command
  4208   010C80                     
  4209                           ;ILI9225.c: 294:     lcd_write_command(0x22);
  4210   010C80  0E22               	movlw	34
  4211   010C82  EC6E  F088         	call	_lcd_write_command
  4212   010C86  0012               	return		;funcret
  4213   010C88                     __end_of_set_draw_window:
  4214                           	callstack 0
  4215                           
  4216 ;; *************** function _swap_char *****************
  4217 ;; Defined at:
  4218 ;;		line 90 in file "ILI9225.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  num1            2    0[COMRAM] PTR unsigned char 
  4221 ;;		 -> draw_bitmap@y2(2), draw_bitmap@x1(2), draw_bitmap@x2(2), draw_fast_char@x(1), 
  4222 ;;		 -> draw_fast_char@width(1), set_draw_window@y2(1), set_draw_window@x2(1), fill_rectangle@y2(1), 
  4223 ;;		 -> fill_rectangle@x2(1), fill_rectangle@x1(1), draw_pixel@x(1), 
  4224 ;;  num2            2    2[COMRAM] PTR unsigned char 
  4225 ;;		 -> draw_bitmap@y1(2), draw_bitmap@y2(2), draw_fast_char@y(1), draw_fast_char@height(1), 
  4226 ;;		 -> set_draw_window@y1(1), set_draw_window@x1(1), fill_rectangle@y2(1), fill_rectangle@y1(1), 
  4227 ;;		 -> draw_pixel@y(1), 
  4228 ;; Auto vars:     Size  Location     Type
  4229 ;;  temp            1    4[COMRAM] unsigned char 
  4230 ;; Return value:  Size  Location     Type
  4231 ;;                  1    wreg      void 
  4232 ;; Registers used:
  4233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  4234 ;; Tracked objects:
  4235 ;;		On entry : 0/0
  4236 ;;		On exit  : 0/0
  4237 ;;		Unchanged: 0/0
  4238 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4239 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4240 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4242 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4243 ;;Total ram usage:        5 bytes
  4244 ;; Hardware stack levels used: 1
  4245 ;; This function calls:
  4246 ;;		Nothing
  4247 ;; This function is called by:
  4248 ;;		_draw_pixel
  4249 ;;		_fill_rectangle
  4250 ;;		_set_draw_window
  4251 ;;		_draw_fast_char
  4252 ;;		_draw_bitmap
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text12
  4257   010FDC                     __ptext12:
  4258                           	callstack 0
  4259   010FDC                     _swap_char:
  4260                           	callstack 125
  4261   010FDC                     
  4262                           ;ILI9225.c: 91:     char temp = *num2;
  4263   010FDC  C503  F4D9         	movff	swap_char@num2,fsr2l
  4264   010FE0  C504  F4DA         	movff	swap_char@num2+1,fsr2h
  4265   010FE4  50DF               	movf	indf2,w,c
  4266   010FE6  6E05               	movwf	swap_char@temp^(0+1280),c
  4267   010FE8                     
  4268                           ;ILI9225.c: 92:     *num2 = *num1;
  4269   010FE8  C501  F4D9         	movff	swap_char@num1,fsr2l
  4270   010FEC  C502  F4DA         	movff	swap_char@num1+1,fsr2h
  4271   010FF0  C503  F4E1         	movff	swap_char@num2,fsr1l
  4272   010FF4  C504  F4E2         	movff	swap_char@num2+1,fsr1h
  4273   010FF8  C4DF F4E7          	movff	indf2,indf1
  4274   010FFC                     
  4275                           ;ILI9225.c: 93:     *num1 = temp;
  4276   010FFC  C501  F4D9         	movff	swap_char@num1,fsr2l
  4277   011000  C502  F4DA         	movff	swap_char@num1+1,fsr2h
  4278   011004  C505  F4DF         	movff	swap_char@temp,indf2
  4279   011008  0012               	return		;funcret
  4280   01100A                     __end_of_swap_char:
  4281                           	callstack 0
  4282                           
  4283 ;; *************** function _lcd_write_register *****************
  4284 ;; Defined at:
  4285 ;;		line 70 in file "ILI9225.c"
  4286 ;; Parameters:    Size  Location     Type
  4287 ;;  reg             2    2[COMRAM] unsigned int 
  4288 ;;  data            2    4[COMRAM] unsigned int 
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;		None
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  1    wreg      void 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2, cstack
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4300 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4303 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4304 ;;Total ram usage:        4 bytes
  4305 ;; Hardware stack levels used: 1
  4306 ;; Hardware stack levels required when called: 2
  4307 ;; This function calls:
  4308 ;;		_lcd_write_command
  4309 ;;		_lcd_write_data
  4310 ;; This function is called by:
  4311 ;;		_lcd_init_command_list
  4312 ;;		_set_draw_window
  4313 ;; This function uses a non-reentrant model
  4314 ;;
  4315                           
  4316                           	psect	text13
  4317   011070                     __ptext13:
  4318                           	callstack 0
  4319   011070                     _lcd_write_register:
  4320                           	callstack 122
  4321   011070                     
  4322                           ;ILI9225.c: 72:     lcd_write_command(reg >> 8);
  4323   011070  5004               	movf	(lcd_write_register@reg+1)^(0+1280),w,c
  4324   011072  EC6E  F088         	call	_lcd_write_command
  4325                           
  4326                           ;ILI9225.c: 73:     lcd_write_command(reg & 0xFF);
  4327   011076  5003               	movf	lcd_write_register@reg^(0+1280),w,c
  4328   011078  EC6E  F088         	call	_lcd_write_command
  4329                           
  4330                           ;ILI9225.c: 74:     lcd_write_data(data >> 8);
  4331   01107C  5006               	movf	(lcd_write_register@data+1)^(0+1280),w,c
  4332   01107E  EC66  F088         	call	_lcd_write_data
  4333                           
  4334                           ;ILI9225.c: 75:     lcd_write_data(data & 0xFF);
  4335   011082  5005               	movf	lcd_write_register@data^(0+1280),w,c
  4336   011084  EC66  F088         	call	_lcd_write_data
  4337   011088  0012               	return		;funcret
  4338   01108A                     __end_of_lcd_write_register:
  4339                           	callstack 0
  4340                           
  4341 ;; *************** function _lcd_write_data *****************
  4342 ;; Defined at:
  4343 ;;		line 43 in file "ILI9225.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  data            1    wreg     unsigned char 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;  data            1    1[COMRAM] unsigned char 
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      void 
  4350 ;; Registers used:
  4351 ;;		wreg, status,2, cstack
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4358 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4360 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4361 ;;Total ram usage:        1 bytes
  4362 ;; Hardware stack levels used: 1
  4363 ;; Hardware stack levels required when called: 1
  4364 ;; This function calls:
  4365 ;;		_spi_write
  4366 ;; This function is called by:
  4367 ;;		_lcd_write_register
  4368 ;;		_draw_pixel
  4369 ;;		_fill_rectangle
  4370 ;;		_draw_fast_char
  4371 ;;		_draw_bitmap
  4372 ;; This function uses a non-reentrant model
  4373 ;;
  4374                           
  4375                           	psect	text14
  4376   0110CC                     __ptext14:
  4377                           	callstack 0
  4378   0110CC                     _lcd_write_data:
  4379                           	callstack 122
  4380                           
  4381                           ;incstack = 0
  4382                           ;lcd_write_data@data stored from wreg
  4383   0110CC  6E02               	movwf	lcd_write_data@data^(0+1280),c
  4384   0110CE                     
  4385                           ;ILI9225.c: 45:     LATD4 = 0;
  4386   0110CE  98C1               	bcf	1217,4,c	;volatile
  4387                           
  4388                           ;ILI9225.c: 47:     LATA4 = 1;
  4389   0110D0  88BE               	bsf	1214,4,c	;volatile
  4390   0110D2                     
  4391                           ;ILI9225.c: 49:     spi_write(data);
  4392   0110D2  5002               	movf	lcd_write_data@data^(0+1280),w,c
  4393   0110D4  EC52  F088         	call	_spi_write
  4394   0110D8                     
  4395                           ;ILI9225.c: 51:     LATD4 = 1;
  4396   0110D8  88C1               	bsf	1217,4,c	;volatile
  4397   0110DA  0012               	return		;funcret
  4398   0110DC                     __end_of_lcd_write_data:
  4399                           	callstack 0
  4400                           
  4401 ;; *************** function _lcd_write_command *****************
  4402 ;; Defined at:
  4403 ;;		line 57 in file "ILI9225.c"
  4404 ;; Parameters:    Size  Location     Type
  4405 ;;  data            1    wreg     unsigned char 
  4406 ;; Auto vars:     Size  Location     Type
  4407 ;;  data            1    1[COMRAM] unsigned char 
  4408 ;; Return value:  Size  Location     Type
  4409 ;;                  1    wreg      void 
  4410 ;; Registers used:
  4411 ;;		wreg, status,2, cstack
  4412 ;; Tracked objects:
  4413 ;;		On entry : 0/0
  4414 ;;		On exit  : 0/0
  4415 ;;		Unchanged: 0/0
  4416 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4418 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4420 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4421 ;;Total ram usage:        1 bytes
  4422 ;; Hardware stack levels used: 1
  4423 ;; Hardware stack levels required when called: 1
  4424 ;; This function calls:
  4425 ;;		_spi_write
  4426 ;; This function is called by:
  4427 ;;		_lcd_write_register
  4428 ;;		_set_draw_window
  4429 ;; This function uses a non-reentrant model
  4430 ;;
  4431                           
  4432                           	psect	text15
  4433   0110DC                     __ptext15:
  4434                           	callstack 0
  4435   0110DC                     _lcd_write_command:
  4436                           	callstack 122
  4437                           
  4438                           ;incstack = 0
  4439                           ;lcd_write_command@data stored from wreg
  4440   0110DC  6E02               	movwf	lcd_write_command@data^(0+1280),c
  4441   0110DE                     
  4442                           ;ILI9225.c: 59:     LATA4 = 0;
  4443   0110DE  98BE               	bcf	1214,4,c	;volatile
  4444                           
  4445                           ;ILI9225.c: 60:     LATD4 = 0;
  4446   0110E0  98C1               	bcf	1217,4,c	;volatile
  4447   0110E2                     
  4448                           ;ILI9225.c: 61:     spi_write(data);
  4449   0110E2  5002               	movf	lcd_write_command@data^(0+1280),w,c
  4450   0110E4  EC52  F088         	call	_spi_write
  4451   0110E8                     
  4452                           ;ILI9225.c: 63:     LATD4 = 1;
  4453   0110E8  88C1               	bsf	1217,4,c	;volatile
  4454   0110EA  0012               	return		;funcret
  4455   0110EC                     __end_of_lcd_write_command:
  4456                           	callstack 0
  4457                           
  4458 ;; *************** function _spi_write *****************
  4459 ;; Defined at:
  4460 ;;		line 31 in file "ILI9225.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  data            1    wreg     unsigned char 
  4463 ;; Auto vars:     Size  Location     Type
  4464 ;;  data            1    0[COMRAM] unsigned char 
  4465 ;; Return value:  Size  Location     Type
  4466 ;;                  1    wreg      void 
  4467 ;; Registers used:
  4468 ;;		wreg
  4469 ;; Tracked objects:
  4470 ;;		On entry : 0/0
  4471 ;;		On exit  : 0/0
  4472 ;;		Unchanged: 0/0
  4473 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4477 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4478 ;;Total ram usage:        1 bytes
  4479 ;; Hardware stack levels used: 1
  4480 ;; This function calls:
  4481 ;;		Nothing
  4482 ;; This function is called by:
  4483 ;;		_lcd_write_data
  4484 ;;		_lcd_write_command
  4485 ;; This function uses a non-reentrant model
  4486 ;;
  4487                           
  4488                           	psect	text16
  4489   0110A4                     __ptext16:
  4490                           	callstack 0
  4491   0110A4                     _spi_write:
  4492                           	callstack 122
  4493                           
  4494                           ;incstack = 0
  4495                           ;spi_write@data stored from wreg
  4496   0110A4  6E01               	movwf	spi_write@data^(0+1280),c
  4497   0110A6                     
  4498                           ;ILI9225.c: 35:     SPI1TXB = data;
  4499   0110A6  C501  F081         	movff	spi_write@data,129	;volatile
  4500   0110AA                     l259:
  4501   0110AA  A2B1               	btfss	177,1,c	;volatile
  4502   0110AC  EF5A  F088         	goto	u11
  4503   0110B0  EF5C  F088         	goto	u10
  4504   0110B4                     u11:
  4505   0110B4  EF55  F088         	goto	l259
  4506   0110B8                     u10:
  4507   0110B8  0012               	return		;funcret
  4508   0110BA                     __end_of_spi_write:
  4509                           	callstack 0
  4510                           
  4511 ;; *************** function ___wmul *****************
  4512 ;; Defined at:
  4513 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c99\common\Umul16.c"
  4514 ;; Parameters:    Size  Location     Type
  4515 ;;  multiplier      2    0[COMRAM] unsigned int 
  4516 ;;  multiplicand    2    2[COMRAM] unsigned int 
  4517 ;; Auto vars:     Size  Location     Type
  4518 ;;  product         2    4[COMRAM] unsigned int 
  4519 ;; Return value:  Size  Location     Type
  4520 ;;                  2    0[COMRAM] unsigned int 
  4521 ;; Registers used:
  4522 ;;		wreg, status,2, status,0, prodl, prodh
  4523 ;; Tracked objects:
  4524 ;;		On entry : 0/0
  4525 ;;		On exit  : 0/0
  4526 ;;		Unchanged: 0/0
  4527 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4528 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4529 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4531 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4532 ;;Total ram usage:        6 bytes
  4533 ;; Hardware stack levels used: 1
  4534 ;; This function calls:
  4535 ;;		Nothing
  4536 ;; This function is called by:
  4537 ;;		_draw_char
  4538 ;;		_draw_string
  4539 ;;		_draw_fast_char
  4540 ;;		_draw_bitmap
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text17
  4545   01100A                     __ptext17:
  4546                           	callstack 0
  4547   01100A                     ___wmul:
  4548                           	callstack 124
  4549   01100A  5001               	movf	___wmul@multiplier^(0+1280),w,c
  4550   01100C  0203               	mulwf	___wmul@multiplicand^(0+1280),c
  4551   01100E  C4F3 F505          	movff	prodl,___wmul@product
  4552   011012  C4F4 F506          	movff	prodh,___wmul@product+1
  4553   011016  5001               	movf	___wmul@multiplier^(0+1280),w,c
  4554   011018  0204               	mulwf	(___wmul@multiplicand+1)^(0+1280),c
  4555   01101A  50F3               	movf	243,w,c
  4556   01101C  2606               	addwf	(___wmul@product+1)^(0+1280),f,c
  4557   01101E  5002               	movf	(___wmul@multiplier+1)^(0+1280),w,c
  4558   011020  0203               	mulwf	___wmul@multiplicand^(0+1280),c
  4559   011022  50F3               	movf	243,w,c
  4560   011024  2606               	addwf	(___wmul@product+1)^(0+1280),f,c
  4561   011026  C505  F501         	movff	___wmul@product,?___wmul
  4562   01102A  C506  F502         	movff	___wmul@product+1,?___wmul+1
  4563   01102E  0012               	return		;funcret
  4564   011030                     __end_of___wmul:
  4565                           	callstack 0
  4566                           
  4567 ;; *************** function _SYSTEM_Initialize *****************
  4568 ;; Defined at:
  4569 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;		None
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;		None
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      void 
  4576 ;; Registers used:
  4577 ;;		wreg, status,2, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4587 ;;Total ram usage:        0 bytes
  4588 ;; Hardware stack levels used: 1
  4589 ;; Hardware stack levels required when called: 1
  4590 ;; This function calls:
  4591 ;;		_OSCILLATOR_Initialize
  4592 ;;		_PIN_MANAGER_Initialize
  4593 ;;		_PMD_Initialize
  4594 ;;		_SPI1_Initialize
  4595 ;; This function is called by:
  4596 ;;		_main
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text18
  4601   0110BA                     __ptext18:
  4602                           	callstack 0
  4603   0110BA                     _SYSTEM_Initialize:
  4604                           	callstack 125
  4605   0110BA                     
  4606                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  4607   0110BA  EC18  F088         	call	_PMD_Initialize	;wreg free
  4608                           
  4609                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  4610   0110BE  EC44  F086         	call	_PIN_MANAGER_Initialize	;wreg free
  4611                           
  4612                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  4613   0110C2  EC2A  F088         	call	_OSCILLATOR_Initialize	;wreg free
  4614                           
  4615                           ;mcc_generated_files/mcc.c: 55:     SPI1_Initialize();
  4616   0110C6  EC45  F088         	call	_SPI1_Initialize	;wreg free
  4617   0110CA  0012               	return		;funcret
  4618   0110CC                     __end_of_SYSTEM_Initialize:
  4619                           	callstack 0
  4620                           
  4621 ;; *************** function _SPI1_Initialize *****************
  4622 ;; Defined at:
  4623 ;;		line 64 in file "mcc_generated_files/spi1.c"
  4624 ;; Parameters:    Size  Location     Type
  4625 ;;		None
  4626 ;; Auto vars:     Size  Location     Type
  4627 ;;		None
  4628 ;; Return value:  Size  Location     Type
  4629 ;;                  1    wreg      void 
  4630 ;; Registers used:
  4631 ;;		wreg, status,2
  4632 ;; Tracked objects:
  4633 ;;		On entry : 0/0
  4634 ;;		On exit  : 0/0
  4635 ;;		Unchanged: 0/0
  4636 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4641 ;;Total ram usage:        0 bytes
  4642 ;; Hardware stack levels used: 1
  4643 ;; This function calls:
  4644 ;;		Nothing
  4645 ;; This function is called by:
  4646 ;;		_SYSTEM_Initialize
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           	psect	text19
  4651   01108A                     __ptext19:
  4652                           	callstack 0
  4653   01108A                     _SPI1_Initialize:
  4654                           	callstack 125
  4655   01108A                     
  4656                           ;mcc_generated_files/spi1.c: 67:     SPI1CON0 = 0x02;
  4657   01108A  0E02               	movlw	2
  4658   01108C  0100               	movlb	0	; () banked
  4659   01108E  6F84               	movwf	132,b	;volatile
  4660                           
  4661                           ;mcc_generated_files/spi1.c: 69:     SPI1CON1 = 0x40;
  4662   011090  0E40               	movlw	64
  4663   011092  6F85               	movwf	133,b	;volatile
  4664                           
  4665                           ;mcc_generated_files/spi1.c: 71:     SPI1CON2 = 0x00;
  4666   011094  0E00               	movlw	0
  4667   011096  6F86               	movwf	134,b	;volatile
  4668                           
  4669                           ;mcc_generated_files/spi1.c: 73:     SPI1CLK = 0x00;
  4670   011098  0E00               	movlw	0
  4671   01109A  6F8C               	movwf	140,b	;volatile
  4672                           
  4673                           ;mcc_generated_files/spi1.c: 75:     SPI1BAUD = 0x01;
  4674   01109C  0E01               	movlw	1
  4675   01109E  6F89               	movwf	137,b	;volatile
  4676   0110A0                     
  4677                           ; BSR set to: 0
  4678                           ;mcc_generated_files/spi1.c: 76:     TRISCbits.TRISC6 = 0;
  4679   0110A0  9CC8               	bcf	200,6,c	;volatile
  4680   0110A2                     
  4681                           ; BSR set to: 0
  4682   0110A2  0012               	return		;funcret
  4683   0110A4                     __end_of_SPI1_Initialize:
  4684                           	callstack 0
  4685                           
  4686 ;; *************** function _PMD_Initialize *****************
  4687 ;; Defined at:
  4688 ;;		line 74 in file "mcc_generated_files/mcc.c"
  4689 ;; Parameters:    Size  Location     Type
  4690 ;;		None
  4691 ;; Auto vars:     Size  Location     Type
  4692 ;;		None
  4693 ;; Return value:  Size  Location     Type
  4694 ;;                  1    wreg      void 
  4695 ;; Registers used:
  4696 ;;		wreg, status,2
  4697 ;; Tracked objects:
  4698 ;;		On entry : 0/0
  4699 ;;		On exit  : 0/0
  4700 ;;		Unchanged: 0/0
  4701 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4705 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4706 ;;Total ram usage:        0 bytes
  4707 ;; Hardware stack levels used: 1
  4708 ;; This function calls:
  4709 ;;		Nothing
  4710 ;; This function is called by:
  4711 ;;		_SYSTEM_Initialize
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           	psect	text20
  4716   011030                     __ptext20:
  4717                           	callstack 0
  4718   011030                     _PMD_Initialize:
  4719                           	callstack 125
  4720   011030                     
  4721                           ;mcc_generated_files/mcc.c: 77:     PMD0 = 0x00;
  4722   011030  0E00               	movlw	0
  4723   011032  0100               	movlb	0	; () banked
  4724   011034  6F60               	movwf	96,b	;volatile
  4725                           
  4726                           ;mcc_generated_files/mcc.c: 79:     PMD1 = 0x00;
  4727   011036  0E00               	movlw	0
  4728   011038  6F61               	movwf	97,b	;volatile
  4729                           
  4730                           ;mcc_generated_files/mcc.c: 81:     PMD3 = 0x00;
  4731   01103A  0E00               	movlw	0
  4732   01103C  6F63               	movwf	99,b	;volatile
  4733                           
  4734                           ;mcc_generated_files/mcc.c: 83:     PMD4 = 0x00;
  4735   01103E  0E00               	movlw	0
  4736   011040  6F64               	movwf	100,b	;volatile
  4737                           
  4738                           ;mcc_generated_files/mcc.c: 85:     PMD5 = 0x00;
  4739   011042  0E00               	movlw	0
  4740   011044  6F65               	movwf	101,b	;volatile
  4741                           
  4742                           ;mcc_generated_files/mcc.c: 87:     PMD6 = 0x00;
  4743   011046  0E00               	movlw	0
  4744   011048  6F66               	movwf	102,b	;volatile
  4745                           
  4746                           ;mcc_generated_files/mcc.c: 89:     PMD7 = 0x00;
  4747   01104A  0E00               	movlw	0
  4748   01104C  6F67               	movwf	103,b	;volatile
  4749                           
  4750                           ;mcc_generated_files/mcc.c: 91:     PMD8 = 0x00;
  4751   01104E  0E00               	movlw	0
  4752   011050  6F68               	movwf	104,b	;volatile
  4753   011052                     
  4754                           ; BSR set to: 0
  4755   011052  0012               	return		;funcret
  4756   011054                     __end_of_PMD_Initialize:
  4757                           	callstack 0
  4758                           
  4759 ;; *************** function _PIN_MANAGER_Initialize *****************
  4760 ;; Defined at:
  4761 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;		None
  4764 ;; Auto vars:     Size  Location     Type
  4765 ;;		None
  4766 ;; Return value:  Size  Location     Type
  4767 ;;                  1    wreg      void 
  4768 ;; Registers used:
  4769 ;;		wreg, status,2
  4770 ;; Tracked objects:
  4771 ;;		On entry : 0/0
  4772 ;;		On exit  : 0/0
  4773 ;;		Unchanged: 0/0
  4774 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  4775 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4776 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4778 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4779 ;;Total ram usage:        0 bytes
  4780 ;; Hardware stack levels used: 1
  4781 ;; This function calls:
  4782 ;;		Nothing
  4783 ;; This function is called by:
  4784 ;;		_SYSTEM_Initialize
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           	psect	text21
  4789   010C88                     __ptext21:
  4790                           	callstack 0
  4791   010C88                     _PIN_MANAGER_Initialize:
  4792                           	callstack 125
  4793   010C88                     
  4794                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  4795   010C88  0E00               	movlw	0
  4796   010C8A  6EC2               	movwf	194,c	;volatile
  4797                           
  4798                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  4799   010C8C  0E00               	movlw	0
  4800   010C8E  6EC1               	movwf	193,c	;volatile
  4801                           
  4802                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  4803   010C90  0E00               	movlw	0
  4804   010C92  6EBE               	movwf	190,c	;volatile
  4805                           
  4806                           ;mcc_generated_files/pin_manager.c: 63:     LATF = 0x00;
  4807   010C94  0E00               	movlw	0
  4808   010C96  6EC3               	movwf	195,c	;volatile
  4809                           
  4810                           ;mcc_generated_files/pin_manager.c: 64:     LATB = 0x00;
  4811   010C98  0E00               	movlw	0
  4812   010C9A  6EBF               	movwf	191,c	;volatile
  4813                           
  4814                           ;mcc_generated_files/pin_manager.c: 65:     LATC = 0x00;
  4815   010C9C  0E00               	movlw	0
  4816   010C9E  6EC0               	movwf	192,c	;volatile
  4817                           
  4818                           ;mcc_generated_files/pin_manager.c: 70:     TRISE = 0x03;
  4819   010CA0  0E03               	movlw	3
  4820   010CA2  6ECA               	movwf	202,c	;volatile
  4821   010CA4                     
  4822                           ;mcc_generated_files/pin_manager.c: 71:     TRISF = 0xFF;
  4823   010CA4  68CB               	setf	203,c	;volatile
  4824                           
  4825                           ;mcc_generated_files/pin_manager.c: 72:     TRISA = 0xE7;
  4826   010CA6  0EE7               	movlw	231
  4827   010CA8  6EC6               	movwf	198,c	;volatile
  4828   010CAA                     
  4829                           ;mcc_generated_files/pin_manager.c: 73:     TRISB = 0xFF;
  4830   010CAA  68C7               	setf	199,c	;volatile
  4831                           
  4832                           ;mcc_generated_files/pin_manager.c: 74:     TRISC = 0xAF;
  4833   010CAC  0EAF               	movlw	175
  4834   010CAE  6EC8               	movwf	200,c	;volatile
  4835                           
  4836                           ;mcc_generated_files/pin_manager.c: 75:     TRISD = 0xEF;
  4837   010CB0  0EEF               	movlw	239
  4838   010CB2  6EC9               	movwf	201,c	;volatile
  4839                           
  4840                           ;mcc_generated_files/pin_manager.c: 80:     ANSELD = 0xEF;
  4841   010CB4  0EEF               	movlw	239
  4842   010CB6  0104               	movlb	4	; () banked
  4843   010CB8  6F18               	movwf	24,b	;volatile
  4844                           
  4845                           ;mcc_generated_files/pin_manager.c: 81:     ANSELC = 0x8F;
  4846   010CBA  0E8F               	movlw	143
  4847   010CBC  6F10               	movwf	16,b	;volatile
  4848   010CBE                     
  4849                           ; BSR set to: 4
  4850                           ;mcc_generated_files/pin_manager.c: 82:     ANSELB = 0xFF;
  4851   010CBE  6908               	setf	8,b	;volatile
  4852                           
  4853                           ;mcc_generated_files/pin_manager.c: 83:     ANSELE = 0x03;
  4854   010CC0  0E03               	movlw	3
  4855   010CC2  6F20               	movwf	32,b	;volatile
  4856   010CC4                     
  4857                           ; BSR set to: 4
  4858                           ;mcc_generated_files/pin_manager.c: 84:     ANSELF = 0xFF;
  4859   010CC4  6928               	setf	40,b	;volatile
  4860                           
  4861                           ;mcc_generated_files/pin_manager.c: 85:     ANSELA = 0xE7;
  4862   010CC6  0EE7               	movlw	231
  4863   010CC8  6F00               	movwf	0,b	;volatile
  4864                           
  4865                           ;mcc_generated_files/pin_manager.c: 90:     WPUD = 0x00;
  4866   010CCA  0E00               	movlw	0
  4867   010CCC  6F19               	movwf	25,b	;volatile
  4868                           
  4869                           ;mcc_generated_files/pin_manager.c: 91:     WPUF = 0x00;
  4870   010CCE  0E00               	movlw	0
  4871   010CD0  6F29               	movwf	41,b	;volatile
  4872                           
  4873                           ;mcc_generated_files/pin_manager.c: 92:     WPUE = 0x00;
  4874   010CD2  0E00               	movlw	0
  4875   010CD4  6F21               	movwf	33,b	;volatile
  4876                           
  4877                           ;mcc_generated_files/pin_manager.c: 93:     WPUB = 0x00;
  4878   010CD6  0E00               	movlw	0
  4879   010CD8  6F09               	movwf	9,b	;volatile
  4880                           
  4881                           ;mcc_generated_files/pin_manager.c: 94:     WPUA = 0x00;
  4882   010CDA  0E00               	movlw	0
  4883   010CDC  6F01               	movwf	1,b	;volatile
  4884                           
  4885                           ;mcc_generated_files/pin_manager.c: 95:     WPUC = 0x00;
  4886   010CDE  0E00               	movlw	0
  4887   010CE0  6F11               	movwf	17,b	;volatile
  4888                           
  4889                           ;mcc_generated_files/pin_manager.c: 100:     RB1I2C = 0x00;
  4890   010CE2  0E00               	movlw	0
  4891   010CE4  0102               	movlb	2	; () banked
  4892   010CE6  6F89               	movwf	137,b	;volatile
  4893                           
  4894                           ;mcc_generated_files/pin_manager.c: 101:     RB2I2C = 0x00;
  4895   010CE8  0E00               	movlw	0
  4896   010CEA  6F88               	movwf	136,b	;volatile
  4897                           
  4898                           ;mcc_generated_files/pin_manager.c: 102:     RC3I2C = 0x00;
  4899   010CEC  0E00               	movlw	0
  4900   010CEE  6F87               	movwf	135,b	;volatile
  4901                           
  4902                           ;mcc_generated_files/pin_manager.c: 103:     RC4I2C = 0x00;
  4903   010CF0  0E00               	movlw	0
  4904   010CF2  6F86               	movwf	134,b	;volatile
  4905                           
  4906                           ;mcc_generated_files/pin_manager.c: 108:     ODCONE = 0x00;
  4907   010CF4  0E00               	movlw	0
  4908   010CF6  0104               	movlb	4	; () banked
  4909   010CF8  6F22               	movwf	34,b	;volatile
  4910                           
  4911                           ;mcc_generated_files/pin_manager.c: 109:     ODCONF = 0x00;
  4912   010CFA  0E00               	movlw	0
  4913   010CFC  6F2A               	movwf	42,b	;volatile
  4914                           
  4915                           ;mcc_generated_files/pin_manager.c: 110:     ODCONA = 0x00;
  4916   010CFE  0E00               	movlw	0
  4917   010D00  6F02               	movwf	2,b	;volatile
  4918                           
  4919                           ;mcc_generated_files/pin_manager.c: 111:     ODCONB = 0x00;
  4920   010D02  0E00               	movlw	0
  4921   010D04  6F0A               	movwf	10,b	;volatile
  4922                           
  4923                           ;mcc_generated_files/pin_manager.c: 112:     ODCONC = 0x00;
  4924   010D06  0E00               	movlw	0
  4925   010D08  6F12               	movwf	18,b	;volatile
  4926                           
  4927                           ;mcc_generated_files/pin_manager.c: 113:     ODCOND = 0x00;
  4928   010D0A  0E00               	movlw	0
  4929   010D0C  6F1A               	movwf	26,b	;volatile
  4930   010D0E                     
  4931                           ; BSR set to: 4
  4932                           ;mcc_generated_files/pin_manager.c: 118:     SLRCONA = 0xFF;
  4933   010D0E  6903               	setf	3,b	;volatile
  4934   010D10                     
  4935                           ; BSR set to: 4
  4936                           ;mcc_generated_files/pin_manager.c: 119:     SLRCONB = 0xFF;
  4937   010D10  690B               	setf	11,b	;volatile
  4938   010D12                     
  4939                           ; BSR set to: 4
  4940                           ;mcc_generated_files/pin_manager.c: 120:     SLRCONC = 0xFF;
  4941   010D12  6913               	setf	19,b	;volatile
  4942   010D14                     
  4943                           ; BSR set to: 4
  4944                           ;mcc_generated_files/pin_manager.c: 121:     SLRCOND = 0xFF;
  4945   010D14  691B               	setf	27,b	;volatile
  4946                           
  4947                           ;mcc_generated_files/pin_manager.c: 122:     SLRCONE = 0x07;
  4948   010D16  0E07               	movlw	7
  4949   010D18  6F23               	movwf	35,b	;volatile
  4950   010D1A                     
  4951                           ; BSR set to: 4
  4952                           ;mcc_generated_files/pin_manager.c: 123:     SLRCONF = 0xFF;
  4953   010D1A  692B               	setf	43,b	;volatile
  4954   010D1C                     
  4955                           ; BSR set to: 4
  4956                           ;mcc_generated_files/pin_manager.c: 128:     INLVLA = 0xFF;
  4957   010D1C  6904               	setf	4,b	;volatile
  4958   010D1E                     
  4959                           ; BSR set to: 4
  4960                           ;mcc_generated_files/pin_manager.c: 129:     INLVLB = 0xFF;
  4961   010D1E  690C               	setf	12,b	;volatile
  4962   010D20                     
  4963                           ; BSR set to: 4
  4964                           ;mcc_generated_files/pin_manager.c: 130:     INLVLC = 0xFF;
  4965   010D20  6914               	setf	20,b	;volatile
  4966   010D22                     
  4967                           ; BSR set to: 4
  4968                           ;mcc_generated_files/pin_manager.c: 131:     INLVLD = 0xFF;
  4969   010D22  691C               	setf	28,b	;volatile
  4970                           
  4971                           ;mcc_generated_files/pin_manager.c: 132:     INLVLE = 0x0F;
  4972   010D24  0E0F               	movlw	15
  4973   010D26  6F24               	movwf	36,b	;volatile
  4974   010D28                     
  4975                           ; BSR set to: 4
  4976                           ;mcc_generated_files/pin_manager.c: 133:     INLVLF = 0xFF;
  4977   010D28  692C               	setf	44,b	;volatile
  4978                           
  4979                           ;mcc_generated_files/pin_manager.c: 142:     SPI1SCKPPS = 0x16;
  4980   010D2A  0E16               	movlw	22
  4981   010D2C  0102               	movlb	2	; () banked
  4982   010D2E  6F6A               	movwf	106,b	;volatile
  4983                           
  4984                           ;mcc_generated_files/pin_manager.c: 143:     RC4PPS = 0x32;
  4985   010D30  0E32               	movlw	50
  4986   010D32  6F15               	movwf	21,b	;volatile
  4987                           
  4988                           ;mcc_generated_files/pin_manager.c: 144:     RC6PPS = 0x31;
  4989   010D34  0E31               	movlw	49
  4990   010D36  6F17               	movwf	23,b	;volatile
  4991                           
  4992                           ;mcc_generated_files/pin_manager.c: 145:     SPI1SDIPPS = 0x15;
  4993   010D38  0E15               	movlw	21
  4994   010D3A  6F6B               	movwf	107,b	;volatile
  4995   010D3C                     
  4996                           ; BSR set to: 2
  4997   010D3C  0012               	return		;funcret
  4998   010D3E                     __end_of_PIN_MANAGER_Initialize:
  4999                           	callstack 0
  5000                           
  5001 ;; *************** function _OSCILLATOR_Initialize *****************
  5002 ;; Defined at:
  5003 ;;		line 58 in file "mcc_generated_files/mcc.c"
  5004 ;; Parameters:    Size  Location     Type
  5005 ;;		None
  5006 ;; Auto vars:     Size  Location     Type
  5007 ;;		None
  5008 ;; Return value:  Size  Location     Type
  5009 ;;                  1    wreg      void 
  5010 ;; Registers used:
  5011 ;;		wreg, status,2
  5012 ;; Tracked objects:
  5013 ;;		On entry : 0/0
  5014 ;;		On exit  : 0/0
  5015 ;;		Unchanged: 0/0
  5016 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK26  BANK27  BANK28  BANK29  BANK30  BANK3
      +1  BANK32  BANK33  BANK34  BANK35  BANK36
  5017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5021 ;;Total ram usage:        0 bytes
  5022 ;; Hardware stack levels used: 1
  5023 ;; This function calls:
  5024 ;;		Nothing
  5025 ;; This function is called by:
  5026 ;;		_SYSTEM_Initialize
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           	psect	text22
  5031   011054                     __ptext22:
  5032                           	callstack 0
  5033   011054                     _OSCILLATOR_Initialize:
  5034                           	callstack 125
  5035   011054                     
  5036                           ;mcc_generated_files/mcc.c: 61:     OSCCON1 = 0x60;
  5037   011054  0E60               	movlw	96
  5038   011056  0100               	movlb	0	; () banked
  5039   011058  6FAD               	movwf	173,b	;volatile
  5040                           
  5041                           ;mcc_generated_files/mcc.c: 63:     OSCCON3 = 0x00;
  5042   01105A  0E00               	movlw	0
  5043   01105C  6FAF               	movwf	175,b	;volatile
  5044                           
  5045                           ;mcc_generated_files/mcc.c: 65:     OSCEN = 0x00;
  5046   01105E  0E00               	movlw	0
  5047   011060  6FB3               	movwf	179,b	;volatile
  5048                           
  5049                           ;mcc_generated_files/mcc.c: 67:     OSCFRQ = 0x06;
  5050   011062  0E06               	movlw	6
  5051   011064  6FB1               	movwf	177,b	;volatile
  5052                           
  5053                           ;mcc_generated_files/mcc.c: 69:     OSCTUNE = 0x00;
  5054   011066  0E00               	movlw	0
  5055   011068  6FB0               	movwf	176,b	;volatile
  5056                           
  5057                           ;mcc_generated_files/mcc.c: 71:     ACTCON = 0x00;
  5058   01106A  0E00               	movlw	0
  5059   01106C  6FAC               	movwf	172,b	;volatile
  5060   01106E                     
  5061                           ; BSR set to: 0
  5062   01106E  0012               	return		;funcret
  5063   011070                     __end_of_OSCILLATOR_Initialize:
  5064                           	callstack 0
  5065                           
  5066                           	psect	rparam
  5067   000000                     
  5068                           	psect	idloc
  5069                           
  5070                           ;Config register IDLOC0 @ 0x200000
  5071                           ;	unspecified, using default values
  5072   200000                     	org	2097152
  5073   200000  0FFF               	dw	4095
  5074                           
  5075                           ;Config register IDLOC1 @ 0x200002
  5076                           ;	unspecified, using default values
  5077   200002                     	org	2097154
  5078   200002  0FFF               	dw	4095
  5079                           
  5080                           ;Config register IDLOC2 @ 0x200004
  5081                           ;	unspecified, using default values
  5082   200004                     	org	2097156
  5083   200004  0FFF               	dw	4095
  5084                           
  5085                           ;Config register IDLOC3 @ 0x200006
  5086                           ;	unspecified, using default values
  5087   200006                     	org	2097158
  5088   200006  0FFF               	dw	4095
  5089                           
  5090                           ;Config register IDLOC4 @ 0x200008
  5091                           ;	unspecified, using default values
  5092   200008                     	org	2097160
  5093   200008  0FFF               	dw	4095
  5094                           
  5095                           ;Config register IDLOC5 @ 0x20000A
  5096                           ;	unspecified, using default values
  5097   20000A                     	org	2097162
  5098   20000A  0FFF               	dw	4095
  5099                           
  5100                           ;Config register IDLOC6 @ 0x20000C
  5101                           ;	unspecified, using default values
  5102   20000C                     	org	2097164
  5103   20000C  0FFF               	dw	4095
  5104                           
  5105                           ;Config register IDLOC7 @ 0x20000E
  5106                           ;	unspecified, using default values
  5107   20000E                     	org	2097166
  5108   20000E  0FFF               	dw	4095
  5109                           
  5110                           ;Config register IDLOC8 @ 0x200010
  5111                           ;	unspecified, using default values
  5112   200010                     	org	2097168
  5113   200010  0FFF               	dw	4095
  5114                           
  5115                           ;Config register IDLOC9 @ 0x200012
  5116                           ;	unspecified, using default values
  5117   200012                     	org	2097170
  5118   200012  0FFF               	dw	4095
  5119                           
  5120                           ;Config register IDLOC10 @ 0x200014
  5121                           ;	unspecified, using default values
  5122   200014                     	org	2097172
  5123   200014  0FFF               	dw	4095
  5124                           
  5125                           ;Config register IDLOC11 @ 0x200016
  5126                           ;	unspecified, using default values
  5127   200016                     	org	2097174
  5128   200016  0FFF               	dw	4095
  5129                           
  5130                           ;Config register IDLOC12 @ 0x200018
  5131                           ;	unspecified, using default values
  5132   200018                     	org	2097176
  5133   200018  0FFF               	dw	4095
  5134                           
  5135                           ;Config register IDLOC13 @ 0x20001A
  5136                           ;	unspecified, using default values
  5137   20001A                     	org	2097178
  5138   20001A  0FFF               	dw	4095
  5139                           
  5140                           ;Config register IDLOC14 @ 0x20001C
  5141                           ;	unspecified, using default values
  5142   20001C                     	org	2097180
  5143   20001C  0FFF               	dw	4095
  5144                           
  5145                           ;Config register IDLOC15 @ 0x20001E
  5146                           ;	unspecified, using default values
  5147   20001E                     	org	2097182
  5148   20001E  0FFF               	dw	4095
  5149                           
  5150                           ;Config register IDLOC16 @ 0x200020
  5151                           ;	unspecified, using default values
  5152   200020                     	org	2097184
  5153   200020  0FFF               	dw	4095
  5154                           
  5155                           ;Config register IDLOC17 @ 0x200022
  5156                           ;	unspecified, using default values
  5157   200022                     	org	2097186
  5158   200022  0FFF               	dw	4095
  5159                           
  5160                           ;Config register IDLOC18 @ 0x200024
  5161                           ;	unspecified, using default values
  5162   200024                     	org	2097188
  5163   200024  0FFF               	dw	4095
  5164                           
  5165                           ;Config register IDLOC19 @ 0x200026
  5166                           ;	unspecified, using default values
  5167   200026                     	org	2097190
  5168   200026  0FFF               	dw	4095
  5169                           
  5170                           ;Config register IDLOC20 @ 0x200028
  5171                           ;	unspecified, using default values
  5172   200028                     	org	2097192
  5173   200028  0FFF               	dw	4095
  5174                           
  5175                           ;Config register IDLOC21 @ 0x20002A
  5176                           ;	unspecified, using default values
  5177   20002A                     	org	2097194
  5178   20002A  0FFF               	dw	4095
  5179                           
  5180                           ;Config register IDLOC22 @ 0x20002C
  5181                           ;	unspecified, using default values
  5182   20002C                     	org	2097196
  5183   20002C  0FFF               	dw	4095
  5184                           
  5185                           ;Config register IDLOC23 @ 0x20002E
  5186                           ;	unspecified, using default values
  5187   20002E                     	org	2097198
  5188   20002E  0FFF               	dw	4095
  5189                           
  5190                           ;Config register IDLOC24 @ 0x200030
  5191                           ;	unspecified, using default values
  5192   200030                     	org	2097200
  5193   200030  0FFF               	dw	4095
  5194                           
  5195                           ;Config register IDLOC25 @ 0x200032
  5196                           ;	unspecified, using default values
  5197   200032                     	org	2097202
  5198   200032  0FFF               	dw	4095
  5199                           
  5200                           ;Config register IDLOC26 @ 0x200034
  5201                           ;	unspecified, using default values
  5202   200034                     	org	2097204
  5203   200034  0FFF               	dw	4095
  5204                           
  5205                           ;Config register IDLOC27 @ 0x200036
  5206                           ;	unspecified, using default values
  5207   200036                     	org	2097206
  5208   200036  0FFF               	dw	4095
  5209                           
  5210                           ;Config register IDLOC28 @ 0x200038
  5211                           ;	unspecified, using default values
  5212   200038                     	org	2097208
  5213   200038  0FFF               	dw	4095
  5214                           
  5215                           ;Config register IDLOC29 @ 0x20003A
  5216                           ;	unspecified, using default values
  5217   20003A                     	org	2097210
  5218   20003A  0FFF               	dw	4095
  5219                           
  5220                           ;Config register IDLOC30 @ 0x20003C
  5221                           ;	unspecified, using default values
  5222   20003C                     	org	2097212
  5223   20003C  0FFF               	dw	4095
  5224                           
  5225                           ;Config register IDLOC31 @ 0x20003E
  5226                           ;	unspecified, using default values
  5227   20003E                     	org	2097214
  5228   20003E  0FFF               	dw	4095
  5229                           
  5230                           	psect	config
  5231                           
  5232                           ;Config register CONFIG1 @ 0x300000
  5233                           ;	External Oscillator Selection
  5234                           ;	FEXTOSC = OFF, Oscillator not enabled
  5235                           ;	Reset Oscillator Selection
  5236                           ;	RSTOSC = HFINTOSC_64MHZ, HFINTOSC with HFFRQ = 64 MHz and CDIV = 1:1
  5237   300000                     	org	3145728
  5238   300000  8C                 	db	140
  5239                           
  5240                           ;Config register CONFIG2 @ 0x300001
  5241                           ;	Clock out Enable bit
  5242                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  5243                           ;	PRLOCKED One-Way Set Enable bit
  5244                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  5245                           ;	Clock Switch Enable bit
  5246                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5247                           ;	Fail-Safe Clock Monitor Enable bit
  5248                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  5249   300001                     	org	3145729
  5250   300001  FF                 	db	255
  5251                           
  5252                           ;Config register CONFIG3 @ 0x300002
  5253                           ;	MCLR Enable bit
  5254                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  5255                           ;	Power-up timer selection bits
  5256                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  5257                           ;	Multi-vector enable bit
  5258                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  5259                           ;	IVTLOCK bit One-way set enable bit
  5260                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  5261                           ;	Low Power BOR Enable bit
  5262                           ;	LPBOREN = OFF, Low-Power BOR disabled
  5263                           ;	Brown-out Reset Enable bits
  5264                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  5265   300002                     	org	3145730
  5266   300002  F7                 	db	247
  5267                           
  5268                           ;Config register CONFIG4 @ 0x300003
  5269                           ;	Brown-out Reset Voltage Selection bits
  5270                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  5271                           ;	ZCD Disable bit
  5272                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  5273                           ;	PPSLOCK bit One-Way Set Enable bit
  5274                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  5275                           ;	Stack Full/Underflow Reset Enable bit
  5276                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5277                           ;	Low Voltage Programming Enable bit
  5278                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  5279                           ;	Extended Instruction Set Enable bit
  5280                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  5281   300003                     	org	3145731
  5282   300003  FF                 	db	255
  5283                           
  5284                           ;Config register CONFIG5 @ 0x300004
  5285                           ;	WDT Period selection bits
  5286                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5287                           ;	WDT operating mode
  5288                           ;	WDTE = OFF, WDT Disabled; SWDTEN is ignored
  5289   300004                     	org	3145732
  5290   300004  9F                 	db	159
  5291                           
  5292                           ;Config register CONFIG6 @ 0x300005
  5293                           ;	WDT Window Select bits
  5294                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  5295                           ;	WDT input clock selector
  5296                           ;	WDTCCS = SC, Software Control
  5297   300005                     	org	3145733
  5298   300005  FF                 	db	255
  5299                           
  5300                           ;Config register CONFIG7 @ 0x300006
  5301                           ;	Boot Block Size selection bits
  5302                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  5303                           ;	Boot Block enable bit
  5304                           ;	BBEN = OFF, Boot block disabled
  5305                           ;	Storage Area Flash enable bit
  5306                           ;	SAFEN = OFF, SAF disabled
  5307                           ;	Background Debugger
  5308                           ;	DEBUG = OFF, Background Debugger disabled
  5309   300006                     	org	3145734
  5310   300006  FF                 	db	255
  5311                           
  5312                           ;Config register CONFIG8 @ 0x300007
  5313                           ;	Boot Block Write Protection bit
  5314                           ;	WRTB = OFF, Boot Block not Write protected
  5315                           ;	Configuration Register Write Protection bit
  5316                           ;	WRTC = OFF, Configuration registers not Write protected
  5317                           ;	Data EEPROM Write Protection bit
  5318                           ;	WRTD = OFF, Data EEPROM not Write protected
  5319                           ;	SAF Write protection bit
  5320                           ;	WRTSAF = OFF, SAF not Write Protected
  5321                           ;	Application Block write protection bit
  5322                           ;	WRTAPP = OFF, Application Block not write protected
  5323   300007                     	org	3145735
  5324   300007  FF                 	db	255
  5325                           
  5326                           ; Padding undefined space
  5327   300008                     	org	3145736
  5328   300008  FF                 	db	255
  5329                           
  5330                           ;Config register CONFIG10 @ 0x300009
  5331                           ;	PFM and Data EEPROM Code Protection bit
  5332                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  5333   300009                     	org	3145737
  5334   300009  FF                 	db	255
  5335                           tosu	equ	0x4FF
  5336                           tosh	equ	0x4FE
  5337                           tosl	equ	0x4FD
  5338                           stkptr	equ	0x4FC
  5339                           pclatu	equ	0x4FB
  5340                           pclath	equ	0x4FA
  5341                           pcl	equ	0x4F9
  5342                           tblptru	equ	0x4F8
  5343                           tblptrh	equ	0x4F7
  5344                           tblptrl	equ	0x4F6
  5345                           tablat	equ	0x4F5
  5346                           prodh	equ	0x4F4
  5347                           prodl	equ	0x4F3
  5348                           indf0	equ	0x4EF
  5349                           postinc0	equ	0x4EE
  5350                           postdec0	equ	0x4ED
  5351                           preinc0	equ	0x4EC
  5352                           plusw0	equ	0x4EB
  5353                           fsr0h	equ	0x4EA
  5354                           fsr0l	equ	0x4E9
  5355                           wreg	equ	0x4E8
  5356                           indf1	equ	0x4E7
  5357                           postinc1	equ	0x4E6
  5358                           postdec1	equ	0x4E5
  5359                           preinc1	equ	0x4E4
  5360                           plusw1	equ	0x4E3
  5361                           fsr1h	equ	0x4E2
  5362                           fsr1l	equ	0x4E1
  5363                           bsr	equ	0x4E0
  5364                           indf2	equ	0x4DF
  5365                           postinc2	equ	0x4DE
  5366                           postdec2	equ	0x4DD
  5367                           preinc2	equ	0x4DC
  5368                           plusw2	equ	0x4DB
  5369                           fsr2h	equ	0x4DA
  5370                           fsr2l	equ	0x4D9
  5371                           status	equ	0x4D8

Data Sizes:
    Strings     13
    Constant    1240
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     55      55
    BANK5           160      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0
    BANK32          256      0       0
    BANK33          256      0       0
    BANK34          256      0       0
    BANK35          256      0       0
    BANK36          256      0       0

Pointer List with Targets:

    draw_string@str	PTR unsigned char  size(2) Largest target is 13
		 -> STR_3(CODE[13]), STR_2(CODE[13]), STR_1(CODE[13]), 

    swap_char@num1	PTR unsigned char  size(2) Largest target is 2
		 -> draw_bitmap@y2(COMRAM[2]), draw_bitmap@x1(COMRAM[2]), draw_bitmap@x2(COMRAM[2]), draw_fast_char@x(COMRAM[1]), 
		 -> draw_fast_char@width(COMRAM[1]), set_draw_window@y2(COMRAM[1]), set_draw_window@x2(COMRAM[1]), fill_rectangle@y2(COMRAM[1]), 
		 -> fill_rectangle@x2(COMRAM[1]), fill_rectangle@x1(COMRAM[1]), draw_pixel@x(COMRAM[1]), 

    swap_char@num2	PTR unsigned char  size(2) Largest target is 2
		 -> draw_bitmap@y1(COMRAM[2]), draw_bitmap@y2(COMRAM[2]), draw_fast_char@y(COMRAM[1]), draw_fast_char@height(COMRAM[1]), 
		 -> set_draw_window@y1(COMRAM[1]), set_draw_window@x1(COMRAM[1]), fill_rectangle@y2(COMRAM[1]), fill_rectangle@y1(COMRAM[1]), 
		 -> draw_pixel@y(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_draw_string
    _lcd_init->_delay_ms
    _lcd_init_command_list->_delay_ms
    _delay_ms->___fleq
    ___flsub->___fladd
    ___fleq->___flsub
    _draw_string->_draw_char
    _draw_char->_fill_rectangle
    _fill_rectangle->_set_draw_window
    _draw_pixel->_set_draw_window
    _set_draw_window->_lcd_write_register
    _lcd_write_register->_lcd_write_command
    _lcd_write_register->_lcd_write_data
    _lcd_write_data->_spi_write
    _lcd_write_command->_spi_write

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _main in BANK32

    None.

Critical Paths under _main in BANK33

    None.

Critical Paths under _main in BANK34

    None.

Critical Paths under _main in BANK35

    None.

Critical Paths under _main in BANK36

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   66442
                  _SYSTEM_Initialize
                           _delay_ms
                        _draw_string
                     _fill_rectangle
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0   15458
                           _delay_ms
              _lcd_init_command_list
 ---------------------------------------------------------------------------------
 (2) _lcd_init_command_list                                0     0      0   11603
                           _delay_ms
                 _lcd_write_register
 ---------------------------------------------------------------------------------
 (3) _delay_ms                                            10     6      4    3855
                                             36 COMRAM    10     6      4
                             ___fleq
                            ___flsub
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    2585
                                             16 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    2262
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___fleq                                              12     4      8     494
                                             24 COMRAM    12     4      8
                            ___flsub (ARG)
 ---------------------------------------------------------------------------------
 (1) _draw_string                                         15     9      6   32496
                                             40 COMRAM    15     9      6
                             ___wmul
                          _draw_char
 ---------------------------------------------------------------------------------
 (2) _draw_char                                           15    10      5   29941
                                             25 COMRAM    15    10      5
                             ___wmul
                         _draw_pixel
                     _fill_rectangle
 ---------------------------------------------------------------------------------
 (1) _fill_rectangle                                      15    10      5   14633
                                             10 COMRAM    15    10      5
                     _lcd_write_data
                    _set_draw_window
                          _swap_char
 ---------------------------------------------------------------------------------
 (3) _draw_pixel                                           4     1      3   12963
                                             10 COMRAM     4     1      3
                     _lcd_write_data
                    _set_draw_window
                          _swap_char
 ---------------------------------------------------------------------------------
 (2) _set_draw_window                                      4     1      3   10793
                                              6 COMRAM     4     1      3
                  _lcd_write_command
                 _lcd_write_register
                          _swap_char
 ---------------------------------------------------------------------------------
 (2) _swap_char                                            5     1      4    1783
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _lcd_write_register                                   4     0      4    7748
                                              2 COMRAM     4     0      4
                  _lcd_write_command
                     _lcd_write_data
 ---------------------------------------------------------------------------------
 (4) _lcd_write_data                                       1     1      0      30
                                              1 COMRAM     1     1      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (4) _lcd_write_command                                    1     1      0      30
                                              1 COMRAM     1     1      0
                          _spi_write
 ---------------------------------------------------------------------------------
 (5) _spi_write                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1375
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
   _delay_ms
     ___fleq
       ___flsub (ARG)
         ___fladd
     ___flsub
   _draw_string
     ___wmul
     _draw_char
       ___wmul
       _draw_pixel
         _lcd_write_data
           _spi_write
         _set_draw_window
           _lcd_write_command
             _spi_write
           _lcd_write_register
             _lcd_write_command
             _lcd_write_data
           _swap_char
         _swap_char
       _fill_rectangle
         _lcd_write_data
         _set_draw_window
         _swap_char
   _fill_rectangle
   _lcd_init
     _delay_ms
     _lcd_init_command_list
       _delay_ms
       _lcd_write_register

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     37      37       1       57.9%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      0       0       5        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK21          100      0       0      36        0.0%
BANK21             100      0       0      37        0.0%
BITBANK22          100      0       0      38        0.0%
BANK22             100      0       0      39        0.0%
BITBANK23          100      0       0      40        0.0%
BANK23             100      0       0      41        0.0%
BITBANK24          100      0       0      42        0.0%
BANK24             100      0       0      43        0.0%
ABS                  0      0       0      44        0.0%
BITBANK25          100      0       0      45        0.0%
BANK25             100      0       0      46        0.0%
BITBANK26          100      0       0      47        0.0%
BANK26             100      0       0      48        0.0%
BITBANK27          100      0       0      49        0.0%
BANK27             100      0       0      50        0.0%
BITBANK28          100      0       0      51        0.0%
BANK28             100      0       0      52        0.0%
BITBANK29          100      0       0      53        0.0%
BANK29             100      0       0      54        0.0%
BITBANK30          100      0       0      55        0.0%
BANK30             100      0       0      56        0.0%
BITBANK31          100      0       0      57        0.0%
BANK31             100      0       0      58        0.0%
BITBANK32          100      0       0      59        0.0%
BANK32             100      0       0      60        0.0%
BITBANK33          100      0       0      61        0.0%
BANK33             100      0       0      62        0.0%
BITBANK34          100      0       0      63        0.0%
BANK34             100      0       0      64        0.0%
BITBANK35          100      0       0      65        0.0%
BANK35             100      0       0      66        0.0%
BITBANK36          100      0       0      67        0.0%
BANK36             100      0       0      68        0.0%
BITBIGSFR_1        100      0       0      69        0.0%
BIGRAM            1FFF      0       0      70        0.0%
BITBIGSFRhh         34      0       0      71        0.0%
BITBIGSFRhll         2      0       0      72        0.0%
BITBIGSFRllhhhh      C      0       0      73        0.0%
BITBIGSFRllhhhl     84      0       0      74        0.0%
BITBIGSFRllhhl       3      0       0      75        0.0%
BITBIGSFRllhl        3      0       0      76        0.0%
BITBIGSFRlllh        3      0       0      77        0.0%
BITBIGSFRllllh       3      0       0      78        0.0%
BITBIGSFRlllllh      3      0       0      79        0.0%
BITBIGSFRllllll    176      0       0      80        0.0%
BITBIGSFRllllll     1A      0       0      81        0.0%
BITBIGSFRllllll     52      0       0      82        0.0%
BITBIGSFRllllll      1      0       0      83        0.0%
BITBIGSFRllllll    161      0       0      84        0.0%
BITBIGSFRllllll      1      0       0      85        0.0%
BITBIGSFRllllll      1      0       0      86        0.0%
BITBIGSFRllllll     1F      0       0      87        0.0%
BITBIGSFRllllll      2      0       0      88        0.0%
BITBIGSFRllllll      2      0       0      89        0.0%
BITBIGSFRllllll      1      0       0      90        0.0%
BITBIGSFRllllll     17      0       0      91        0.0%
BITBIGSFRllllll      1      0       0      92        0.0%
BITBIGSFRllllll     60      0       0      93        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Sat Mar 04 17:18:50 2023

       __end_of_set_draw_window 0C88                              u10 10B8                              u11 10B4  
           ___wmul@multiplicand 0503                fill_rectangle@x1 0519                fill_rectangle@x2 050C  
              fill_rectangle@y1 050B                fill_rectangle@y2 050D                             l103 0D3C  
                           l212 10CA                             l133 10A2                             l302 0FA2  
                           l215 106E                             l311 0BBC                             l312 0BBE  
                           l218 1052                             l317 0C86                             l262 10B8  
                           l271 1088                             l327 09B0                             l265 10DA  
                           l346 0F20                             l259 10AA                             l268 10EA  
                           l373 102E                             l277 1008                             l286 0E88  
                           l295 0FDA                             l632 0DE6                             l298 0880  
                           l901 01EE                             l910 04BE                             l902 01DC  
                           l903 01A2                             l918 0308                             l927 03D8  
                           l943 0F66                             l928 03C6                    ?_draw_string 0529  
                           u800 0100                             u720 001A                             u801 00FC  
                           u721 0016                             u810 016E                             u730 002C  
                           u811 016A                             u731 0028                             u900 024C  
                           u820 0186                             u740 003C                             u901 0248  
                           u821 0180                             u741 0038                             u910 026A  
                           u830 0188                             u750 007E                             u911 0266  
                           u751 007A                             u920 02A2                             u840 01B0  
                           u760 0094                             u921 029E                             u841 01AC  
                           u761 0090                             u930 02E8                             u850 01CE  
                           u770 00A6                             u931 02E4                             u851 01CA  
                           u771 00A2                             u940 031E                             u860 01EE  
                           u780 00B6                             u941 031A                             u861 01EA  
                           u781 00B2                             u950 032E                             u870 01FC  
                           u790 00F2                             u951 032A                             u871 01F8  
                           u791 00EE                             u960 035A                             u880 020C  
                           u961 0356                             u881 0208                             u970 036A  
                           u890 023E                             u971 0366                             u891 023A  
                           u980 0386                             u981 0382                             u990 0396  
                           u991 0392         ??_lcd_init_command_list 052F                            l1050 10D2  
                          l2010 08DE                            l2002 0898                            l1052 10D8  
                          l2020 0974                            l2012 090A                            l2004 08D6  
                          l2100 09F0                            l1046 10A6                            l1054 10DE  
                          l2022 0990                            l2014 091A                            l2030 0FC0  
                          l2110 0A6E                            l2102 0A0E                            l1400 1030  
                          l1056 10E2                            l1048 10CE                            l2024 0994  
                          l2016 0936                            l2040 0EF4                            l2032 0E8C  
                          l2112 0A88                            l2104 0A22                            l1402 1054  
                          l1058 10E8                            l2018 0970                            l2042 0EF8  
                          l2034 0E98                            l2026 0FA4                            l2114 0AA6  
                          l2106 0A3C                            l2036 0EA4                            l2028 0FAC  
                          l2108 0A5A                            l2038 0EC4                            l1370 0CAA  
                          l2090 09B2                            l1380 0D12                            l1372 0CBE  
                          l1700 0086                            l2092 09B6                            l1390 0D20  
                          l1382 0D14                            l1374 0CC4                            l1366 0C88  
                          l1462 10BA                            l1710 00C6                            l1702 0094  
                          l2094 09BA                            l1392 0D22                            l1384 0D1A  
                          l1376 0D0E                            l1368 0CA4                            l1800 02A2  
                          l1720 0100                            l1712 00C8                            l1704 0096  
                          l2096 09D4                            l1394 0D28                            l1386 0D1C  
                          l1378 0D10                            l1810 031E                            l1802 02D6  
                          l1730 0114                            l1722 0104                            l1706 00A6  
                          l1714 00D0                            l2098 09D6                            l1388 0D1E  
                          l1396 108A                            l1820 035A                            l1812 032E  
                          l1804 02D8                            l1740 0128                            l1732 0118  
                          l1724 0108                            l1716 00E0                            l1708 00B6  
                          l1900 0F22                            l1398 10A0                            l1670 0FE8  
                          l1910 0D7C                            l1830 0386                            l1822 035C  
                          l1806 02E8                            l1750 013C                            l1742 012C  
                          l1734 011C                            l1726 010C                            l1718 00F2  
                          l1902 0F32                            l1672 0FFC                            l1912 0DAA  
                          l1840 03BE                            l1824 036A                            l1816 0342  
                          l1832 0388                            l1808 02F8                            l1760 019A  
                          l1744 0130                            l1736 0120                            l1728 0110  
                          l1752 0140                            l1680 001C                            l1666 1070  
                          l1930 0B10                            l1922 0AC4                            l1914 0DBA  
                          l1906 0D3E                            l1850 043C                            l1826 0372  
                          l1818 034C                            l1834 0396                            l1770 01D0  
                          l1762 01B0                            l1754 0144                            l1746 0134  
                          l1738 0124                            l1682 002C                            l1690 0056  
                          l1674 0000                            l1668 0FDC                            l1940 0B4C  
                          l1932 0B14                            l1924 0AEC                            l1916 0DDE  
                          l1908 0D6C                            l1860 0482                            l1844 03E8  
                          l1852 043E                            l1836 039A                            l1828 0376  
                          l1780 0220                            l1772 01DA                            l1764 01BC  
                          l1756 016E                            l1748 0138                            l1692 0066  
                          l1684 003C                            l1676 000C                            l1942 0B50  
                          l1934 0B26                            l1926 0AF2                            l1918 0DE4  
                          l1870 04AC                            l1862 0490                            l1854 044E  
                          l1846 03F4                            l1838 03A8                            l1790 025C  
                          l1782 0230                            l1774 01FC                            l1766 01C0  
                          l1758 018A                            l1694 006C                            l1686 004C  
                          l1678 001A                            l1950 0DF0                            l1880 0BE8  
                          l1960 0F84                            l1944 0B84                            l1936 0B34  
                          l1928 0B0C                            l1872 04AE                            l1864 0496  
                          l1856 045E                            l1848 0402                            l1792 026A  
                          l1784 023E                            l1776 020C                            l1768 01CE  
                          l1696 007E                            l1688 004E                            l1952 0E04  
                          l1890 0C44                            l1882 0BFA                            l1962 0F96  
                          l1938 0B40                            l1946 0B88                            l1866 0498  
                          l1858 047E                            l1794 026C                            l1786 024C  
                          l1698 0080                            l1954 0E6E                            l1892 0C56  
                          l1884 0C0E                            l1876 0BC2                            l1964 0F9C  
                          l1956 0F6A                            l1868 049E                            l1796 0276  
                          l1788 0258                            l1948 0DE8                            l1980 0560  
                          l1972 04C0                            l1966 100A                            l1894 0C68  
                          l1886 0C20                            l1878 0BD4                            l1958 0F7E  
                          l1798 027C                            l1990 0858                            l1982 0574  
                          l1974 0524                            l1968 1026                            l1896 0C7A  
                          l1888 0C32                            l1992 086C                            l1984 0588  
                          l1976 0538                            l1898 0C80                            l1994 0884  
                          l1986 05B0                            l1978 054C                            l1996 0890  
                          l1988 05C4                            STR_1 FFF1                            STR_2 FFF1  
                          STR_3 FFF1                            u1000 03A8                            u1001 03A4  
                          u1010 03BE                            u1011 03BA                            u1100 04AC  
                          u1020 03D4                            u1101 04A8                            u1021 03D0  
                          u1110 0BD4                            u1030 03E8                            u1111 0BD0  
                          u1031 03E4                            u1120 0BFA                            u1040 0402  
                          u1121 0BF6                            u1041 03FE                            u1210 090A  
                          u1130 0D6C                            u1050 043C                            u1211 0906  
                          u1131 0D68                            u1051 0438                            u1220 091A  
                          u1204 08F0                            u1140 0DAA                            u1060 044E  
                          u1221 0916                            u1205 08EC                            u1141 0DA6  
                          u1061 044A                            u1230 0990                            u1150 0DDE  
                          u1070 045E                            u1231 098C                            u1151 0DDA  
                          u1071 045A                            u1160 0B84                            u1240 09B0  
                          u1080 047E                            u1161 0B80                            u1241 09AC  
                          u1081 047A                            u1170 0BBC                            u1250 0F20  
                          u1090 0490                            u1171 0BB8                            u1251 0F1C  
                          u1091 048C                            u1180 0E6A                            u1181 0E66  
                          _LATA 0004BE                            u1190 0E88                            _LATB 0004BF  
                          u1191 0E84                            _LATC 0004C0                            _LATD 0004C1  
                          _LATE 0004C2                            _LATF 0004C3                            _PMD0 000060  
                          _PMD1 000061                            _PMD3 000063                            _PMD4 000064  
                          _PMD5 000065                            _PMD6 000066                            _PMD7 000067  
                          _PMD8 000068                            _WPUA 000401                            _WPUB 000409  
                          _WPUC 000411                            _WPUD 000419                            _WPUE 000421  
                          _WPUF 000429          __end_of_lcd_write_data 10DC                            _main 09B2  
      fill_rectangle@colour_low 0518                            fsr1h 0004E2                            fsr2h 0004DA  
                          indf1 0004E7                            indf2 0004DF                            fsr1l 0004E1  
                          fsr2l 0004D9                            prodh 0004F4                            prodl 0004F3  
                          start FFFC                    ___param_bank 000000                     draw_pixel@x 050E  
                   draw_pixel@y 050B   __end_of_OSCILLATOR_Initialize 1070                 __end_of___fladd 04C0  
                         ?_main 0501                 __end_of___flsub 0F68                           _LATA3 0025F3  
                         _LATA4 0025F4                           _LATE2 002612                           _LATD4 00260C  
                         _OSCEN 0000B3                           _TRISA 0004C6                           _TRISB 0004C7  
                         _TRISC 0004C8                           _TRISD 0004C9                           _TRISE 0004CA  
                         _TRISF 0004CB                  delay_ms@millis 0525                           tablat 0004F5  
               ?_lcd_write_data 0501                           status 0004D8                 __initialization 10EC  
                  __end_of_main 0AC2                ?_set_draw_window 0507                          ??_main 0538  
                 __activetblptr 000002                    draw_string@x 0535                    draw_string@y 0529  
                        _ACTCON 0000AC                          _ANSELA 000400                          _ANSELB 000408  
                        _ANSELC 000410                          _ANSELD 000418                          _ANSELE 000420  
                        _ANSELF 000428                          _RB1I2C 000289                          _RB2I2C 000288  
                        _RC3I2C 000287                          _RC4I2C 000286                          _RC4PPS 000215  
                        _ODCONA 000402                          _ODCONB 00040A                          _RC6PPS 000217  
                        _ODCONC 000412                          _ODCOND 00041A                          _ODCONE 000422  
                        _ODCONF 00042A                          _INLVLA 000404                          _INLVLB 00040C  
                        _INLVLC 000414                          _INLVLD 00041C                          _INLVLE 000424  
                        _INLVLF 00042C                          _OSCFRQ 0000B1                 delay_ms@counter 052B  
              __end_of_delay_ms 0E8A                __end_of_lcd_init 0FDC                          ___fleq 0D3E  
                     ??___fladd 0509                          ___wmul 100A                       ??___flsub 0519  
             draw_string@colour 052A                   draw_char@line 0523                   draw_char@size 051E  
                        isa$std 000001                  _PMD_Initialize 1030                    __mediumconst FB18  
                        tblptrh 0004F7                          tblptrl 0004F6                          tblptru 0004F8  
              ??_fill_rectangle 0510               _SYSTEM_Initialize 10BA                      ___fleq@ff1 0519  
                    ___fleq@ff2 051D                      __accesstop 0560         __end_of__initialization 10EC  
                 spi_write@data 0501            fill_rectangle@colour 050E              ?_SYSTEM_Initialize 0501  
                 ___rparam_used 000001                  __pcstackCOMRAM 0501          lcd_write_register@data 0505  
           ??_SYSTEM_Initialize 0501               ??_SPI1_Initialize 0501               __end_of_FontLarge FFF1  
        __end_of_PMD_Initialize 1054           draw_string@char_width 0531              _spi1_configuration FB19  
               draw_string@size 052C       __end_of_SYSTEM_Initialize 10CC           lcd_write_command@data 0502  
 __end_of_lcd_init_command_list 0882                draw_pixel@colour 050C                         ?___fleq 0519  
                       ?___wmul 0501                 ?_PMD_Initialize 0501                         _OSCCON1 0000AD  
                       _OSCCON3 0000AF                       ?_delay_ms 0525                         _SPI1CLK 00008C  
                       _SPI1RXB 000080                         _SPI1TXB 000081                         _OSCTUNE 0000B0  
              ??_lcd_write_data 0502                         _SLRCONA 000403                         _SLRCONB 00040B  
                       _SLRCONC 000413                         _SLRCOND 00041B                         _SLRCONE 000423  
                       _SLRCONF 00042B                       ?_lcd_init 0501                      _draw_pixel 0F68  
            lcd_write_data@data 0502                         __Hparam 0000                         __Lparam 0000  
                       ___fladd 0000               __end_of_draw_char 09B2                         ___flsub 0F22  
                       __pcinit 10EC                         __ramtop 2600                         __ptext0 09B2  
                       __ptext1 0FA4                         __ptext2 04C0                         __ptext3 0DE8  
                       __ptext4 0F22                         __ptext5 0000                         __ptext6 0D3E  
                       __ptext7 0E8A                         __ptext8 0882                         __ptext9 0AC2  
            draw_string@counter 0536           _OSCILLATOR_Initialize 1054        ??_PIN_MANAGER_Initialize 0501  
                    ??_delay_ms 0529                      ??_lcd_init 052F            end_of_initialization 10EC  
                 __Lmediumconst FB18             draw_char@font_index 0521                   swap_char@num1 0501  
                 swap_char@num2 0503                   swap_char@temp 0505                       _SPI1TCNTL 000082  
             __end_of_spi_write 10BA               set_draw_window@x1 050A               set_draw_window@x2 0508  
             set_draw_window@y1 0507               set_draw_window@y2 0509               __end_of_swap_char 100A  
                   ___fladd@grs 0510                       _TRISCbits 0004C8                 fill_rectangle@x 0515  
               fill_rectangle@y 0513                     ?_draw_pixel 050B                 _SPI1_Initialize 108A  
                    draw_char@c 051B                      draw_char@i 0525                      draw_char@j 0527  
                    draw_char@x 0524                      draw_char@y 051A                  __end_of___fleq 0DE8  
                __end_of___wmul 1030          ?_OSCILLATOR_Initialize 0501                   ??_draw_string 052F  
                     _FontLarge FB1E             start_initialization 10EC                        ??___fleq 0521  
              ??_PMD_Initialize 0501                        ??___wmul 0505              delay_ms@multiplier 0529  
    __end_of_lcd_write_register 108A                       ___fladd@a 0505                       ___fladd@b 0501  
                     ___flsub@a 0515                       ___flsub@b 0511           lcd_write_register@reg 0503  
       __end_of_SPI1_Initialize 10A4             __end_of_draw_string 0F22               ??_set_draw_window 050A  
                draw_string@str 052D           _lcd_init_command_list 04C0          _PIN_MANAGER_Initialize 0C88  
                 __pmediumconst FB18                        ?___fladd 0501                        ?___flsub 0511  
                     _draw_char 0882       fill_rectangle@colour_high 0517                  ___wmul@product 0505  
                  _SPI1CON0bits 000084                        _SPI1BAUD 000089                        _PIR3bits 0004B1  
                      _SPI1CON0 000084                        _SPI1CON1 000085                        _SPI1CON2 000086  
                     _spi_write 10A4                      ?_draw_char 051A               ___wmul@multiplier 0501  
                     _swap_char 0FDC                     _draw_string 0E8A                ?_SPI1_Initialize 0501  
                  ??_draw_pixel 050E          ?_lcd_init_command_list 0501                        __Hrparam 0000  
                      __Lrparam 0000         ??_OSCILLATOR_Initialize 0501                      ?_spi_write 0501  
            __end_of_draw_pixel 0FA4             draw_string@char_pos 0533                      ?_swap_char 0501  
                      _delay_ms 0DE8                        __ptext10 0F68                        __ptext11 0BC0  
                      __ptext20 1030                        __ptext12 0FDC                        __ptext21 0C88  
                      __ptext13 1070                        __ptext22 1054                        __ptext14 10CC  
                      __ptext15 10DC                        __ptext16 10A4                        __ptext17 100A  
                      __ptext18 10BA                        __ptext19 108A                 draw_char@colour 051C  
                      _lcd_init 0FA4                  _fill_rectangle 0AC2                        isa$xinst 000000  
                   ??_draw_char 051F                 _set_draw_window 0BC0              _lcd_write_register 1070  
        __end_of_fill_rectangle 0BC0         ?_PIN_MANAGER_Initialize 0501             ?_lcd_write_register 0503  
                    _SPI1SDIPPS 00026B                      _SPI1SCKPPS 00026A               _lcd_write_command 10DC  
                   ??_spi_write 0501              ?_lcd_write_command 0501            ??_lcd_write_register 0507  
                   ??_swap_char 0505             ??_lcd_write_command 0502                   ___fladd@signs 050D  
__end_of_PIN_MANAGER_Initialize 0D3E                 ?_fill_rectangle 050B                    ___fladd@aexp 050E  
                  ___fladd@bexp 050F                  _lcd_write_data 10CC      __end_of_spi1_configuration FB1E  
     __end_of_lcd_write_command 10EC  
